//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace WarringtonSharePointService.SharePointService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://CTechWS.com/CTechWS")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BCNObject))]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateWorkerStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseServiceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddServiceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWorkerAssigmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkerAssigmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkerAssigmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkerAssigmentsByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkflowRptSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallRptAllSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallRptAcctTypeSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallRptAcctTypeSummaryDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallRptPhoneSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInactiveCallerInfoByIdDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildBCSCodeDefOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptDataSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptScheduledCallsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptMemberCallsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptCallerCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptCallerCountsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptBcsMinMaxCountsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallStatusByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptCallerByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptCallerCountsByDayHrOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptReceivedReferralsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptBcsTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptBcsTestByAcctCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptBillingOperationCompleted;
        
        private System.Threading.SendOrPostCallback RptDashboardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferralsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMemberNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMemberNotesTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountTypeCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberNotesTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotesByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReferralOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReferralOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsConnectionValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessHealthVaultDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBCSTestLogProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBcsTestLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBCSLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBCSLog2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBCSTestLogHVOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBcsTestLogHVProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicationByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicationByNameStgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicationByNameStgPakOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProviderPrefByMemberIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProviderPrefByProviderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProviderPrefByProvIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderPrefListByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderPrefListByMemberIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderInfoByMemberIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProviderPrefInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProviderPrefInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMemberProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileByMemberIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMemberProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShortCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllShortCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateShortCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddShortCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteShortCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback MSTranslateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnectMobileCaregiverOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContactInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProviderPrefInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContactInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupMessageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMemberMessageInfoWithDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberMessageInfoWithDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberMessageResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberMessageResponsesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMemberMessageInfoWithDatesIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupMessageInfoWithDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMessageResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContactInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchiveBcsTestLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContactInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToBCNetworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback TranferToNewNetworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFromBCNetworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMemberReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddScheduleInfoTZOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddScheduleInfoResponseTZOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddScheduleInfoRandomTZOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupScheduleInfoTZOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNowScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNowGroupScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNowCGGroupScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateScheduleInfoTZOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelGroupScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMemberScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurgeMemberByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurgeMemberByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMemberLogonAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMemberLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMessagesByAcctTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelMessagesByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallerMemberIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTestMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTestMsgInternationalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTestMsgInternationalAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTestMsgInternational2OperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifiyAllCareGiversOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifiyAllNetworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifiyAllSponsorshipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNotificationMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAllCGMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactNextBackupOperationCompleted;
        
        private System.Threading.SendOrPostCallback BroadcastAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback BroadcastWAPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LookupSMSAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVoiceSubscriberInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWebBuddyCallScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWebBuddySubscriberInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWebSubscriberInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoFromScheduleXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoFromScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPINOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEASAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWEPScheduleAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWEPMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWEPMembershipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWEPMembershipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWEPMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWEPMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWEPMembersScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWEPMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildPromptOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildErrorPromptOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertGMTToCurrentDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertFromGMTDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcGMTMinTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcGMTDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkerMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePswdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateUniquePhoneIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogonUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLicKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUplineSponsorDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUplineSponsorOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildSMSAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallInfoByIDDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallInfoByPhoneDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDupCheckPhoneNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallInfoByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBuddysByCaregiverPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBuddysByCaregiverIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallInfoByFullNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallInfoByLtNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAuthorizedToAddMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanViewMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserSalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserMgrOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRegisteredPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesInfoByAcctOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesInfoByToOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesResponseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertToSmsAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllContactListByMemberIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactListByRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScheduleInfoSecureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubCategoryScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsProviderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsProviderInfoByAddrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZipcodeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProvidersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProvidersDefaultInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProvidersInfoByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallerInfoByExtRefIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscribersInfoAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscribersInfoByAcctTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscribersInfoBySponIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscribersInfoByNetworkIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscribersInfoByAcctTypeCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscribersInfoLikeAcctTypeCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscribersInfoByTypeCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkedSubscribersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSubscriberInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSubscriberInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback TurnScheduledCallOffOperationCompleted;
        
        private System.Threading.SendOrPostCallback TurnAllMemberCallsOffOperationCompleted;
        
        private System.Threading.SendOrPostCallback TurnAllMemberCallsOffByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCallLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCallQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallQueueByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCallQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCallQueueByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCallLogBCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFinalCallLogBCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewNetworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetLoginOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::WarringtonSharePointService.Properties.Settings.Default.WarringtonSharePointService_SharePointService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateWorkerStatusCompletedEventHandler UpdateWorkerStatusCompleted;
        
        /// <remarks/>
        public event CloseServiceRequestCompletedEventHandler CloseServiceRequestCompleted;
        
        /// <remarks/>
        public event AddServiceRequestCompletedEventHandler AddServiceRequestCompleted;
        
        /// <remarks/>
        public event AddWorkerAssigmentCompletedEventHandler AddWorkerAssigmentCompleted;
        
        /// <remarks/>
        public event UpdateWorkerAssigmentCompletedEventHandler UpdateWorkerAssigmentCompleted;
        
        /// <remarks/>
        public event GetWorkerAssigmentsCompletedEventHandler GetWorkerAssigmentsCompleted;
        
        /// <remarks/>
        public event GetWorkerAssigmentsByTypeCompletedEventHandler GetWorkerAssigmentsByTypeCompleted;
        
        /// <remarks/>
        public event WorkflowRptSummaryCompletedEventHandler WorkflowRptSummaryCompleted;
        
        /// <remarks/>
        public event CallRptAllSummaryCompletedEventHandler CallRptAllSummaryCompleted;
        
        /// <remarks/>
        public event CallRptAcctTypeSummaryCompletedEventHandler CallRptAcctTypeSummaryCompleted;
        
        /// <remarks/>
        public event CallRptAcctTypeSummaryDatesCompletedEventHandler CallRptAcctTypeSummaryDatesCompleted;
        
        /// <remarks/>
        public event CallRptPhoneSummaryCompletedEventHandler CallRptPhoneSummaryCompleted;
        
        /// <remarks/>
        public event GetInactiveCallerInfoByIdDSCompletedEventHandler GetInactiveCallerInfoByIdDSCompleted;
        
        /// <remarks/>
        public event BuildBCSCodeDefCompletedEventHandler BuildBCSCodeDefCompleted;
        
        /// <remarks/>
        public event RptDataSummaryCompletedEventHandler RptDataSummaryCompleted;
        
        /// <remarks/>
        public event RptScheduledCallsCompletedEventHandler RptScheduledCallsCompleted;
        
        /// <remarks/>
        public event RptMemberCallsCompletedEventHandler RptMemberCallsCompleted;
        
        /// <remarks/>
        public event RptCallerCountsCompletedEventHandler RptCallerCountsCompleted;
        
        /// <remarks/>
        public event RptCallerCountsByDateCompletedEventHandler RptCallerCountsByDateCompleted;
        
        /// <remarks/>
        public event RptBcsMinMaxCountsByDateCompletedEventHandler RptBcsMinMaxCountsByDateCompleted;
        
        /// <remarks/>
        public event GetCallStatusByPhoneCompletedEventHandler GetCallStatusByPhoneCompleted;
        
        /// <remarks/>
        public event GetCallStatusCompletedEventHandler GetCallStatusCompleted;
        
        /// <remarks/>
        public event RptCallerByPhoneCompletedEventHandler RptCallerByPhoneCompleted;
        
        /// <remarks/>
        public event RptCallerCountsByDayHrCompletedEventHandler RptCallerCountsByDayHrCompleted;
        
        /// <remarks/>
        public event RptReceivedReferralsCompletedEventHandler RptReceivedReferralsCompleted;
        
        /// <remarks/>
        public event RptBcsTestDataCompletedEventHandler RptBcsTestDataCompleted;
        
        /// <remarks/>
        public event RptBcsTestByAcctCodeCompletedEventHandler RptBcsTestByAcctCodeCompleted;
        
        /// <remarks/>
        public event RptBillingCompletedEventHandler RptBillingCompleted;
        
        /// <remarks/>
        public event RptDashboardCompletedEventHandler RptDashboardCompleted;
        
        /// <remarks/>
        public event GetReferralsCompletedEventHandler GetReferralsCompleted;
        
        /// <remarks/>
        public event AddMemberNotesCompletedEventHandler AddMemberNotesCompleted;
        
        /// <remarks/>
        public event AddMemberNotesTestCompletedEventHandler AddMemberNotesTestCompleted;
        
        /// <remarks/>
        public event UpdateMemberNotesCompletedEventHandler UpdateMemberNotesCompleted;
        
        /// <remarks/>
        public event UpdateAccountTypeCodeCompletedEventHandler UpdateAccountTypeCodeCompleted;
        
        /// <remarks/>
        public event GetMemberNotesCompletedEventHandler GetMemberNotesCompleted;
        
        /// <remarks/>
        public event GetMemberNotesTestCompletedEventHandler GetMemberNotesTestCompleted;
        
        /// <remarks/>
        public event GetNotesByIDCompletedEventHandler GetNotesByIDCompleted;
        
        /// <remarks/>
        public event SaveReferralCompletedEventHandler SaveReferralCompleted;
        
        /// <remarks/>
        public event UpdateReferralCompletedEventHandler UpdateReferralCompleted;
        
        /// <remarks/>
        public event IsConnectionValidCompletedEventHandler IsConnectionValidCompleted;
        
        /// <remarks/>
        public event ProcessHealthVaultDataCompletedEventHandler ProcessHealthVaultDataCompleted;
        
        /// <remarks/>
        public event AddBCSTestLogProfileCompletedEventHandler AddBCSTestLogProfileCompleted;
        
        /// <remarks/>
        public event UpdateBcsTestLogCompletedEventHandler UpdateBcsTestLogCompleted;
        
        /// <remarks/>
        public event UpdateBCSLogCompletedEventHandler UpdateBCSLogCompleted;
        
        /// <remarks/>
        public event UpdateBCSLog2CompletedEventHandler UpdateBCSLog2Completed;
        
        /// <remarks/>
        public event AddBCSTestLogHVCompletedEventHandler AddBCSTestLogHVCompleted;
        
        /// <remarks/>
        public event AddBcsTestLogHVProfileCompletedEventHandler AddBcsTestLogHVProfileCompleted;
        
        /// <remarks/>
        public event GetMedicationByNameCompletedEventHandler GetMedicationByNameCompleted;
        
        /// <remarks/>
        public event GetMedicationByNameStgCompletedEventHandler GetMedicationByNameStgCompleted;
        
        /// <remarks/>
        public event GetMedicationByNameStgPakCompletedEventHandler GetMedicationByNameStgPakCompleted;
        
        /// <remarks/>
        public event GetAllProviderPrefByMemberIDCompletedEventHandler GetAllProviderPrefByMemberIDCompleted;
        
        /// <remarks/>
        public event GetAllProviderPrefByProviderIDCompletedEventHandler GetAllProviderPrefByProviderIDCompleted;
        
        /// <remarks/>
        public event GetAllProviderPrefByProvIDCompletedEventHandler GetAllProviderPrefByProvIDCompleted;
        
        /// <remarks/>
        public event GetProviderPrefListByTypeCompletedEventHandler GetProviderPrefListByTypeCompleted;
        
        /// <remarks/>
        public event GetProviderPrefListByMemberIDCompletedEventHandler GetProviderPrefListByMemberIDCompleted;
        
        /// <remarks/>
        public event GetProviderInfoByMemberIDCompletedEventHandler GetProviderInfoByMemberIDCompleted;
        
        /// <remarks/>
        public event UpdateProviderPrefInfoCompletedEventHandler UpdateProviderPrefInfoCompleted;
        
        /// <remarks/>
        public event DeleteProviderPrefInfoCompletedEventHandler DeleteProviderPrefInfoCompleted;
        
        /// <remarks/>
        public event LoadMemberProfileCompletedEventHandler LoadMemberProfileCompleted;
        
        /// <remarks/>
        public event GetProfileByMemberIDCompletedEventHandler GetProfileByMemberIDCompleted;
        
        /// <remarks/>
        public event SaveMemberProfileCompletedEventHandler SaveMemberProfileCompleted;
        
        /// <remarks/>
        public event UpdateMemberProfileCompletedEventHandler UpdateMemberProfileCompleted;
        
        /// <remarks/>
        public event GetShortCodesCompletedEventHandler GetShortCodesCompleted;
        
        /// <remarks/>
        public event GetAllShortCodesCompletedEventHandler GetAllShortCodesCompleted;
        
        /// <remarks/>
        public event UpdateShortCodesCompletedEventHandler UpdateShortCodesCompleted;
        
        /// <remarks/>
        public event AddShortCodeCompletedEventHandler AddShortCodeCompleted;
        
        /// <remarks/>
        public event DeleteShortCodeCompletedEventHandler DeleteShortCodeCompleted;
        
        /// <remarks/>
        public event MSTranslateCompletedEventHandler MSTranslateCompleted;
        
        /// <remarks/>
        public event ConnectMobileCaregiverCompletedEventHandler ConnectMobileCaregiverCompleted;
        
        /// <remarks/>
        public event AddContactInfoCompletedEventHandler AddContactInfoCompleted;
        
        /// <remarks/>
        public event AddProviderPrefInfoCompletedEventHandler AddProviderPrefInfoCompleted;
        
        /// <remarks/>
        public event AddContactInfoByIDCompletedEventHandler AddContactInfoByIDCompleted;
        
        /// <remarks/>
        public event AddGroupMessageInfoCompletedEventHandler AddGroupMessageInfoCompleted;
        
        /// <remarks/>
        public event AddMemberMessageInfoWithDatesCompletedEventHandler AddMemberMessageInfoWithDatesCompleted;
        
        /// <remarks/>
        public event UpdateMemberMessageInfoWithDatesCompletedEventHandler UpdateMemberMessageInfoWithDatesCompleted;
        
        /// <remarks/>
        public event UpdateMemberMessageResponseCompletedEventHandler UpdateMemberMessageResponseCompleted;
        
        /// <remarks/>
        public event UpdateMemberMessageResponsesCompletedEventHandler UpdateMemberMessageResponsesCompleted;
        
        /// <remarks/>
        public event AddMemberMessageInfoWithDatesIDCompletedEventHandler AddMemberMessageInfoWithDatesIDCompleted;
        
        /// <remarks/>
        public event AddGroupMessageInfoWithDatesCompletedEventHandler AddGroupMessageInfoWithDatesCompleted;
        
        /// <remarks/>
        public event AddMessageResponseCompletedEventHandler AddMessageResponseCompleted;
        
        /// <remarks/>
        public event UpdateContactInfoCompletedEventHandler UpdateContactInfoCompleted;
        
        /// <remarks/>
        public event ArchiveBcsTestLogCompletedEventHandler ArchiveBcsTestLogCompleted;
        
        /// <remarks/>
        public event DeleteContactInfoCompletedEventHandler DeleteContactInfoCompleted;
        
        /// <remarks/>
        public event AddToBCNetworkCompletedEventHandler AddToBCNetworkCompleted;
        
        /// <remarks/>
        public event TranferToNewNetworkCompletedEventHandler TranferToNewNetworkCompleted;
        
        /// <remarks/>
        public event RemoveFromBCNetworkCompletedEventHandler RemoveFromBCNetworkCompleted;
        
        /// <remarks/>
        public event AddScheduleInfoCompletedEventHandler AddScheduleInfoCompleted;
        
        /// <remarks/>
        public event AddMemberReminderCompletedEventHandler AddMemberReminderCompleted;
        
        /// <remarks/>
        public event AddScheduleInfoTZCompletedEventHandler AddScheduleInfoTZCompleted;
        
        /// <remarks/>
        public event AddScheduleInfoResponseTZCompletedEventHandler AddScheduleInfoResponseTZCompleted;
        
        /// <remarks/>
        public event AddScheduleInfoRandomTZCompletedEventHandler AddScheduleInfoRandomTZCompleted;
        
        /// <remarks/>
        public event AddGroupScheduleInfoTZCompletedEventHandler AddGroupScheduleInfoTZCompleted;
        
        /// <remarks/>
        public event AddNowScheduleInfoCompletedEventHandler AddNowScheduleInfoCompleted;
        
        /// <remarks/>
        public event AddNowGroupScheduleInfoCompletedEventHandler AddNowGroupScheduleInfoCompleted;
        
        /// <remarks/>
        public event AddNowCGGroupScheduleInfoCompletedEventHandler AddNowCGGroupScheduleInfoCompleted;
        
        /// <remarks/>
        public event UpdateScheduleInfoCompletedEventHandler UpdateScheduleInfoCompleted;
        
        /// <remarks/>
        public event UpdateScheduleInfoTZCompletedEventHandler UpdateScheduleInfoTZCompleted;
        
        /// <remarks/>
        public event DelGroupScheduleInfoCompletedEventHandler DelGroupScheduleInfoCompleted;
        
        /// <remarks/>
        public event DelScheduleInfoCompletedEventHandler DelScheduleInfoCompleted;
        
        /// <remarks/>
        public event DelMemberScheduleInfoCompletedEventHandler DelMemberScheduleInfoCompleted;
        
        /// <remarks/>
        public event PurgeMemberByIDCompletedEventHandler PurgeMemberByIDCompleted;
        
        /// <remarks/>
        public event PurgeMemberByPhoneCompletedEventHandler PurgeMemberByPhoneCompleted;
        
        /// <remarks/>
        public event DelMemberLogonAllCompletedEventHandler DelMemberLogonAllCompleted;
        
        /// <remarks/>
        public event DelMemberLogonCompletedEventHandler DelMemberLogonCompleted;
        
        /// <remarks/>
        public event DelMessagesByAcctTypeCompletedEventHandler DelMessagesByAcctTypeCompleted;
        
        /// <remarks/>
        public event DelMessagesByIDCompletedEventHandler DelMessagesByIDCompleted;
        
        /// <remarks/>
        public event GetCallerMemberIDCompletedEventHandler GetCallerMemberIDCompleted;
        
        /// <remarks/>
        public event SendTestMsgCompletedEventHandler SendTestMsgCompleted;
        
        /// <remarks/>
        public event SendTestMsgInternationalCompletedEventHandler SendTestMsgInternationalCompleted;
        
        /// <remarks/>
        public event SendTestMsgInternationalAttachmentsCompletedEventHandler SendTestMsgInternationalAttachmentsCompleted;
        
        /// <remarks/>
        public event SendTestMsgInternational2CompletedEventHandler SendTestMsgInternational2Completed;
        
        /// <remarks/>
        public event NotifiyAllCareGiversCompletedEventHandler NotifiyAllCareGiversCompleted;
        
        /// <remarks/>
        public event NotifiyAllNetworkCompletedEventHandler NotifiyAllNetworkCompleted;
        
        /// <remarks/>
        public event NotifiyAllSponsorshipsCompletedEventHandler NotifiyAllSponsorshipsCompleted;
        
        /// <remarks/>
        public event SendNotificationMsgCompletedEventHandler SendNotificationMsgCompleted;
        
        /// <remarks/>
        public event SendAllCGMsgCompletedEventHandler SendAllCGMsgCompleted;
        
        /// <remarks/>
        public event ContactNextBackupCompletedEventHandler ContactNextBackupCompleted;
        
        /// <remarks/>
        public event BroadcastAlertCompletedEventHandler BroadcastAlertCompleted;
        
        /// <remarks/>
        public event BroadcastWAPCompletedEventHandler BroadcastWAPCompleted;
        
        /// <remarks/>
        public event LookupSMSAddressCompletedEventHandler LookupSMSAddressCompleted;
        
        /// <remarks/>
        public event AddVoiceSubscriberInfoCompletedEventHandler AddVoiceSubscriberInfoCompleted;
        
        /// <remarks/>
        public event AddWebBuddyCallScheduleCompletedEventHandler AddWebBuddyCallScheduleCompleted;
        
        /// <remarks/>
        public event AddWebBuddySubscriberInfoCompletedEventHandler AddWebBuddySubscriberInfoCompleted;
        
        /// <remarks/>
        public event AddWebSubscriberInfoCompletedEventHandler AddWebSubscriberInfoCompleted;
        
        /// <remarks/>
        public event GetInfoFromScheduleXMLCompletedEventHandler GetInfoFromScheduleXMLCompleted;
        
        /// <remarks/>
        public event GetInfoFromScheduleCompletedEventHandler GetInfoFromScheduleCompleted;
        
        /// <remarks/>
        public event ResetPINCompletedEventHandler ResetPINCompleted;
        
        /// <remarks/>
        public event SendEASAlertsCompletedEventHandler SendEASAlertsCompleted;
        
        /// <remarks/>
        public event AddWEPScheduleAlertCompletedEventHandler AddWEPScheduleAlertCompleted;
        
        /// <remarks/>
        public event AddWEPMembershipCompletedEventHandler AddWEPMembershipCompleted;
        
        /// <remarks/>
        public event AddWEPMembershipsCompletedEventHandler AddWEPMembershipsCompleted;
        
        /// <remarks/>
        public event UpdateWEPMembershipsCompletedEventHandler UpdateWEPMembershipsCompleted;
        
        /// <remarks/>
        public event UpdateWEPMembershipCompletedEventHandler UpdateWEPMembershipCompleted;
        
        /// <remarks/>
        public event GetWEPMembersCompletedEventHandler GetWEPMembersCompleted;
        
        /// <remarks/>
        public event GetWEPMembersScheduleCompletedEventHandler GetWEPMembersScheduleCompleted;
        
        /// <remarks/>
        public event DeleteWEPMembershipCompletedEventHandler DeleteWEPMembershipCompleted;
        
        /// <remarks/>
        public event BuildPromptCompletedEventHandler BuildPromptCompleted;
        
        /// <remarks/>
        public event BuildErrorPromptCompletedEventHandler BuildErrorPromptCompleted;
        
        /// <remarks/>
        public event ConvertGMTToCurrentDateCompletedEventHandler ConvertGMTToCurrentDateCompleted;
        
        /// <remarks/>
        public event ConvertFromGMTDateTimeCompletedEventHandler ConvertFromGMTDateTimeCompleted;
        
        /// <remarks/>
        public event CalcGMTMinTimeCompletedEventHandler CalcGMTMinTimeCompleted;
        
        /// <remarks/>
        public event CalcGMTDateCompletedEventHandler CalcGMTDateCompleted;
        
        /// <remarks/>
        public event UpdateWorkerMessageCompletedEventHandler UpdateWorkerMessageCompleted;
        
        /// <remarks/>
        public event GetLogonCompletedEventHandler GetLogonCompleted;
        
        /// <remarks/>
        public event GeneratePswdCompletedEventHandler GeneratePswdCompleted;
        
        /// <remarks/>
        public event GenerateUniquePhoneIDCompletedEventHandler GenerateUniquePhoneIDCompleted;
        
        /// <remarks/>
        public event GetLogonUserInfoCompletedEventHandler GetLogonUserInfoCompleted;
        
        /// <remarks/>
        public event GetUserLicKeyCompletedEventHandler GetUserLicKeyCompleted;
        
        /// <remarks/>
        public event GetUplineSponsorDSCompletedEventHandler GetUplineSponsorDSCompleted;
        
        /// <remarks/>
        public event GetUplineSponsorCompletedEventHandler GetUplineSponsorCompleted;
        
        /// <remarks/>
        public event BuildSMSAddressCompletedEventHandler BuildSMSAddressCompleted;
        
        /// <remarks/>
        public event GetCallInfoByIDDSCompletedEventHandler GetCallInfoByIDDSCompleted;
        
        /// <remarks/>
        public event GetCallInfoByPhoneDSCompletedEventHandler GetCallInfoByPhoneDSCompleted;
        
        /// <remarks/>
        public event GetDupCheckPhoneNumbersCompletedEventHandler GetDupCheckPhoneNumbersCompleted;
        
        /// <remarks/>
        public event GetCallInfoByIDCompletedEventHandler GetCallInfoByIDCompleted;
        
        /// <remarks/>
        public event GetCallInfoByPhoneCompletedEventHandler GetCallInfoByPhoneCompleted;
        
        /// <remarks/>
        public event GetAllBuddysByCaregiverPhoneCompletedEventHandler GetAllBuddysByCaregiverPhoneCompleted;
        
        /// <remarks/>
        public event GetAllBuddysByCaregiverIDCompletedEventHandler GetAllBuddysByCaregiverIDCompleted;
        
        /// <remarks/>
        public event GetCallInfoByFullNameCompletedEventHandler GetCallInfoByFullNameCompleted;
        
        /// <remarks/>
        public event GetCallInfoByLtNameCompletedEventHandler GetCallInfoByLtNameCompleted;
        
        /// <remarks/>
        public event IsAuthorizedToAddMemberCompletedEventHandler IsAuthorizedToAddMemberCompleted;
        
        /// <remarks/>
        public event CanViewMemberCompletedEventHandler CanViewMemberCompleted;
        
        /// <remarks/>
        public event IsUserSalesCompletedEventHandler IsUserSalesCompleted;
        
        /// <remarks/>
        public event IsUserMgrCompletedEventHandler IsUserMgrCompleted;
        
        /// <remarks/>
        public event IsUserOwnerCompletedEventHandler IsUserOwnerCompleted;
        
        /// <remarks/>
        public event IsRegisteredPhoneCompletedEventHandler IsRegisteredPhoneCompleted;
        
        /// <remarks/>
        public event IsUserAdminCompletedEventHandler IsUserAdminCompleted;
        
        /// <remarks/>
        public event GetMessagesInfoByAcctCompletedEventHandler GetMessagesInfoByAcctCompleted;
        
        /// <remarks/>
        public event GetMessagesInfoByToCompletedEventHandler GetMessagesInfoByToCompleted;
        
        /// <remarks/>
        public event GetMessagesResponseInfoCompletedEventHandler GetMessagesResponseInfoCompleted;
        
        /// <remarks/>
        public event GetMessagesInfoCompletedEventHandler GetMessagesInfoCompleted;
        
        /// <remarks/>
        public event ConvertToSmsAddressCompletedEventHandler ConvertToSmsAddressCompleted;
        
        /// <remarks/>
        public event GetAllContactListByMemberIDCompletedEventHandler GetAllContactListByMemberIDCompleted;
        
        /// <remarks/>
        public event GetContactListByRoleCompletedEventHandler GetContactListByRoleCompleted;
        
        /// <remarks/>
        public event GetScheduleInfoCompletedEventHandler GetScheduleInfoCompleted;
        
        /// <remarks/>
        public event GetAllScheduleInfoCompletedEventHandler GetAllScheduleInfoCompleted;
        
        /// <remarks/>
        public event GetAllScheduleInfoSecureCompletedEventHandler GetAllScheduleInfoSecureCompleted;
        
        /// <remarks/>
        public event GetSingleScheduleInfoCompletedEventHandler GetSingleScheduleInfoCompleted;
        
        /// <remarks/>
        public event GetCategoryScheduleInfoCompletedEventHandler GetCategoryScheduleInfoCompleted;
        
        /// <remarks/>
        public event GetSubCategoryScheduleInfoCompletedEventHandler GetSubCategoryScheduleInfoCompleted;
        
        /// <remarks/>
        public event GetSmsProviderInfoCompletedEventHandler GetSmsProviderInfoCompleted;
        
        /// <remarks/>
        public event GetSmsProviderInfoByAddrCompletedEventHandler GetSmsProviderInfoByAddrCompleted;
        
        /// <remarks/>
        public event GetZipcodeInfoCompletedEventHandler GetZipcodeInfoCompleted;
        
        /// <remarks/>
        public event GetAccountTypesCompletedEventHandler GetAccountTypesCompleted;
        
        /// <remarks/>
        public event GetProviderTypesCompletedEventHandler GetProviderTypesCompleted;
        
        /// <remarks/>
        public event GetProvidersInfoCompletedEventHandler GetProvidersInfoCompleted;
        
        /// <remarks/>
        public event GetProvidersDefaultInfoCompletedEventHandler GetProvidersDefaultInfoCompleted;
        
        /// <remarks/>
        public event GetProvidersInfoByTypeCompletedEventHandler GetProvidersInfoByTypeCompleted;
        
        /// <remarks/>
        public event GetCallerInfoByExtRefIDCompletedEventHandler GetCallerInfoByExtRefIDCompleted;
        
        /// <remarks/>
        public event GetSubscribersInfoAdminCompletedEventHandler GetSubscribersInfoAdminCompleted;
        
        /// <remarks/>
        public event GetSubscribersInfoByAcctTypeCompletedEventHandler GetSubscribersInfoByAcctTypeCompleted;
        
        /// <remarks/>
        public event GetSubscribersInfoBySponIDCompletedEventHandler GetSubscribersInfoBySponIDCompleted;
        
        /// <remarks/>
        public event GetSubscribersInfoByNetworkIDCompletedEventHandler GetSubscribersInfoByNetworkIDCompleted;
        
        /// <remarks/>
        public event GetSubscribersInfoByAcctTypeCodeCompletedEventHandler GetSubscribersInfoByAcctTypeCodeCompleted;
        
        /// <remarks/>
        public event GetSubscribersInfoLikeAcctTypeCodeCompletedEventHandler GetSubscribersInfoLikeAcctTypeCodeCompleted;
        
        /// <remarks/>
        public event GetSubscribersInfoByTypeCDCompletedEventHandler GetSubscribersInfoByTypeCDCompleted;
        
        /// <remarks/>
        public event GetLinkedSubscribersInfoCompletedEventHandler GetLinkedSubscribersInfoCompleted;
        
        /// <remarks/>
        public event AddSubscriberInfoCompletedEventHandler AddSubscriberInfoCompleted;
        
        /// <remarks/>
        public event UpdateSubscriberInfoCompletedEventHandler UpdateSubscriberInfoCompleted;
        
        /// <remarks/>
        public event TurnScheduledCallOffCompletedEventHandler TurnScheduledCallOffCompleted;
        
        /// <remarks/>
        public event TurnAllMemberCallsOffCompletedEventHandler TurnAllMemberCallsOffCompleted;
        
        /// <remarks/>
        public event TurnAllMemberCallsOffByIDCompletedEventHandler TurnAllMemberCallsOffByIDCompleted;
        
        /// <remarks/>
        public event AddCallLogCompletedEventHandler AddCallLogCompleted;
        
        /// <remarks/>
        public event AddCallQueueCompletedEventHandler AddCallQueueCompleted;
        
        /// <remarks/>
        public event GetCallQueueCompletedEventHandler GetCallQueueCompleted;
        
        /// <remarks/>
        public event GetCallQueueByPhoneCompletedEventHandler GetCallQueueByPhoneCompleted;
        
        /// <remarks/>
        public event DeleteCallQueueCompletedEventHandler DeleteCallQueueCompleted;
        
        /// <remarks/>
        public event DeleteCallQueueByPhoneCompletedEventHandler DeleteCallQueueByPhoneCompleted;
        
        /// <remarks/>
        public event AddCallLogBCNCompletedEventHandler AddCallLogBCNCompleted;
        
        /// <remarks/>
        public event AddFinalCallLogBCNCompletedEventHandler AddFinalCallLogBCNCompleted;
        
        /// <remarks/>
        public event AddNewNetworkCompletedEventHandler AddNewNetworkCompleted;
        
        /// <remarks/>
        public event AddNewLoginCompletedEventHandler AddNewLoginCompleted;
        
        /// <remarks/>
        public event ResetLoginCompletedEventHandler ResetLoginCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateWorkerStatus", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWorkerStatus(string aLicKey, int WorkerID, string AccountTypeCode, string LocationCode, string CallingStatus) {
            object[] results = this.Invoke("UpdateWorkerStatus", new object[] {
                        aLicKey,
                        WorkerID,
                        AccountTypeCode,
                        LocationCode,
                        CallingStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkerStatusAsync(string aLicKey, int WorkerID, string AccountTypeCode, string LocationCode, string CallingStatus) {
            this.UpdateWorkerStatusAsync(aLicKey, WorkerID, AccountTypeCode, LocationCode, CallingStatus, null);
        }
        
        /// <remarks/>
        public void UpdateWorkerStatusAsync(string aLicKey, int WorkerID, string AccountTypeCode, string LocationCode, string CallingStatus, object userState) {
            if ((this.UpdateWorkerStatusOperationCompleted == null)) {
                this.UpdateWorkerStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkerStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkerStatus", new object[] {
                        aLicKey,
                        WorkerID,
                        AccountTypeCode,
                        LocationCode,
                        CallingStatus}, this.UpdateWorkerStatusOperationCompleted, userState);
        }
        
        private void OnUpdateWorkerStatusOperationCompleted(object arg) {
            if ((this.UpdateWorkerStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkerStatusCompleted(this, new UpdateWorkerStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/CloseServiceRequest", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CloseServiceRequest(string aLicKey, long WorkerID, long ServiceReqID, long WorkerAssignedID) {
            object[] results = this.Invoke("CloseServiceRequest", new object[] {
                        aLicKey,
                        WorkerID,
                        ServiceReqID,
                        WorkerAssignedID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CloseServiceRequestAsync(string aLicKey, long WorkerID, long ServiceReqID, long WorkerAssignedID) {
            this.CloseServiceRequestAsync(aLicKey, WorkerID, ServiceReqID, WorkerAssignedID, null);
        }
        
        /// <remarks/>
        public void CloseServiceRequestAsync(string aLicKey, long WorkerID, long ServiceReqID, long WorkerAssignedID, object userState) {
            if ((this.CloseServiceRequestOperationCompleted == null)) {
                this.CloseServiceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseServiceRequestOperationCompleted);
            }
            this.InvokeAsync("CloseServiceRequest", new object[] {
                        aLicKey,
                        WorkerID,
                        ServiceReqID,
                        WorkerAssignedID}, this.CloseServiceRequestOperationCompleted, userState);
        }
        
        private void OnCloseServiceRequestOperationCompleted(object arg) {
            if ((this.CloseServiceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseServiceRequestCompleted(this, new CloseServiceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddServiceRequest", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddServiceRequest(string aLicKey, long WorkerID, long ServiceReqID, string FromPhonenumber, string MsgURL, string MsgType, string MsgTTS, string ServiceCode, string LocationCode, string RoomCode, string BedCode, string CallingStatus) {
            object[] results = this.Invoke("AddServiceRequest", new object[] {
                        aLicKey,
                        WorkerID,
                        ServiceReqID,
                        FromPhonenumber,
                        MsgURL,
                        MsgType,
                        MsgTTS,
                        ServiceCode,
                        LocationCode,
                        RoomCode,
                        BedCode,
                        CallingStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddServiceRequestAsync(string aLicKey, long WorkerID, long ServiceReqID, string FromPhonenumber, string MsgURL, string MsgType, string MsgTTS, string ServiceCode, string LocationCode, string RoomCode, string BedCode, string CallingStatus) {
            this.AddServiceRequestAsync(aLicKey, WorkerID, ServiceReqID, FromPhonenumber, MsgURL, MsgType, MsgTTS, ServiceCode, LocationCode, RoomCode, BedCode, CallingStatus, null);
        }
        
        /// <remarks/>
        public void AddServiceRequestAsync(string aLicKey, long WorkerID, long ServiceReqID, string FromPhonenumber, string MsgURL, string MsgType, string MsgTTS, string ServiceCode, string LocationCode, string RoomCode, string BedCode, string CallingStatus, object userState) {
            if ((this.AddServiceRequestOperationCompleted == null)) {
                this.AddServiceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddServiceRequestOperationCompleted);
            }
            this.InvokeAsync("AddServiceRequest", new object[] {
                        aLicKey,
                        WorkerID,
                        ServiceReqID,
                        FromPhonenumber,
                        MsgURL,
                        MsgType,
                        MsgTTS,
                        ServiceCode,
                        LocationCode,
                        RoomCode,
                        BedCode,
                        CallingStatus}, this.AddServiceRequestOperationCompleted, userState);
        }
        
        private void OnAddServiceRequestOperationCompleted(object arg) {
            if ((this.AddServiceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddServiceRequestCompleted(this, new AddServiceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddWorkerAssigment", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddWorkerAssigment(string aLicKey, int WorkerID, string MsgType, string LocationCode, string CallingStatus) {
            object[] results = this.Invoke("AddWorkerAssigment", new object[] {
                        aLicKey,
                        WorkerID,
                        MsgType,
                        LocationCode,
                        CallingStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddWorkerAssigmentAsync(string aLicKey, int WorkerID, string MsgType, string LocationCode, string CallingStatus) {
            this.AddWorkerAssigmentAsync(aLicKey, WorkerID, MsgType, LocationCode, CallingStatus, null);
        }
        
        /// <remarks/>
        public void AddWorkerAssigmentAsync(string aLicKey, int WorkerID, string MsgType, string LocationCode, string CallingStatus, object userState) {
            if ((this.AddWorkerAssigmentOperationCompleted == null)) {
                this.AddWorkerAssigmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWorkerAssigmentOperationCompleted);
            }
            this.InvokeAsync("AddWorkerAssigment", new object[] {
                        aLicKey,
                        WorkerID,
                        MsgType,
                        LocationCode,
                        CallingStatus}, this.AddWorkerAssigmentOperationCompleted, userState);
        }
        
        private void OnAddWorkerAssigmentOperationCompleted(object arg) {
            if ((this.AddWorkerAssigmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWorkerAssigmentCompleted(this, new AddWorkerAssigmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateWorkerAssigment", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWorkerAssigment(string aLicKey, int WorkerID, string MsgType, string LocationCode, bool IsActive, string CallingStatus, long MsgID) {
            object[] results = this.Invoke("UpdateWorkerAssigment", new object[] {
                        aLicKey,
                        WorkerID,
                        MsgType,
                        LocationCode,
                        IsActive,
                        CallingStatus,
                        MsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkerAssigmentAsync(string aLicKey, int WorkerID, string MsgType, string LocationCode, bool IsActive, string CallingStatus, long MsgID) {
            this.UpdateWorkerAssigmentAsync(aLicKey, WorkerID, MsgType, LocationCode, IsActive, CallingStatus, MsgID, null);
        }
        
        /// <remarks/>
        public void UpdateWorkerAssigmentAsync(string aLicKey, int WorkerID, string MsgType, string LocationCode, bool IsActive, string CallingStatus, long MsgID, object userState) {
            if ((this.UpdateWorkerAssigmentOperationCompleted == null)) {
                this.UpdateWorkerAssigmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkerAssigmentOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkerAssigment", new object[] {
                        aLicKey,
                        WorkerID,
                        MsgType,
                        LocationCode,
                        IsActive,
                        CallingStatus,
                        MsgID}, this.UpdateWorkerAssigmentOperationCompleted, userState);
        }
        
        private void OnUpdateWorkerAssigmentOperationCompleted(object arg) {
            if ((this.UpdateWorkerAssigmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkerAssigmentCompleted(this, new UpdateWorkerAssigmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetWorkerAssigments", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorkerAssigments(string aLicKey, int WorkerID) {
            object[] results = this.Invoke("GetWorkerAssigments", new object[] {
                        aLicKey,
                        WorkerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkerAssigmentsAsync(string aLicKey, int WorkerID) {
            this.GetWorkerAssigmentsAsync(aLicKey, WorkerID, null);
        }
        
        /// <remarks/>
        public void GetWorkerAssigmentsAsync(string aLicKey, int WorkerID, object userState) {
            if ((this.GetWorkerAssigmentsOperationCompleted == null)) {
                this.GetWorkerAssigmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkerAssigmentsOperationCompleted);
            }
            this.InvokeAsync("GetWorkerAssigments", new object[] {
                        aLicKey,
                        WorkerID}, this.GetWorkerAssigmentsOperationCompleted, userState);
        }
        
        private void OnGetWorkerAssigmentsOperationCompleted(object arg) {
            if ((this.GetWorkerAssigmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkerAssigmentsCompleted(this, new GetWorkerAssigmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetWorkerAssigmentsByType", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorkerAssigmentsByType(string aLicKey, int WorkerID, string MsgType) {
            object[] results = this.Invoke("GetWorkerAssigmentsByType", new object[] {
                        aLicKey,
                        WorkerID,
                        MsgType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkerAssigmentsByTypeAsync(string aLicKey, int WorkerID, string MsgType) {
            this.GetWorkerAssigmentsByTypeAsync(aLicKey, WorkerID, MsgType, null);
        }
        
        /// <remarks/>
        public void GetWorkerAssigmentsByTypeAsync(string aLicKey, int WorkerID, string MsgType, object userState) {
            if ((this.GetWorkerAssigmentsByTypeOperationCompleted == null)) {
                this.GetWorkerAssigmentsByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkerAssigmentsByTypeOperationCompleted);
            }
            this.InvokeAsync("GetWorkerAssigmentsByType", new object[] {
                        aLicKey,
                        WorkerID,
                        MsgType}, this.GetWorkerAssigmentsByTypeOperationCompleted, userState);
        }
        
        private void OnGetWorkerAssigmentsByTypeOperationCompleted(object arg) {
            if ((this.GetWorkerAssigmentsByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkerAssigmentsByTypeCompleted(this, new GetWorkerAssigmentsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/WorkflowRptSummary", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet WorkflowRptSummary(string aLicKey, string MsgType) {
            object[] results = this.Invoke("WorkflowRptSummary", new object[] {
                        aLicKey,
                        MsgType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void WorkflowRptSummaryAsync(string aLicKey, string MsgType) {
            this.WorkflowRptSummaryAsync(aLicKey, MsgType, null);
        }
        
        /// <remarks/>
        public void WorkflowRptSummaryAsync(string aLicKey, string MsgType, object userState) {
            if ((this.WorkflowRptSummaryOperationCompleted == null)) {
                this.WorkflowRptSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkflowRptSummaryOperationCompleted);
            }
            this.InvokeAsync("WorkflowRptSummary", new object[] {
                        aLicKey,
                        MsgType}, this.WorkflowRptSummaryOperationCompleted, userState);
        }
        
        private void OnWorkflowRptSummaryOperationCompleted(object arg) {
            if ((this.WorkflowRptSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkflowRptSummaryCompleted(this, new WorkflowRptSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/CallRptAllSummary", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CallRptAllSummary(string aLicKey, int iSponsorID) {
            object[] results = this.Invoke("CallRptAllSummary", new object[] {
                        aLicKey,
                        iSponsorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CallRptAllSummaryAsync(string aLicKey, int iSponsorID) {
            this.CallRptAllSummaryAsync(aLicKey, iSponsorID, null);
        }
        
        /// <remarks/>
        public void CallRptAllSummaryAsync(string aLicKey, int iSponsorID, object userState) {
            if ((this.CallRptAllSummaryOperationCompleted == null)) {
                this.CallRptAllSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallRptAllSummaryOperationCompleted);
            }
            this.InvokeAsync("CallRptAllSummary", new object[] {
                        aLicKey,
                        iSponsorID}, this.CallRptAllSummaryOperationCompleted, userState);
        }
        
        private void OnCallRptAllSummaryOperationCompleted(object arg) {
            if ((this.CallRptAllSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallRptAllSummaryCompleted(this, new CallRptAllSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/CallRptAcctTypeSummary", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CallRptAcctTypeSummary(string aLicKey, string sAcctType, int iSponsorID) {
            object[] results = this.Invoke("CallRptAcctTypeSummary", new object[] {
                        aLicKey,
                        sAcctType,
                        iSponsorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CallRptAcctTypeSummaryAsync(string aLicKey, string sAcctType, int iSponsorID) {
            this.CallRptAcctTypeSummaryAsync(aLicKey, sAcctType, iSponsorID, null);
        }
        
        /// <remarks/>
        public void CallRptAcctTypeSummaryAsync(string aLicKey, string sAcctType, int iSponsorID, object userState) {
            if ((this.CallRptAcctTypeSummaryOperationCompleted == null)) {
                this.CallRptAcctTypeSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallRptAcctTypeSummaryOperationCompleted);
            }
            this.InvokeAsync("CallRptAcctTypeSummary", new object[] {
                        aLicKey,
                        sAcctType,
                        iSponsorID}, this.CallRptAcctTypeSummaryOperationCompleted, userState);
        }
        
        private void OnCallRptAcctTypeSummaryOperationCompleted(object arg) {
            if ((this.CallRptAcctTypeSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallRptAcctTypeSummaryCompleted(this, new CallRptAcctTypeSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/CallRptAcctTypeSummaryDates", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CallRptAcctTypeSummaryDates(string aLicKey, string sAcctType, int iSponsorID, System.DateTime StartDate, System.DateTime StopDate) {
            object[] results = this.Invoke("CallRptAcctTypeSummaryDates", new object[] {
                        aLicKey,
                        sAcctType,
                        iSponsorID,
                        StartDate,
                        StopDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CallRptAcctTypeSummaryDatesAsync(string aLicKey, string sAcctType, int iSponsorID, System.DateTime StartDate, System.DateTime StopDate) {
            this.CallRptAcctTypeSummaryDatesAsync(aLicKey, sAcctType, iSponsorID, StartDate, StopDate, null);
        }
        
        /// <remarks/>
        public void CallRptAcctTypeSummaryDatesAsync(string aLicKey, string sAcctType, int iSponsorID, System.DateTime StartDate, System.DateTime StopDate, object userState) {
            if ((this.CallRptAcctTypeSummaryDatesOperationCompleted == null)) {
                this.CallRptAcctTypeSummaryDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallRptAcctTypeSummaryDatesOperationCompleted);
            }
            this.InvokeAsync("CallRptAcctTypeSummaryDates", new object[] {
                        aLicKey,
                        sAcctType,
                        iSponsorID,
                        StartDate,
                        StopDate}, this.CallRptAcctTypeSummaryDatesOperationCompleted, userState);
        }
        
        private void OnCallRptAcctTypeSummaryDatesOperationCompleted(object arg) {
            if ((this.CallRptAcctTypeSummaryDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallRptAcctTypeSummaryDatesCompleted(this, new CallRptAcctTypeSummaryDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/CallRptPhoneSummary", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CallRptPhoneSummary(string aLicKey, string sPhoneNumber, int iSponsorID) {
            object[] results = this.Invoke("CallRptPhoneSummary", new object[] {
                        aLicKey,
                        sPhoneNumber,
                        iSponsorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CallRptPhoneSummaryAsync(string aLicKey, string sPhoneNumber, int iSponsorID) {
            this.CallRptPhoneSummaryAsync(aLicKey, sPhoneNumber, iSponsorID, null);
        }
        
        /// <remarks/>
        public void CallRptPhoneSummaryAsync(string aLicKey, string sPhoneNumber, int iSponsorID, object userState) {
            if ((this.CallRptPhoneSummaryOperationCompleted == null)) {
                this.CallRptPhoneSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallRptPhoneSummaryOperationCompleted);
            }
            this.InvokeAsync("CallRptPhoneSummary", new object[] {
                        aLicKey,
                        sPhoneNumber,
                        iSponsorID}, this.CallRptPhoneSummaryOperationCompleted, userState);
        }
        
        private void OnCallRptPhoneSummaryOperationCompleted(object arg) {
            if ((this.CallRptPhoneSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallRptPhoneSummaryCompleted(this, new CallRptPhoneSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetInactiveCallerInfoByIdDS", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInactiveCallerInfoByIdDS(string aLicKey, int iNetworkID) {
            object[] results = this.Invoke("GetInactiveCallerInfoByIdDS", new object[] {
                        aLicKey,
                        iNetworkID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInactiveCallerInfoByIdDSAsync(string aLicKey, int iNetworkID) {
            this.GetInactiveCallerInfoByIdDSAsync(aLicKey, iNetworkID, null);
        }
        
        /// <remarks/>
        public void GetInactiveCallerInfoByIdDSAsync(string aLicKey, int iNetworkID, object userState) {
            if ((this.GetInactiveCallerInfoByIdDSOperationCompleted == null)) {
                this.GetInactiveCallerInfoByIdDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInactiveCallerInfoByIdDSOperationCompleted);
            }
            this.InvokeAsync("GetInactiveCallerInfoByIdDS", new object[] {
                        aLicKey,
                        iNetworkID}, this.GetInactiveCallerInfoByIdDSOperationCompleted, userState);
        }
        
        private void OnGetInactiveCallerInfoByIdDSOperationCompleted(object arg) {
            if ((this.GetInactiveCallerInfoByIdDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInactiveCallerInfoByIdDSCompleted(this, new GetInactiveCallerInfoByIdDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/BuildBCSCodeDef", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuildBCSCodeDef(string aLicKey, long iBCSCode) {
            object[] results = this.Invoke("BuildBCSCodeDef", new object[] {
                        aLicKey,
                        iBCSCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuildBCSCodeDefAsync(string aLicKey, long iBCSCode) {
            this.BuildBCSCodeDefAsync(aLicKey, iBCSCode, null);
        }
        
        /// <remarks/>
        public void BuildBCSCodeDefAsync(string aLicKey, long iBCSCode, object userState) {
            if ((this.BuildBCSCodeDefOperationCompleted == null)) {
                this.BuildBCSCodeDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildBCSCodeDefOperationCompleted);
            }
            this.InvokeAsync("BuildBCSCodeDef", new object[] {
                        aLicKey,
                        iBCSCode}, this.BuildBCSCodeDefOperationCompleted, userState);
        }
        
        private void OnBuildBCSCodeDefOperationCompleted(object arg) {
            if ((this.BuildBCSCodeDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildBCSCodeDefCompleted(this, new BuildBCSCodeDefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptDataSummary", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RptDataSummary(string aLicKey, int iRptCode, int iSponsorID) {
            object[] results = this.Invoke("RptDataSummary", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RptDataSummaryAsync(string aLicKey, int iRptCode, int iSponsorID) {
            this.RptDataSummaryAsync(aLicKey, iRptCode, iSponsorID, null);
        }
        
        /// <remarks/>
        public void RptDataSummaryAsync(string aLicKey, int iRptCode, int iSponsorID, object userState) {
            if ((this.RptDataSummaryOperationCompleted == null)) {
                this.RptDataSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptDataSummaryOperationCompleted);
            }
            this.InvokeAsync("RptDataSummary", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID}, this.RptDataSummaryOperationCompleted, userState);
        }
        
        private void OnRptDataSummaryOperationCompleted(object arg) {
            if ((this.RptDataSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptDataSummaryCompleted(this, new RptDataSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptScheduledCalls", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dsRptScheduledCalls RptScheduledCalls(string aLicKey, int iRptCode, int iSponsorID) {
            object[] results = this.Invoke("RptScheduledCalls", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID});
            return ((dsRptScheduledCalls)(results[0]));
        }
        
        /// <remarks/>
        public void RptScheduledCallsAsync(string aLicKey, int iRptCode, int iSponsorID) {
            this.RptScheduledCallsAsync(aLicKey, iRptCode, iSponsorID, null);
        }
        
        /// <remarks/>
        public void RptScheduledCallsAsync(string aLicKey, int iRptCode, int iSponsorID, object userState) {
            if ((this.RptScheduledCallsOperationCompleted == null)) {
                this.RptScheduledCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptScheduledCallsOperationCompleted);
            }
            this.InvokeAsync("RptScheduledCalls", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID}, this.RptScheduledCallsOperationCompleted, userState);
        }
        
        private void OnRptScheduledCallsOperationCompleted(object arg) {
            if ((this.RptScheduledCallsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptScheduledCallsCompleted(this, new RptScheduledCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptMemberCalls", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dsRptMemberCalls RptMemberCalls(string aLicKey, int iRptCode, int iSponsorID) {
            object[] results = this.Invoke("RptMemberCalls", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID});
            return ((dsRptMemberCalls)(results[0]));
        }
        
        /// <remarks/>
        public void RptMemberCallsAsync(string aLicKey, int iRptCode, int iSponsorID) {
            this.RptMemberCallsAsync(aLicKey, iRptCode, iSponsorID, null);
        }
        
        /// <remarks/>
        public void RptMemberCallsAsync(string aLicKey, int iRptCode, int iSponsorID, object userState) {
            if ((this.RptMemberCallsOperationCompleted == null)) {
                this.RptMemberCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptMemberCallsOperationCompleted);
            }
            this.InvokeAsync("RptMemberCalls", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID}, this.RptMemberCallsOperationCompleted, userState);
        }
        
        private void OnRptMemberCallsOperationCompleted(object arg) {
            if ((this.RptMemberCallsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptMemberCallsCompleted(this, new RptMemberCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptCallerCounts", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dsRptCallLogCounts RptCallerCounts(string aLicKey, int iRptCode, int iSponsorID) {
            object[] results = this.Invoke("RptCallerCounts", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID});
            return ((dsRptCallLogCounts)(results[0]));
        }
        
        /// <remarks/>
        public void RptCallerCountsAsync(string aLicKey, int iRptCode, int iSponsorID) {
            this.RptCallerCountsAsync(aLicKey, iRptCode, iSponsorID, null);
        }
        
        /// <remarks/>
        public void RptCallerCountsAsync(string aLicKey, int iRptCode, int iSponsorID, object userState) {
            if ((this.RptCallerCountsOperationCompleted == null)) {
                this.RptCallerCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptCallerCountsOperationCompleted);
            }
            this.InvokeAsync("RptCallerCounts", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID}, this.RptCallerCountsOperationCompleted, userState);
        }
        
        private void OnRptCallerCountsOperationCompleted(object arg) {
            if ((this.RptCallerCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptCallerCountsCompleted(this, new RptCallerCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptCallerCountsByDate", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dsRptCallCountByDate RptCallerCountsByDate(string aLicKey, int iRptCode, int iSponsorID) {
            object[] results = this.Invoke("RptCallerCountsByDate", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID});
            return ((dsRptCallCountByDate)(results[0]));
        }
        
        /// <remarks/>
        public void RptCallerCountsByDateAsync(string aLicKey, int iRptCode, int iSponsorID) {
            this.RptCallerCountsByDateAsync(aLicKey, iRptCode, iSponsorID, null);
        }
        
        /// <remarks/>
        public void RptCallerCountsByDateAsync(string aLicKey, int iRptCode, int iSponsorID, object userState) {
            if ((this.RptCallerCountsByDateOperationCompleted == null)) {
                this.RptCallerCountsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptCallerCountsByDateOperationCompleted);
            }
            this.InvokeAsync("RptCallerCountsByDate", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID}, this.RptCallerCountsByDateOperationCompleted, userState);
        }
        
        private void OnRptCallerCountsByDateOperationCompleted(object arg) {
            if ((this.RptCallerCountsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptCallerCountsByDateCompleted(this, new RptCallerCountsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptBcsMinMaxCountsByDate", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RptBcsMinMaxCountsByDate(string aLicKey, int iRptCode, BusinessQueryParameters @params) {
            object[] results = this.Invoke("RptBcsMinMaxCountsByDate", new object[] {
                        aLicKey,
                        iRptCode,
                        @params});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RptBcsMinMaxCountsByDateAsync(string aLicKey, int iRptCode, BusinessQueryParameters @params) {
            this.RptBcsMinMaxCountsByDateAsync(aLicKey, iRptCode, @params, null);
        }
        
        /// <remarks/>
        public void RptBcsMinMaxCountsByDateAsync(string aLicKey, int iRptCode, BusinessQueryParameters @params, object userState) {
            if ((this.RptBcsMinMaxCountsByDateOperationCompleted == null)) {
                this.RptBcsMinMaxCountsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptBcsMinMaxCountsByDateOperationCompleted);
            }
            this.InvokeAsync("RptBcsMinMaxCountsByDate", new object[] {
                        aLicKey,
                        iRptCode,
                        @params}, this.RptBcsMinMaxCountsByDateOperationCompleted, userState);
        }
        
        private void OnRptBcsMinMaxCountsByDateOperationCompleted(object arg) {
            if ((this.RptBcsMinMaxCountsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptBcsMinMaxCountsByDateCompleted(this, new RptBcsMinMaxCountsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallStatusByPhone", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallStatusClass[] GetCallStatusByPhone(string aLicKey, int iNetworkID, string sToPhoneNumber) {
            object[] results = this.Invoke("GetCallStatusByPhone", new object[] {
                        aLicKey,
                        iNetworkID,
                        sToPhoneNumber});
            return ((CallStatusClass[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCallStatusByPhoneAsync(string aLicKey, int iNetworkID, string sToPhoneNumber) {
            this.GetCallStatusByPhoneAsync(aLicKey, iNetworkID, sToPhoneNumber, null);
        }
        
        /// <remarks/>
        public void GetCallStatusByPhoneAsync(string aLicKey, int iNetworkID, string sToPhoneNumber, object userState) {
            if ((this.GetCallStatusByPhoneOperationCompleted == null)) {
                this.GetCallStatusByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallStatusByPhoneOperationCompleted);
            }
            this.InvokeAsync("GetCallStatusByPhone", new object[] {
                        aLicKey,
                        iNetworkID,
                        sToPhoneNumber}, this.GetCallStatusByPhoneOperationCompleted, userState);
        }
        
        private void OnGetCallStatusByPhoneOperationCompleted(object arg) {
            if ((this.GetCallStatusByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallStatusByPhoneCompleted(this, new GetCallStatusByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallStatus", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallStatusClass GetCallStatus(string aLicKey, int iNetworkID) {
            object[] results = this.Invoke("GetCallStatus", new object[] {
                        aLicKey,
                        iNetworkID});
            return ((CallStatusClass)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallStatusAsync(string aLicKey, int iNetworkID) {
            this.GetCallStatusAsync(aLicKey, iNetworkID, null);
        }
        
        /// <remarks/>
        public void GetCallStatusAsync(string aLicKey, int iNetworkID, object userState) {
            if ((this.GetCallStatusOperationCompleted == null)) {
                this.GetCallStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallStatusOperationCompleted);
            }
            this.InvokeAsync("GetCallStatus", new object[] {
                        aLicKey,
                        iNetworkID}, this.GetCallStatusOperationCompleted, userState);
        }
        
        private void OnGetCallStatusOperationCompleted(object arg) {
            if ((this.GetCallStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallStatusCompleted(this, new GetCallStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptCallerByPhone", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dsRptPhoneNumberCalls RptCallerByPhone(string aLicKey, int iRptCode, int iSponsorID, int sToPhoneNumber) {
            object[] results = this.Invoke("RptCallerByPhone", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID,
                        sToPhoneNumber});
            return ((dsRptPhoneNumberCalls)(results[0]));
        }
        
        /// <remarks/>
        public void RptCallerByPhoneAsync(string aLicKey, int iRptCode, int iSponsorID, int sToPhoneNumber) {
            this.RptCallerByPhoneAsync(aLicKey, iRptCode, iSponsorID, sToPhoneNumber, null);
        }
        
        /// <remarks/>
        public void RptCallerByPhoneAsync(string aLicKey, int iRptCode, int iSponsorID, int sToPhoneNumber, object userState) {
            if ((this.RptCallerByPhoneOperationCompleted == null)) {
                this.RptCallerByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptCallerByPhoneOperationCompleted);
            }
            this.InvokeAsync("RptCallerByPhone", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID,
                        sToPhoneNumber}, this.RptCallerByPhoneOperationCompleted, userState);
        }
        
        private void OnRptCallerByPhoneOperationCompleted(object arg) {
            if ((this.RptCallerByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptCallerByPhoneCompleted(this, new RptCallerByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptCallerCountsByDayHr", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dsRptCountByDayHr RptCallerCountsByDayHr(string aLicKey, int iRptCode, int iSponsorID) {
            object[] results = this.Invoke("RptCallerCountsByDayHr", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID});
            return ((dsRptCountByDayHr)(results[0]));
        }
        
        /// <remarks/>
        public void RptCallerCountsByDayHrAsync(string aLicKey, int iRptCode, int iSponsorID) {
            this.RptCallerCountsByDayHrAsync(aLicKey, iRptCode, iSponsorID, null);
        }
        
        /// <remarks/>
        public void RptCallerCountsByDayHrAsync(string aLicKey, int iRptCode, int iSponsorID, object userState) {
            if ((this.RptCallerCountsByDayHrOperationCompleted == null)) {
                this.RptCallerCountsByDayHrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptCallerCountsByDayHrOperationCompleted);
            }
            this.InvokeAsync("RptCallerCountsByDayHr", new object[] {
                        aLicKey,
                        iRptCode,
                        iSponsorID}, this.RptCallerCountsByDayHrOperationCompleted, userState);
        }
        
        private void OnRptCallerCountsByDayHrOperationCompleted(object arg) {
            if ((this.RptCallerCountsByDayHrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptCallerCountsByDayHrCompleted(this, new RptCallerCountsByDayHrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptReceivedReferrals", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dsReferrals RptReceivedReferrals(string aLicKey, int iRptCode, int iNetworkID, string sType) {
            object[] results = this.Invoke("RptReceivedReferrals", new object[] {
                        aLicKey,
                        iRptCode,
                        iNetworkID,
                        sType});
            return ((dsReferrals)(results[0]));
        }
        
        /// <remarks/>
        public void RptReceivedReferralsAsync(string aLicKey, int iRptCode, int iNetworkID, string sType) {
            this.RptReceivedReferralsAsync(aLicKey, iRptCode, iNetworkID, sType, null);
        }
        
        /// <remarks/>
        public void RptReceivedReferralsAsync(string aLicKey, int iRptCode, int iNetworkID, string sType, object userState) {
            if ((this.RptReceivedReferralsOperationCompleted == null)) {
                this.RptReceivedReferralsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptReceivedReferralsOperationCompleted);
            }
            this.InvokeAsync("RptReceivedReferrals", new object[] {
                        aLicKey,
                        iRptCode,
                        iNetworkID,
                        sType}, this.RptReceivedReferralsOperationCompleted, userState);
        }
        
        private void OnRptReceivedReferralsOperationCompleted(object arg) {
            if ((this.RptReceivedReferralsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptReceivedReferralsCompleted(this, new RptReceivedReferralsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptBcsTestData", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RptBcsTestData(string aLicKey, int iMemberID, int iSponsorID) {
            object[] results = this.Invoke("RptBcsTestData", new object[] {
                        aLicKey,
                        iMemberID,
                        iSponsorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RptBcsTestDataAsync(string aLicKey, int iMemberID, int iSponsorID) {
            this.RptBcsTestDataAsync(aLicKey, iMemberID, iSponsorID, null);
        }
        
        /// <remarks/>
        public void RptBcsTestDataAsync(string aLicKey, int iMemberID, int iSponsorID, object userState) {
            if ((this.RptBcsTestDataOperationCompleted == null)) {
                this.RptBcsTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptBcsTestDataOperationCompleted);
            }
            this.InvokeAsync("RptBcsTestData", new object[] {
                        aLicKey,
                        iMemberID,
                        iSponsorID}, this.RptBcsTestDataOperationCompleted, userState);
        }
        
        private void OnRptBcsTestDataOperationCompleted(object arg) {
            if ((this.RptBcsTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptBcsTestDataCompleted(this, new RptBcsTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptBcsTestByAcctCode", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RptBcsTestByAcctCode(string aLicKey, string sAcctTypeCode, int iSponsorID) {
            object[] results = this.Invoke("RptBcsTestByAcctCode", new object[] {
                        aLicKey,
                        sAcctTypeCode,
                        iSponsorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RptBcsTestByAcctCodeAsync(string aLicKey, string sAcctTypeCode, int iSponsorID) {
            this.RptBcsTestByAcctCodeAsync(aLicKey, sAcctTypeCode, iSponsorID, null);
        }
        
        /// <remarks/>
        public void RptBcsTestByAcctCodeAsync(string aLicKey, string sAcctTypeCode, int iSponsorID, object userState) {
            if ((this.RptBcsTestByAcctCodeOperationCompleted == null)) {
                this.RptBcsTestByAcctCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptBcsTestByAcctCodeOperationCompleted);
            }
            this.InvokeAsync("RptBcsTestByAcctCode", new object[] {
                        aLicKey,
                        sAcctTypeCode,
                        iSponsorID}, this.RptBcsTestByAcctCodeOperationCompleted, userState);
        }
        
        private void OnRptBcsTestByAcctCodeOperationCompleted(object arg) {
            if ((this.RptBcsTestByAcctCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptBcsTestByAcctCodeCompleted(this, new RptBcsTestByAcctCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptBilling", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RptBilling(string aLicKey, int iType, BusinessQueryParameters @params) {
            object[] results = this.Invoke("RptBilling", new object[] {
                        aLicKey,
                        iType,
                        @params});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RptBillingAsync(string aLicKey, int iType, BusinessQueryParameters @params) {
            this.RptBillingAsync(aLicKey, iType, @params, null);
        }
        
        /// <remarks/>
        public void RptBillingAsync(string aLicKey, int iType, BusinessQueryParameters @params, object userState) {
            if ((this.RptBillingOperationCompleted == null)) {
                this.RptBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptBillingOperationCompleted);
            }
            this.InvokeAsync("RptBilling", new object[] {
                        aLicKey,
                        iType,
                        @params}, this.RptBillingOperationCompleted, userState);
        }
        
        private void OnRptBillingOperationCompleted(object arg) {
            if ((this.RptBillingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptBillingCompleted(this, new RptBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RptDashboard", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RptDashboard(string aLicKey, int iType, BusinessQueryParameters @params) {
            object[] results = this.Invoke("RptDashboard", new object[] {
                        aLicKey,
                        iType,
                        @params});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RptDashboardAsync(string aLicKey, int iType, BusinessQueryParameters @params) {
            this.RptDashboardAsync(aLicKey, iType, @params, null);
        }
        
        /// <remarks/>
        public void RptDashboardAsync(string aLicKey, int iType, BusinessQueryParameters @params, object userState) {
            if ((this.RptDashboardOperationCompleted == null)) {
                this.RptDashboardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRptDashboardOperationCompleted);
            }
            this.InvokeAsync("RptDashboard", new object[] {
                        aLicKey,
                        iType,
                        @params}, this.RptDashboardOperationCompleted, userState);
        }
        
        private void OnRptDashboardOperationCompleted(object arg) {
            if ((this.RptDashboardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RptDashboardCompleted(this, new RptDashboardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetReferrals", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReferrals(string aLicKey, int iAction, string sParam1, string sType) {
            object[] results = this.Invoke("GetReferrals", new object[] {
                        aLicKey,
                        iAction,
                        sParam1,
                        sType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferralsAsync(string aLicKey, int iAction, string sParam1, string sType) {
            this.GetReferralsAsync(aLicKey, iAction, sParam1, sType, null);
        }
        
        /// <remarks/>
        public void GetReferralsAsync(string aLicKey, int iAction, string sParam1, string sType, object userState) {
            if ((this.GetReferralsOperationCompleted == null)) {
                this.GetReferralsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferralsOperationCompleted);
            }
            this.InvokeAsync("GetReferrals", new object[] {
                        aLicKey,
                        iAction,
                        sParam1,
                        sType}, this.GetReferralsOperationCompleted, userState);
        }
        
        private void OnGetReferralsOperationCompleted(object arg) {
            if ((this.GetReferralsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferralsCompleted(this, new GetReferralsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddMemberNotes", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddMemberNotes(string aLicKey, ReferralClass oReferral, bool Encrypt) {
            object[] results = this.Invoke("AddMemberNotes", new object[] {
                        aLicKey,
                        oReferral,
                        Encrypt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddMemberNotesAsync(string aLicKey, ReferralClass oReferral, bool Encrypt) {
            this.AddMemberNotesAsync(aLicKey, oReferral, Encrypt, null);
        }
        
        /// <remarks/>
        public void AddMemberNotesAsync(string aLicKey, ReferralClass oReferral, bool Encrypt, object userState) {
            if ((this.AddMemberNotesOperationCompleted == null)) {
                this.AddMemberNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMemberNotesOperationCompleted);
            }
            this.InvokeAsync("AddMemberNotes", new object[] {
                        aLicKey,
                        oReferral,
                        Encrypt}, this.AddMemberNotesOperationCompleted, userState);
        }
        
        private void OnAddMemberNotesOperationCompleted(object arg) {
            if ((this.AddMemberNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMemberNotesCompleted(this, new AddMemberNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddMemberNotesTest", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddMemberNotesTest(string aLicKey) {
            object[] results = this.Invoke("AddMemberNotesTest", new object[] {
                        aLicKey});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddMemberNotesTestAsync(string aLicKey) {
            this.AddMemberNotesTestAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void AddMemberNotesTestAsync(string aLicKey, object userState) {
            if ((this.AddMemberNotesTestOperationCompleted == null)) {
                this.AddMemberNotesTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMemberNotesTestOperationCompleted);
            }
            this.InvokeAsync("AddMemberNotesTest", new object[] {
                        aLicKey}, this.AddMemberNotesTestOperationCompleted, userState);
        }
        
        private void OnAddMemberNotesTestOperationCompleted(object arg) {
            if ((this.AddMemberNotesTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMemberNotesTestCompleted(this, new AddMemberNotesTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateMemberNotes", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateMemberNotes(string aLicKey, ReferralClass oReferral, bool Encrypt) {
            object[] results = this.Invoke("UpdateMemberNotes", new object[] {
                        aLicKey,
                        oReferral,
                        Encrypt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberNotesAsync(string aLicKey, ReferralClass oReferral, bool Encrypt) {
            this.UpdateMemberNotesAsync(aLicKey, oReferral, Encrypt, null);
        }
        
        /// <remarks/>
        public void UpdateMemberNotesAsync(string aLicKey, ReferralClass oReferral, bool Encrypt, object userState) {
            if ((this.UpdateMemberNotesOperationCompleted == null)) {
                this.UpdateMemberNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberNotesOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberNotes", new object[] {
                        aLicKey,
                        oReferral,
                        Encrypt}, this.UpdateMemberNotesOperationCompleted, userState);
        }
        
        private void OnUpdateMemberNotesOperationCompleted(object arg) {
            if ((this.UpdateMemberNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberNotesCompleted(this, new UpdateMemberNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateAccountTypeCode", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAccountTypeCode(string aLicKey, int iMember, string sAcctCode) {
            object[] results = this.Invoke("UpdateAccountTypeCode", new object[] {
                        aLicKey,
                        iMember,
                        sAcctCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountTypeCodeAsync(string aLicKey, int iMember, string sAcctCode) {
            this.UpdateAccountTypeCodeAsync(aLicKey, iMember, sAcctCode, null);
        }
        
        /// <remarks/>
        public void UpdateAccountTypeCodeAsync(string aLicKey, int iMember, string sAcctCode, object userState) {
            if ((this.UpdateAccountTypeCodeOperationCompleted == null)) {
                this.UpdateAccountTypeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountTypeCodeOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountTypeCode", new object[] {
                        aLicKey,
                        iMember,
                        sAcctCode}, this.UpdateAccountTypeCodeOperationCompleted, userState);
        }
        
        private void OnUpdateAccountTypeCodeOperationCompleted(object arg) {
            if ((this.UpdateAccountTypeCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountTypeCodeCompleted(this, new UpdateAccountTypeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetMemberNotes", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReferralClass GetMemberNotes(string aLicKey, ReferralClass oReferral, bool Encrypt) {
            object[] results = this.Invoke("GetMemberNotes", new object[] {
                        aLicKey,
                        oReferral,
                        Encrypt});
            return ((ReferralClass)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberNotesAsync(string aLicKey, ReferralClass oReferral, bool Encrypt) {
            this.GetMemberNotesAsync(aLicKey, oReferral, Encrypt, null);
        }
        
        /// <remarks/>
        public void GetMemberNotesAsync(string aLicKey, ReferralClass oReferral, bool Encrypt, object userState) {
            if ((this.GetMemberNotesOperationCompleted == null)) {
                this.GetMemberNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberNotesOperationCompleted);
            }
            this.InvokeAsync("GetMemberNotes", new object[] {
                        aLicKey,
                        oReferral,
                        Encrypt}, this.GetMemberNotesOperationCompleted, userState);
        }
        
        private void OnGetMemberNotesOperationCompleted(object arg) {
            if ((this.GetMemberNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberNotesCompleted(this, new GetMemberNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetMemberNotesTest", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessQueryParameters GetMemberNotesTest(string aLicKey) {
            object[] results = this.Invoke("GetMemberNotesTest", new object[] {
                        aLicKey});
            return ((BusinessQueryParameters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberNotesTestAsync(string aLicKey) {
            this.GetMemberNotesTestAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void GetMemberNotesTestAsync(string aLicKey, object userState) {
            if ((this.GetMemberNotesTestOperationCompleted == null)) {
                this.GetMemberNotesTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberNotesTestOperationCompleted);
            }
            this.InvokeAsync("GetMemberNotesTest", new object[] {
                        aLicKey}, this.GetMemberNotesTestOperationCompleted, userState);
        }
        
        private void OnGetMemberNotesTestOperationCompleted(object arg) {
            if ((this.GetMemberNotesTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberNotesTestCompleted(this, new GetMemberNotesTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetNotesByID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNotesByID(string aLicKey, long iMsgID) {
            object[] results = this.Invoke("GetNotesByID", new object[] {
                        aLicKey,
                        iMsgID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotesByIDAsync(string aLicKey, long iMsgID) {
            this.GetNotesByIDAsync(aLicKey, iMsgID, null);
        }
        
        /// <remarks/>
        public void GetNotesByIDAsync(string aLicKey, long iMsgID, object userState) {
            if ((this.GetNotesByIDOperationCompleted == null)) {
                this.GetNotesByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotesByIDOperationCompleted);
            }
            this.InvokeAsync("GetNotesByID", new object[] {
                        aLicKey,
                        iMsgID}, this.GetNotesByIDOperationCompleted, userState);
        }
        
        private void OnGetNotesByIDOperationCompleted(object arg) {
            if ((this.GetNotesByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotesByIDCompleted(this, new GetNotesByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/SaveReferral", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveReferral(string aLicKey, ReferralClass clsRef) {
            object[] results = this.Invoke("SaveReferral", new object[] {
                        aLicKey,
                        clsRef});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReferralAsync(string aLicKey, ReferralClass clsRef) {
            this.SaveReferralAsync(aLicKey, clsRef, null);
        }
        
        /// <remarks/>
        public void SaveReferralAsync(string aLicKey, ReferralClass clsRef, object userState) {
            if ((this.SaveReferralOperationCompleted == null)) {
                this.SaveReferralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReferralOperationCompleted);
            }
            this.InvokeAsync("SaveReferral", new object[] {
                        aLicKey,
                        clsRef}, this.SaveReferralOperationCompleted, userState);
        }
        
        private void OnSaveReferralOperationCompleted(object arg) {
            if ((this.SaveReferralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReferralCompleted(this, new SaveReferralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateReferral", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateReferral(string aLicKey, ReferralClass clsRef) {
            object[] results = this.Invoke("UpdateReferral", new object[] {
                        aLicKey,
                        clsRef});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReferralAsync(string aLicKey, ReferralClass clsRef) {
            this.UpdateReferralAsync(aLicKey, clsRef, null);
        }
        
        /// <remarks/>
        public void UpdateReferralAsync(string aLicKey, ReferralClass clsRef, object userState) {
            if ((this.UpdateReferralOperationCompleted == null)) {
                this.UpdateReferralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReferralOperationCompleted);
            }
            this.InvokeAsync("UpdateReferral", new object[] {
                        aLicKey,
                        clsRef}, this.UpdateReferralOperationCompleted, userState);
        }
        
        private void OnUpdateReferralOperationCompleted(object arg) {
            if ((this.UpdateReferralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReferralCompleted(this, new UpdateReferralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/IsConnectionValid", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsConnectionValid(string aLicKey, HealthVaultClass clsHV) {
            object[] results = this.Invoke("IsConnectionValid", new object[] {
                        aLicKey,
                        clsHV});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsConnectionValidAsync(string aLicKey, HealthVaultClass clsHV) {
            this.IsConnectionValidAsync(aLicKey, clsHV, null);
        }
        
        /// <remarks/>
        public void IsConnectionValidAsync(string aLicKey, HealthVaultClass clsHV, object userState) {
            if ((this.IsConnectionValidOperationCompleted == null)) {
                this.IsConnectionValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsConnectionValidOperationCompleted);
            }
            this.InvokeAsync("IsConnectionValid", new object[] {
                        aLicKey,
                        clsHV}, this.IsConnectionValidOperationCompleted, userState);
        }
        
        private void OnIsConnectionValidOperationCompleted(object arg) {
            if ((this.IsConnectionValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsConnectionValidCompleted(this, new IsConnectionValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/ProcessHealthVaultData", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BCNHvDataClass ProcessHealthVaultData(string aLicKey, BCNHvDataClass clsBCNData) {
            object[] results = this.Invoke("ProcessHealthVaultData", new object[] {
                        aLicKey,
                        clsBCNData});
            return ((BCNHvDataClass)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessHealthVaultDataAsync(string aLicKey, BCNHvDataClass clsBCNData) {
            this.ProcessHealthVaultDataAsync(aLicKey, clsBCNData, null);
        }
        
        /// <remarks/>
        public void ProcessHealthVaultDataAsync(string aLicKey, BCNHvDataClass clsBCNData, object userState) {
            if ((this.ProcessHealthVaultDataOperationCompleted == null)) {
                this.ProcessHealthVaultDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessHealthVaultDataOperationCompleted);
            }
            this.InvokeAsync("ProcessHealthVaultData", new object[] {
                        aLicKey,
                        clsBCNData}, this.ProcessHealthVaultDataOperationCompleted, userState);
        }
        
        private void OnProcessHealthVaultDataOperationCompleted(object arg) {
            if ((this.ProcessHealthVaultDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessHealthVaultDataCompleted(this, new ProcessHealthVaultDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddBCSTestLogProfile", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddBCSTestLogProfile(
                    string aLicKey, 
                    int MemberId, 
                    string FastingInd, 
                    long ScheduleId, 
                    int BloodSerumLevel, 
                    int Systolic, 
                    int Diastolic, 
                    int Weight, 
                    double Tempature, 
                    int Pulse, 
                    string StatusInd, 
                    int BcsTestCode, 
                    System.DateTime Date_Time_Taken, 
                    double O2, 
                    double Intake, 
                    double Height) {
            object[] results = this.Invoke("AddBCSTestLogProfile", new object[] {
                        aLicKey,
                        MemberId,
                        FastingInd,
                        ScheduleId,
                        BloodSerumLevel,
                        Systolic,
                        Diastolic,
                        Weight,
                        Tempature,
                        Pulse,
                        StatusInd,
                        BcsTestCode,
                        Date_Time_Taken,
                        O2,
                        Intake,
                        Height});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddBCSTestLogProfileAsync(
                    string aLicKey, 
                    int MemberId, 
                    string FastingInd, 
                    long ScheduleId, 
                    int BloodSerumLevel, 
                    int Systolic, 
                    int Diastolic, 
                    int Weight, 
                    double Tempature, 
                    int Pulse, 
                    string StatusInd, 
                    int BcsTestCode, 
                    System.DateTime Date_Time_Taken, 
                    double O2, 
                    double Intake, 
                    double Height) {
            this.AddBCSTestLogProfileAsync(aLicKey, MemberId, FastingInd, ScheduleId, BloodSerumLevel, Systolic, Diastolic, Weight, Tempature, Pulse, StatusInd, BcsTestCode, Date_Time_Taken, O2, Intake, Height, null);
        }
        
        /// <remarks/>
        public void AddBCSTestLogProfileAsync(
                    string aLicKey, 
                    int MemberId, 
                    string FastingInd, 
                    long ScheduleId, 
                    int BloodSerumLevel, 
                    int Systolic, 
                    int Diastolic, 
                    int Weight, 
                    double Tempature, 
                    int Pulse, 
                    string StatusInd, 
                    int BcsTestCode, 
                    System.DateTime Date_Time_Taken, 
                    double O2, 
                    double Intake, 
                    double Height, 
                    object userState) {
            if ((this.AddBCSTestLogProfileOperationCompleted == null)) {
                this.AddBCSTestLogProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBCSTestLogProfileOperationCompleted);
            }
            this.InvokeAsync("AddBCSTestLogProfile", new object[] {
                        aLicKey,
                        MemberId,
                        FastingInd,
                        ScheduleId,
                        BloodSerumLevel,
                        Systolic,
                        Diastolic,
                        Weight,
                        Tempature,
                        Pulse,
                        StatusInd,
                        BcsTestCode,
                        Date_Time_Taken,
                        O2,
                        Intake,
                        Height}, this.AddBCSTestLogProfileOperationCompleted, userState);
        }
        
        private void OnAddBCSTestLogProfileOperationCompleted(object arg) {
            if ((this.AddBCSTestLogProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBCSTestLogProfileCompleted(this, new AddBCSTestLogProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateBcsTestLog", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateBcsTestLog(string aLicKey, Callers clsMsg) {
            object[] results = this.Invoke("UpdateBcsTestLog", new object[] {
                        aLicKey,
                        clsMsg});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBcsTestLogAsync(string aLicKey, Callers clsMsg) {
            this.UpdateBcsTestLogAsync(aLicKey, clsMsg, null);
        }
        
        /// <remarks/>
        public void UpdateBcsTestLogAsync(string aLicKey, Callers clsMsg, object userState) {
            if ((this.UpdateBcsTestLogOperationCompleted == null)) {
                this.UpdateBcsTestLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBcsTestLogOperationCompleted);
            }
            this.InvokeAsync("UpdateBcsTestLog", new object[] {
                        aLicKey,
                        clsMsg}, this.UpdateBcsTestLogOperationCompleted, userState);
        }
        
        private void OnUpdateBcsTestLogOperationCompleted(object arg) {
            if ((this.UpdateBcsTestLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBcsTestLogCompleted(this, new UpdateBcsTestLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateBCSLog", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateBCSLog(string aLicKey, int MemberId, string FastingInd, long ScheduleId, int BloodSerumLevel, int Systolic, int Diastolic, int Weight, double Tempature, int Pulse, int BcsTestCode, long BcsLogID, System.DateTime Date_Time_Taken) {
            object[] results = this.Invoke("UpdateBCSLog", new object[] {
                        aLicKey,
                        MemberId,
                        FastingInd,
                        ScheduleId,
                        BloodSerumLevel,
                        Systolic,
                        Diastolic,
                        Weight,
                        Tempature,
                        Pulse,
                        BcsTestCode,
                        BcsLogID,
                        Date_Time_Taken});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBCSLogAsync(string aLicKey, int MemberId, string FastingInd, long ScheduleId, int BloodSerumLevel, int Systolic, int Diastolic, int Weight, double Tempature, int Pulse, int BcsTestCode, long BcsLogID, System.DateTime Date_Time_Taken) {
            this.UpdateBCSLogAsync(aLicKey, MemberId, FastingInd, ScheduleId, BloodSerumLevel, Systolic, Diastolic, Weight, Tempature, Pulse, BcsTestCode, BcsLogID, Date_Time_Taken, null);
        }
        
        /// <remarks/>
        public void UpdateBCSLogAsync(string aLicKey, int MemberId, string FastingInd, long ScheduleId, int BloodSerumLevel, int Systolic, int Diastolic, int Weight, double Tempature, int Pulse, int BcsTestCode, long BcsLogID, System.DateTime Date_Time_Taken, object userState) {
            if ((this.UpdateBCSLogOperationCompleted == null)) {
                this.UpdateBCSLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBCSLogOperationCompleted);
            }
            this.InvokeAsync("UpdateBCSLog", new object[] {
                        aLicKey,
                        MemberId,
                        FastingInd,
                        ScheduleId,
                        BloodSerumLevel,
                        Systolic,
                        Diastolic,
                        Weight,
                        Tempature,
                        Pulse,
                        BcsTestCode,
                        BcsLogID,
                        Date_Time_Taken}, this.UpdateBCSLogOperationCompleted, userState);
        }
        
        private void OnUpdateBCSLogOperationCompleted(object arg) {
            if ((this.UpdateBCSLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBCSLogCompleted(this, new UpdateBCSLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateBCSLog2", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateBCSLog2(
                    string aLicKey, 
                    int MemberId, 
                    string FastingInd, 
                    long ScheduleId, 
                    int BloodSerumLevel, 
                    int Systolic, 
                    int Diastolic, 
                    int Weight, 
                    double Tempature, 
                    int Pulse, 
                    int BcsTestCode, 
                    long BcsLogID, 
                    System.DateTime Date_Time_Taken, 
                    double O2, 
                    double Intake, 
                    double Height) {
            object[] results = this.Invoke("UpdateBCSLog2", new object[] {
                        aLicKey,
                        MemberId,
                        FastingInd,
                        ScheduleId,
                        BloodSerumLevel,
                        Systolic,
                        Diastolic,
                        Weight,
                        Tempature,
                        Pulse,
                        BcsTestCode,
                        BcsLogID,
                        Date_Time_Taken,
                        O2,
                        Intake,
                        Height});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBCSLog2Async(
                    string aLicKey, 
                    int MemberId, 
                    string FastingInd, 
                    long ScheduleId, 
                    int BloodSerumLevel, 
                    int Systolic, 
                    int Diastolic, 
                    int Weight, 
                    double Tempature, 
                    int Pulse, 
                    int BcsTestCode, 
                    long BcsLogID, 
                    System.DateTime Date_Time_Taken, 
                    double O2, 
                    double Intake, 
                    double Height) {
            this.UpdateBCSLog2Async(aLicKey, MemberId, FastingInd, ScheduleId, BloodSerumLevel, Systolic, Diastolic, Weight, Tempature, Pulse, BcsTestCode, BcsLogID, Date_Time_Taken, O2, Intake, Height, null);
        }
        
        /// <remarks/>
        public void UpdateBCSLog2Async(
                    string aLicKey, 
                    int MemberId, 
                    string FastingInd, 
                    long ScheduleId, 
                    int BloodSerumLevel, 
                    int Systolic, 
                    int Diastolic, 
                    int Weight, 
                    double Tempature, 
                    int Pulse, 
                    int BcsTestCode, 
                    long BcsLogID, 
                    System.DateTime Date_Time_Taken, 
                    double O2, 
                    double Intake, 
                    double Height, 
                    object userState) {
            if ((this.UpdateBCSLog2OperationCompleted == null)) {
                this.UpdateBCSLog2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBCSLog2OperationCompleted);
            }
            this.InvokeAsync("UpdateBCSLog2", new object[] {
                        aLicKey,
                        MemberId,
                        FastingInd,
                        ScheduleId,
                        BloodSerumLevel,
                        Systolic,
                        Diastolic,
                        Weight,
                        Tempature,
                        Pulse,
                        BcsTestCode,
                        BcsLogID,
                        Date_Time_Taken,
                        O2,
                        Intake,
                        Height}, this.UpdateBCSLog2OperationCompleted, userState);
        }
        
        private void OnUpdateBCSLog2OperationCompleted(object arg) {
            if ((this.UpdateBCSLog2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBCSLog2Completed(this, new UpdateBCSLog2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddBCSTestLogHV", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddBCSTestLogHV(string aLicKey, Callers clsMsg) {
            object[] results = this.Invoke("AddBCSTestLogHV", new object[] {
                        aLicKey,
                        clsMsg});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddBCSTestLogHVAsync(string aLicKey, Callers clsMsg) {
            this.AddBCSTestLogHVAsync(aLicKey, clsMsg, null);
        }
        
        /// <remarks/>
        public void AddBCSTestLogHVAsync(string aLicKey, Callers clsMsg, object userState) {
            if ((this.AddBCSTestLogHVOperationCompleted == null)) {
                this.AddBCSTestLogHVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBCSTestLogHVOperationCompleted);
            }
            this.InvokeAsync("AddBCSTestLogHV", new object[] {
                        aLicKey,
                        clsMsg}, this.AddBCSTestLogHVOperationCompleted, userState);
        }
        
        private void OnAddBCSTestLogHVOperationCompleted(object arg) {
            if ((this.AddBCSTestLogHVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBCSTestLogHVCompleted(this, new AddBCSTestLogHVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddBcsTestLogHVProfile", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddBcsTestLogHVProfile(string aLicKey, Callers clsMsg) {
            object[] results = this.Invoke("AddBcsTestLogHVProfile", new object[] {
                        aLicKey,
                        clsMsg});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddBcsTestLogHVProfileAsync(string aLicKey, Callers clsMsg) {
            this.AddBcsTestLogHVProfileAsync(aLicKey, clsMsg, null);
        }
        
        /// <remarks/>
        public void AddBcsTestLogHVProfileAsync(string aLicKey, Callers clsMsg, object userState) {
            if ((this.AddBcsTestLogHVProfileOperationCompleted == null)) {
                this.AddBcsTestLogHVProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBcsTestLogHVProfileOperationCompleted);
            }
            this.InvokeAsync("AddBcsTestLogHVProfile", new object[] {
                        aLicKey,
                        clsMsg}, this.AddBcsTestLogHVProfileOperationCompleted, userState);
        }
        
        private void OnAddBcsTestLogHVProfileOperationCompleted(object arg) {
            if ((this.AddBcsTestLogHVProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBcsTestLogHVProfileCompleted(this, new AddBcsTestLogHVProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetMedicationByName", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MedicationClass[] GetMedicationByName(string aLicKey, string sTradeName) {
            object[] results = this.Invoke("GetMedicationByName", new object[] {
                        aLicKey,
                        sTradeName});
            return ((MedicationClass[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMedicationByNameAsync(string aLicKey, string sTradeName) {
            this.GetMedicationByNameAsync(aLicKey, sTradeName, null);
        }
        
        /// <remarks/>
        public void GetMedicationByNameAsync(string aLicKey, string sTradeName, object userState) {
            if ((this.GetMedicationByNameOperationCompleted == null)) {
                this.GetMedicationByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicationByNameOperationCompleted);
            }
            this.InvokeAsync("GetMedicationByName", new object[] {
                        aLicKey,
                        sTradeName}, this.GetMedicationByNameOperationCompleted, userState);
        }
        
        private void OnGetMedicationByNameOperationCompleted(object arg) {
            if ((this.GetMedicationByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicationByNameCompleted(this, new GetMedicationByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetMedicationByNameStg", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MedicationClass[] GetMedicationByNameStg(string aLicKey, string sTradeName, string sStrength) {
            object[] results = this.Invoke("GetMedicationByNameStg", new object[] {
                        aLicKey,
                        sTradeName,
                        sStrength});
            return ((MedicationClass[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMedicationByNameStgAsync(string aLicKey, string sTradeName, string sStrength) {
            this.GetMedicationByNameStgAsync(aLicKey, sTradeName, sStrength, null);
        }
        
        /// <remarks/>
        public void GetMedicationByNameStgAsync(string aLicKey, string sTradeName, string sStrength, object userState) {
            if ((this.GetMedicationByNameStgOperationCompleted == null)) {
                this.GetMedicationByNameStgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicationByNameStgOperationCompleted);
            }
            this.InvokeAsync("GetMedicationByNameStg", new object[] {
                        aLicKey,
                        sTradeName,
                        sStrength}, this.GetMedicationByNameStgOperationCompleted, userState);
        }
        
        private void OnGetMedicationByNameStgOperationCompleted(object arg) {
            if ((this.GetMedicationByNameStgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicationByNameStgCompleted(this, new GetMedicationByNameStgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetMedicationByNameStgPak", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MedicationClass[] GetMedicationByNameStgPak(string aLicKey, string sTradeName, string sStrength, string sPackage) {
            object[] results = this.Invoke("GetMedicationByNameStgPak", new object[] {
                        aLicKey,
                        sTradeName,
                        sStrength,
                        sPackage});
            return ((MedicationClass[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMedicationByNameStgPakAsync(string aLicKey, string sTradeName, string sStrength, string sPackage) {
            this.GetMedicationByNameStgPakAsync(aLicKey, sTradeName, sStrength, sPackage, null);
        }
        
        /// <remarks/>
        public void GetMedicationByNameStgPakAsync(string aLicKey, string sTradeName, string sStrength, string sPackage, object userState) {
            if ((this.GetMedicationByNameStgPakOperationCompleted == null)) {
                this.GetMedicationByNameStgPakOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicationByNameStgPakOperationCompleted);
            }
            this.InvokeAsync("GetMedicationByNameStgPak", new object[] {
                        aLicKey,
                        sTradeName,
                        sStrength,
                        sPackage}, this.GetMedicationByNameStgPakOperationCompleted, userState);
        }
        
        private void OnGetMedicationByNameStgPakOperationCompleted(object arg) {
            if ((this.GetMedicationByNameStgPakCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicationByNameStgPakCompleted(this, new GetMedicationByNameStgPakCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAllProviderPrefByMemberID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllProviderPrefByMemberID(string aLicKey, int iMember) {
            object[] results = this.Invoke("GetAllProviderPrefByMemberID", new object[] {
                        aLicKey,
                        iMember});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProviderPrefByMemberIDAsync(string aLicKey, int iMember) {
            this.GetAllProviderPrefByMemberIDAsync(aLicKey, iMember, null);
        }
        
        /// <remarks/>
        public void GetAllProviderPrefByMemberIDAsync(string aLicKey, int iMember, object userState) {
            if ((this.GetAllProviderPrefByMemberIDOperationCompleted == null)) {
                this.GetAllProviderPrefByMemberIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProviderPrefByMemberIDOperationCompleted);
            }
            this.InvokeAsync("GetAllProviderPrefByMemberID", new object[] {
                        aLicKey,
                        iMember}, this.GetAllProviderPrefByMemberIDOperationCompleted, userState);
        }
        
        private void OnGetAllProviderPrefByMemberIDOperationCompleted(object arg) {
            if ((this.GetAllProviderPrefByMemberIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProviderPrefByMemberIDCompleted(this, new GetAllProviderPrefByMemberIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAllProviderPrefByProviderID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllProviderPrefByProviderID(string aLicKey, int iProviderID) {
            object[] results = this.Invoke("GetAllProviderPrefByProviderID", new object[] {
                        aLicKey,
                        iProviderID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProviderPrefByProviderIDAsync(string aLicKey, int iProviderID) {
            this.GetAllProviderPrefByProviderIDAsync(aLicKey, iProviderID, null);
        }
        
        /// <remarks/>
        public void GetAllProviderPrefByProviderIDAsync(string aLicKey, int iProviderID, object userState) {
            if ((this.GetAllProviderPrefByProviderIDOperationCompleted == null)) {
                this.GetAllProviderPrefByProviderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProviderPrefByProviderIDOperationCompleted);
            }
            this.InvokeAsync("GetAllProviderPrefByProviderID", new object[] {
                        aLicKey,
                        iProviderID}, this.GetAllProviderPrefByProviderIDOperationCompleted, userState);
        }
        
        private void OnGetAllProviderPrefByProviderIDOperationCompleted(object arg) {
            if ((this.GetAllProviderPrefByProviderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProviderPrefByProviderIDCompleted(this, new GetAllProviderPrefByProviderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAllProviderPrefByProvID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllProviderPrefByProvID(string aLicKey, string sGeoarea, int iProviderID) {
            object[] results = this.Invoke("GetAllProviderPrefByProvID", new object[] {
                        aLicKey,
                        sGeoarea,
                        iProviderID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProviderPrefByProvIDAsync(string aLicKey, string sGeoarea, int iProviderID) {
            this.GetAllProviderPrefByProvIDAsync(aLicKey, sGeoarea, iProviderID, null);
        }
        
        /// <remarks/>
        public void GetAllProviderPrefByProvIDAsync(string aLicKey, string sGeoarea, int iProviderID, object userState) {
            if ((this.GetAllProviderPrefByProvIDOperationCompleted == null)) {
                this.GetAllProviderPrefByProvIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProviderPrefByProvIDOperationCompleted);
            }
            this.InvokeAsync("GetAllProviderPrefByProvID", new object[] {
                        aLicKey,
                        sGeoarea,
                        iProviderID}, this.GetAllProviderPrefByProvIDOperationCompleted, userState);
        }
        
        private void OnGetAllProviderPrefByProvIDOperationCompleted(object arg) {
            if ((this.GetAllProviderPrefByProvIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProviderPrefByProvIDCompleted(this, new GetAllProviderPrefByProvIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetProviderPrefListByType", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProviderPrefListByType(string aLicKey, string sProviderType) {
            object[] results = this.Invoke("GetProviderPrefListByType", new object[] {
                        aLicKey,
                        sProviderType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderPrefListByTypeAsync(string aLicKey, string sProviderType) {
            this.GetProviderPrefListByTypeAsync(aLicKey, sProviderType, null);
        }
        
        /// <remarks/>
        public void GetProviderPrefListByTypeAsync(string aLicKey, string sProviderType, object userState) {
            if ((this.GetProviderPrefListByTypeOperationCompleted == null)) {
                this.GetProviderPrefListByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderPrefListByTypeOperationCompleted);
            }
            this.InvokeAsync("GetProviderPrefListByType", new object[] {
                        aLicKey,
                        sProviderType}, this.GetProviderPrefListByTypeOperationCompleted, userState);
        }
        
        private void OnGetProviderPrefListByTypeOperationCompleted(object arg) {
            if ((this.GetProviderPrefListByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderPrefListByTypeCompleted(this, new GetProviderPrefListByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetProviderPrefListByMemberID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProviderPrefListByMemberID(string aLicKey, int iMember, int iProviderID, string cRole) {
            object[] results = this.Invoke("GetProviderPrefListByMemberID", new object[] {
                        aLicKey,
                        iMember,
                        iProviderID,
                        cRole});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderPrefListByMemberIDAsync(string aLicKey, int iMember, int iProviderID, string cRole) {
            this.GetProviderPrefListByMemberIDAsync(aLicKey, iMember, iProviderID, cRole, null);
        }
        
        /// <remarks/>
        public void GetProviderPrefListByMemberIDAsync(string aLicKey, int iMember, int iProviderID, string cRole, object userState) {
            if ((this.GetProviderPrefListByMemberIDOperationCompleted == null)) {
                this.GetProviderPrefListByMemberIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderPrefListByMemberIDOperationCompleted);
            }
            this.InvokeAsync("GetProviderPrefListByMemberID", new object[] {
                        aLicKey,
                        iMember,
                        iProviderID,
                        cRole}, this.GetProviderPrefListByMemberIDOperationCompleted, userState);
        }
        
        private void OnGetProviderPrefListByMemberIDOperationCompleted(object arg) {
            if ((this.GetProviderPrefListByMemberIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderPrefListByMemberIDCompleted(this, new GetProviderPrefListByMemberIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetProviderInfoByMemberID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers GetProviderInfoByMemberID(string aLicKey, int iMember, int iProviderID, string cRole) {
            object[] results = this.Invoke("GetProviderInfoByMemberID", new object[] {
                        aLicKey,
                        iMember,
                        iProviderID,
                        cRole});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderInfoByMemberIDAsync(string aLicKey, int iMember, int iProviderID, string cRole) {
            this.GetProviderInfoByMemberIDAsync(aLicKey, iMember, iProviderID, cRole, null);
        }
        
        /// <remarks/>
        public void GetProviderInfoByMemberIDAsync(string aLicKey, int iMember, int iProviderID, string cRole, object userState) {
            if ((this.GetProviderInfoByMemberIDOperationCompleted == null)) {
                this.GetProviderInfoByMemberIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderInfoByMemberIDOperationCompleted);
            }
            this.InvokeAsync("GetProviderInfoByMemberID", new object[] {
                        aLicKey,
                        iMember,
                        iProviderID,
                        cRole}, this.GetProviderInfoByMemberIDOperationCompleted, userState);
        }
        
        private void OnGetProviderInfoByMemberIDOperationCompleted(object arg) {
            if ((this.GetProviderInfoByMemberIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderInfoByMemberIDCompleted(this, new GetProviderInfoByMemberIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateProviderPrefInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateProviderPrefInfo(string aLicKey, int iMemberID, int iBuddyID, string cRole, bool iIsActive, string sCGSiteID, System.Guid gProvPrefID, string sTypeCD, string sProviderDesc, int iProviderID) {
            object[] results = this.Invoke("UpdateProviderPrefInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        iBuddyID,
                        cRole,
                        iIsActive,
                        sCGSiteID,
                        gProvPrefID,
                        sTypeCD,
                        sProviderDesc,
                        iProviderID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProviderPrefInfoAsync(string aLicKey, int iMemberID, int iBuddyID, string cRole, bool iIsActive, string sCGSiteID, System.Guid gProvPrefID, string sTypeCD, string sProviderDesc, int iProviderID) {
            this.UpdateProviderPrefInfoAsync(aLicKey, iMemberID, iBuddyID, cRole, iIsActive, sCGSiteID, gProvPrefID, sTypeCD, sProviderDesc, iProviderID, null);
        }
        
        /// <remarks/>
        public void UpdateProviderPrefInfoAsync(string aLicKey, int iMemberID, int iBuddyID, string cRole, bool iIsActive, string sCGSiteID, System.Guid gProvPrefID, string sTypeCD, string sProviderDesc, int iProviderID, object userState) {
            if ((this.UpdateProviderPrefInfoOperationCompleted == null)) {
                this.UpdateProviderPrefInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProviderPrefInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateProviderPrefInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        iBuddyID,
                        cRole,
                        iIsActive,
                        sCGSiteID,
                        gProvPrefID,
                        sTypeCD,
                        sProviderDesc,
                        iProviderID}, this.UpdateProviderPrefInfoOperationCompleted, userState);
        }
        
        private void OnUpdateProviderPrefInfoOperationCompleted(object arg) {
            if ((this.UpdateProviderPrefInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProviderPrefInfoCompleted(this, new UpdateProviderPrefInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DeleteProviderPrefInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteProviderPrefInfo(string aLicKey, System.Guid gID, int iBuddyID) {
            object[] results = this.Invoke("DeleteProviderPrefInfo", new object[] {
                        aLicKey,
                        gID,
                        iBuddyID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProviderPrefInfoAsync(string aLicKey, System.Guid gID, int iBuddyID) {
            this.DeleteProviderPrefInfoAsync(aLicKey, gID, iBuddyID, null);
        }
        
        /// <remarks/>
        public void DeleteProviderPrefInfoAsync(string aLicKey, System.Guid gID, int iBuddyID, object userState) {
            if ((this.DeleteProviderPrefInfoOperationCompleted == null)) {
                this.DeleteProviderPrefInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProviderPrefInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteProviderPrefInfo", new object[] {
                        aLicKey,
                        gID,
                        iBuddyID}, this.DeleteProviderPrefInfoOperationCompleted, userState);
        }
        
        private void OnDeleteProviderPrefInfoOperationCompleted(object arg) {
            if ((this.DeleteProviderPrefInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProviderPrefInfoCompleted(this, new DeleteProviderPrefInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/LoadMemberProfile", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BCNProfile LoadMemberProfile(string aLicKey, int iMember, long iRow, System.Data.DataSet dsData) {
            object[] results = this.Invoke("LoadMemberProfile", new object[] {
                        aLicKey,
                        iMember,
                        iRow,
                        dsData});
            return ((BCNProfile)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMemberProfileAsync(string aLicKey, int iMember, long iRow, System.Data.DataSet dsData) {
            this.LoadMemberProfileAsync(aLicKey, iMember, iRow, dsData, null);
        }
        
        /// <remarks/>
        public void LoadMemberProfileAsync(string aLicKey, int iMember, long iRow, System.Data.DataSet dsData, object userState) {
            if ((this.LoadMemberProfileOperationCompleted == null)) {
                this.LoadMemberProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMemberProfileOperationCompleted);
            }
            this.InvokeAsync("LoadMemberProfile", new object[] {
                        aLicKey,
                        iMember,
                        iRow,
                        dsData}, this.LoadMemberProfileOperationCompleted, userState);
        }
        
        private void OnLoadMemberProfileOperationCompleted(object arg) {
            if ((this.LoadMemberProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMemberProfileCompleted(this, new LoadMemberProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetProfileByMemberID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProfileByMemberID(string aLicKey, int iMember) {
            object[] results = this.Invoke("GetProfileByMemberID", new object[] {
                        aLicKey,
                        iMember});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileByMemberIDAsync(string aLicKey, int iMember) {
            this.GetProfileByMemberIDAsync(aLicKey, iMember, null);
        }
        
        /// <remarks/>
        public void GetProfileByMemberIDAsync(string aLicKey, int iMember, object userState) {
            if ((this.GetProfileByMemberIDOperationCompleted == null)) {
                this.GetProfileByMemberIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileByMemberIDOperationCompleted);
            }
            this.InvokeAsync("GetProfileByMemberID", new object[] {
                        aLicKey,
                        iMember}, this.GetProfileByMemberIDOperationCompleted, userState);
        }
        
        private void OnGetProfileByMemberIDOperationCompleted(object arg) {
            if ((this.GetProfileByMemberIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileByMemberIDCompleted(this, new GetProfileByMemberIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/SaveMemberProfile", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BCNProfile SaveMemberProfile(string aLicKey, int iUserMemberID, BCNProfile clsProfile) {
            object[] results = this.Invoke("SaveMemberProfile", new object[] {
                        aLicKey,
                        iUserMemberID,
                        clsProfile});
            return ((BCNProfile)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMemberProfileAsync(string aLicKey, int iUserMemberID, BCNProfile clsProfile) {
            this.SaveMemberProfileAsync(aLicKey, iUserMemberID, clsProfile, null);
        }
        
        /// <remarks/>
        public void SaveMemberProfileAsync(string aLicKey, int iUserMemberID, BCNProfile clsProfile, object userState) {
            if ((this.SaveMemberProfileOperationCompleted == null)) {
                this.SaveMemberProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMemberProfileOperationCompleted);
            }
            this.InvokeAsync("SaveMemberProfile", new object[] {
                        aLicKey,
                        iUserMemberID,
                        clsProfile}, this.SaveMemberProfileOperationCompleted, userState);
        }
        
        private void OnSaveMemberProfileOperationCompleted(object arg) {
            if ((this.SaveMemberProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMemberProfileCompleted(this, new SaveMemberProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateMemberProfile", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BCNProfile UpdateMemberProfile(string aLicKey, int iUserMemberID, BCNProfile clsProfile) {
            object[] results = this.Invoke("UpdateMemberProfile", new object[] {
                        aLicKey,
                        iUserMemberID,
                        clsProfile});
            return ((BCNProfile)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberProfileAsync(string aLicKey, int iUserMemberID, BCNProfile clsProfile) {
            this.UpdateMemberProfileAsync(aLicKey, iUserMemberID, clsProfile, null);
        }
        
        /// <remarks/>
        public void UpdateMemberProfileAsync(string aLicKey, int iUserMemberID, BCNProfile clsProfile, object userState) {
            if ((this.UpdateMemberProfileOperationCompleted == null)) {
                this.UpdateMemberProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberProfileOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberProfile", new object[] {
                        aLicKey,
                        iUserMemberID,
                        clsProfile}, this.UpdateMemberProfileOperationCompleted, userState);
        }
        
        private void OnUpdateMemberProfileOperationCompleted(object arg) {
            if ((this.UpdateMemberProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberProfileCompleted(this, new UpdateMemberProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetShortCodes", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShortCodes(string aLicKey, int iMemberID, int iSponsorID) {
            object[] results = this.Invoke("GetShortCodes", new object[] {
                        aLicKey,
                        iMemberID,
                        iSponsorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShortCodesAsync(string aLicKey, int iMemberID, int iSponsorID) {
            this.GetShortCodesAsync(aLicKey, iMemberID, iSponsorID, null);
        }
        
        /// <remarks/>
        public void GetShortCodesAsync(string aLicKey, int iMemberID, int iSponsorID, object userState) {
            if ((this.GetShortCodesOperationCompleted == null)) {
                this.GetShortCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShortCodesOperationCompleted);
            }
            this.InvokeAsync("GetShortCodes", new object[] {
                        aLicKey,
                        iMemberID,
                        iSponsorID}, this.GetShortCodesOperationCompleted, userState);
        }
        
        private void OnGetShortCodesOperationCompleted(object arg) {
            if ((this.GetShortCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShortCodesCompleted(this, new GetShortCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAllShortCodes", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllShortCodes(string aLicKey) {
            object[] results = this.Invoke("GetAllShortCodes", new object[] {
                        aLicKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllShortCodesAsync(string aLicKey) {
            this.GetAllShortCodesAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void GetAllShortCodesAsync(string aLicKey, object userState) {
            if ((this.GetAllShortCodesOperationCompleted == null)) {
                this.GetAllShortCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllShortCodesOperationCompleted);
            }
            this.InvokeAsync("GetAllShortCodes", new object[] {
                        aLicKey}, this.GetAllShortCodesOperationCompleted, userState);
        }
        
        private void OnGetAllShortCodesOperationCompleted(object arg) {
            if ((this.GetAllShortCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllShortCodesCompleted(this, new GetAllShortCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateShortCodes", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateShortCodes(string aLicKey, ShortCodeClass clsShortCD) {
            object[] results = this.Invoke("UpdateShortCodes", new object[] {
                        aLicKey,
                        clsShortCD});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateShortCodesAsync(string aLicKey, ShortCodeClass clsShortCD) {
            this.UpdateShortCodesAsync(aLicKey, clsShortCD, null);
        }
        
        /// <remarks/>
        public void UpdateShortCodesAsync(string aLicKey, ShortCodeClass clsShortCD, object userState) {
            if ((this.UpdateShortCodesOperationCompleted == null)) {
                this.UpdateShortCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateShortCodesOperationCompleted);
            }
            this.InvokeAsync("UpdateShortCodes", new object[] {
                        aLicKey,
                        clsShortCD}, this.UpdateShortCodesOperationCompleted, userState);
        }
        
        private void OnUpdateShortCodesOperationCompleted(object arg) {
            if ((this.UpdateShortCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateShortCodesCompleted(this, new UpdateShortCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddShortCode", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddShortCode(string aLicKey, ShortCodeClass clsShortCD) {
            object[] results = this.Invoke("AddShortCode", new object[] {
                        aLicKey,
                        clsShortCD});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddShortCodeAsync(string aLicKey, ShortCodeClass clsShortCD) {
            this.AddShortCodeAsync(aLicKey, clsShortCD, null);
        }
        
        /// <remarks/>
        public void AddShortCodeAsync(string aLicKey, ShortCodeClass clsShortCD, object userState) {
            if ((this.AddShortCodeOperationCompleted == null)) {
                this.AddShortCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddShortCodeOperationCompleted);
            }
            this.InvokeAsync("AddShortCode", new object[] {
                        aLicKey,
                        clsShortCD}, this.AddShortCodeOperationCompleted, userState);
        }
        
        private void OnAddShortCodeOperationCompleted(object arg) {
            if ((this.AddShortCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddShortCodeCompleted(this, new AddShortCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DeleteShortCode", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteShortCode(string aLicKey, ShortCodeClass clsShortCD) {
            object[] results = this.Invoke("DeleteShortCode", new object[] {
                        aLicKey,
                        clsShortCD});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteShortCodeAsync(string aLicKey, ShortCodeClass clsShortCD) {
            this.DeleteShortCodeAsync(aLicKey, clsShortCD, null);
        }
        
        /// <remarks/>
        public void DeleteShortCodeAsync(string aLicKey, ShortCodeClass clsShortCD, object userState) {
            if ((this.DeleteShortCodeOperationCompleted == null)) {
                this.DeleteShortCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteShortCodeOperationCompleted);
            }
            this.InvokeAsync("DeleteShortCode", new object[] {
                        aLicKey,
                        clsShortCD}, this.DeleteShortCodeOperationCompleted, userState);
        }
        
        private void OnDeleteShortCodeOperationCompleted(object arg) {
            if ((this.DeleteShortCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteShortCodeCompleted(this, new DeleteShortCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/MSTranslate", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MSTranslate(string aLicKey, string MsgText, string FromLang, string ToLang) {
            object[] results = this.Invoke("MSTranslate", new object[] {
                        aLicKey,
                        MsgText,
                        FromLang,
                        ToLang});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MSTranslateAsync(string aLicKey, string MsgText, string FromLang, string ToLang) {
            this.MSTranslateAsync(aLicKey, MsgText, FromLang, ToLang, null);
        }
        
        /// <remarks/>
        public void MSTranslateAsync(string aLicKey, string MsgText, string FromLang, string ToLang, object userState) {
            if ((this.MSTranslateOperationCompleted == null)) {
                this.MSTranslateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMSTranslateOperationCompleted);
            }
            this.InvokeAsync("MSTranslate", new object[] {
                        aLicKey,
                        MsgText,
                        FromLang,
                        ToLang}, this.MSTranslateOperationCompleted, userState);
        }
        
        private void OnMSTranslateOperationCompleted(object arg) {
            if ((this.MSTranslateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MSTranslateCompleted(this, new MSTranslateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/ConnectMobileCaregiver", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LogonClass ConnectMobileCaregiver(string aLicKey, string sUserID, string sPhoneNumber, string sPswd) {
            object[] results = this.Invoke("ConnectMobileCaregiver", new object[] {
                        aLicKey,
                        sUserID,
                        sPhoneNumber,
                        sPswd});
            return ((LogonClass)(results[0]));
        }
        
        /// <remarks/>
        public void ConnectMobileCaregiverAsync(string aLicKey, string sUserID, string sPhoneNumber, string sPswd) {
            this.ConnectMobileCaregiverAsync(aLicKey, sUserID, sPhoneNumber, sPswd, null);
        }
        
        /// <remarks/>
        public void ConnectMobileCaregiverAsync(string aLicKey, string sUserID, string sPhoneNumber, string sPswd, object userState) {
            if ((this.ConnectMobileCaregiverOperationCompleted == null)) {
                this.ConnectMobileCaregiverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectMobileCaregiverOperationCompleted);
            }
            this.InvokeAsync("ConnectMobileCaregiver", new object[] {
                        aLicKey,
                        sUserID,
                        sPhoneNumber,
                        sPswd}, this.ConnectMobileCaregiverOperationCompleted, userState);
        }
        
        private void OnConnectMobileCaregiverOperationCompleted(object arg) {
            if ((this.ConnectMobileCaregiverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectMobileCaregiverCompleted(this, new ConnectMobileCaregiverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddContactInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddContactInfo(string aLicKey, string sMemberPhone, string sBuddyPhone, string cRole, string sCGSiteID, string sRelationshipCD) {
            object[] results = this.Invoke("AddContactInfo", new object[] {
                        aLicKey,
                        sMemberPhone,
                        sBuddyPhone,
                        cRole,
                        sCGSiteID,
                        sRelationshipCD});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddContactInfoAsync(string aLicKey, string sMemberPhone, string sBuddyPhone, string cRole, string sCGSiteID, string sRelationshipCD) {
            this.AddContactInfoAsync(aLicKey, sMemberPhone, sBuddyPhone, cRole, sCGSiteID, sRelationshipCD, null);
        }
        
        /// <remarks/>
        public void AddContactInfoAsync(string aLicKey, string sMemberPhone, string sBuddyPhone, string cRole, string sCGSiteID, string sRelationshipCD, object userState) {
            if ((this.AddContactInfoOperationCompleted == null)) {
                this.AddContactInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContactInfoOperationCompleted);
            }
            this.InvokeAsync("AddContactInfo", new object[] {
                        aLicKey,
                        sMemberPhone,
                        sBuddyPhone,
                        cRole,
                        sCGSiteID,
                        sRelationshipCD}, this.AddContactInfoOperationCompleted, userState);
        }
        
        private void OnAddContactInfoOperationCompleted(object arg) {
            if ((this.AddContactInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContactInfoCompleted(this, new AddContactInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddProviderPrefInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddProviderPrefInfo(string aLicKey, int iMemberID, int iRootBuddyID, string cRole, string sProviderDesc, string sCGSiteID, int iProviderID, string sGeoArea, string sTypeCD) {
            object[] results = this.Invoke("AddProviderPrefInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        iRootBuddyID,
                        cRole,
                        sProviderDesc,
                        sCGSiteID,
                        iProviderID,
                        sGeoArea,
                        sTypeCD});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddProviderPrefInfoAsync(string aLicKey, int iMemberID, int iRootBuddyID, string cRole, string sProviderDesc, string sCGSiteID, int iProviderID, string sGeoArea, string sTypeCD) {
            this.AddProviderPrefInfoAsync(aLicKey, iMemberID, iRootBuddyID, cRole, sProviderDesc, sCGSiteID, iProviderID, sGeoArea, sTypeCD, null);
        }
        
        /// <remarks/>
        public void AddProviderPrefInfoAsync(string aLicKey, int iMemberID, int iRootBuddyID, string cRole, string sProviderDesc, string sCGSiteID, int iProviderID, string sGeoArea, string sTypeCD, object userState) {
            if ((this.AddProviderPrefInfoOperationCompleted == null)) {
                this.AddProviderPrefInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProviderPrefInfoOperationCompleted);
            }
            this.InvokeAsync("AddProviderPrefInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        iRootBuddyID,
                        cRole,
                        sProviderDesc,
                        sCGSiteID,
                        iProviderID,
                        sGeoArea,
                        sTypeCD}, this.AddProviderPrefInfoOperationCompleted, userState);
        }
        
        private void OnAddProviderPrefInfoOperationCompleted(object arg) {
            if ((this.AddProviderPrefInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProviderPrefInfoCompleted(this, new AddProviderPrefInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddContactInfoByID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddContactInfoByID(string aLicKey, int iMember, int iBuddy, string cRole, string sCGSiteID, string sRelationshipCD) {
            object[] results = this.Invoke("AddContactInfoByID", new object[] {
                        aLicKey,
                        iMember,
                        iBuddy,
                        cRole,
                        sCGSiteID,
                        sRelationshipCD});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddContactInfoByIDAsync(string aLicKey, int iMember, int iBuddy, string cRole, string sCGSiteID, string sRelationshipCD) {
            this.AddContactInfoByIDAsync(aLicKey, iMember, iBuddy, cRole, sCGSiteID, sRelationshipCD, null);
        }
        
        /// <remarks/>
        public void AddContactInfoByIDAsync(string aLicKey, int iMember, int iBuddy, string cRole, string sCGSiteID, string sRelationshipCD, object userState) {
            if ((this.AddContactInfoByIDOperationCompleted == null)) {
                this.AddContactInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContactInfoByIDOperationCompleted);
            }
            this.InvokeAsync("AddContactInfoByID", new object[] {
                        aLicKey,
                        iMember,
                        iBuddy,
                        cRole,
                        sCGSiteID,
                        sRelationshipCD}, this.AddContactInfoByIDOperationCompleted, userState);
        }
        
        private void OnAddContactInfoByIDOperationCompleted(object arg) {
            if ((this.AddContactInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContactInfoByIDCompleted(this, new AddContactInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddGroupMessageInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddGroupMessageInfo(string aLicKey, string sToPhoneNumber, string sFromPhoneNumber, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, int sSponsorID, bool bIsAudio) {
            object[] results = this.Invoke("AddGroupMessageInfo", new object[] {
                        aLicKey,
                        sToPhoneNumber,
                        sFromPhoneNumber,
                        sTextSMS,
                        sTextTTS,
                        sSubject,
                        sMsgType,
                        sFromAddr,
                        sMsgURL,
                        sSponsorID,
                        bIsAudio});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupMessageInfoAsync(string aLicKey, string sToPhoneNumber, string sFromPhoneNumber, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, int sSponsorID, bool bIsAudio) {
            this.AddGroupMessageInfoAsync(aLicKey, sToPhoneNumber, sFromPhoneNumber, sTextSMS, sTextTTS, sSubject, sMsgType, sFromAddr, sMsgURL, sSponsorID, bIsAudio, null);
        }
        
        /// <remarks/>
        public void AddGroupMessageInfoAsync(string aLicKey, string sToPhoneNumber, string sFromPhoneNumber, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, int sSponsorID, bool bIsAudio, object userState) {
            if ((this.AddGroupMessageInfoOperationCompleted == null)) {
                this.AddGroupMessageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupMessageInfoOperationCompleted);
            }
            this.InvokeAsync("AddGroupMessageInfo", new object[] {
                        aLicKey,
                        sToPhoneNumber,
                        sFromPhoneNumber,
                        sTextSMS,
                        sTextTTS,
                        sSubject,
                        sMsgType,
                        sFromAddr,
                        sMsgURL,
                        sSponsorID,
                        bIsAudio}, this.AddGroupMessageInfoOperationCompleted, userState);
        }
        
        private void OnAddGroupMessageInfoOperationCompleted(object arg) {
            if ((this.AddGroupMessageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupMessageInfoCompleted(this, new AddGroupMessageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddMemberMessageInfoWithDates", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddMemberMessageInfoWithDates(string aLicKey, int iToMemberID, string sFromPhone, int iFromMemberID, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, bool bIsAudio, System.DateTime dStartDate, System.DateTime dStopDate) {
            object[] results = this.Invoke("AddMemberMessageInfoWithDates", new object[] {
                        aLicKey,
                        iToMemberID,
                        sFromPhone,
                        iFromMemberID,
                        sTextSMS,
                        sTextTTS,
                        sSubject,
                        sMsgType,
                        sFromAddr,
                        sMsgURL,
                        bIsAudio,
                        dStartDate,
                        dStopDate});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddMemberMessageInfoWithDatesAsync(string aLicKey, int iToMemberID, string sFromPhone, int iFromMemberID, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, bool bIsAudio, System.DateTime dStartDate, System.DateTime dStopDate) {
            this.AddMemberMessageInfoWithDatesAsync(aLicKey, iToMemberID, sFromPhone, iFromMemberID, sTextSMS, sTextTTS, sSubject, sMsgType, sFromAddr, sMsgURL, bIsAudio, dStartDate, dStopDate, null);
        }
        
        /// <remarks/>
        public void AddMemberMessageInfoWithDatesAsync(string aLicKey, int iToMemberID, string sFromPhone, int iFromMemberID, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, bool bIsAudio, System.DateTime dStartDate, System.DateTime dStopDate, object userState) {
            if ((this.AddMemberMessageInfoWithDatesOperationCompleted == null)) {
                this.AddMemberMessageInfoWithDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMemberMessageInfoWithDatesOperationCompleted);
            }
            this.InvokeAsync("AddMemberMessageInfoWithDates", new object[] {
                        aLicKey,
                        iToMemberID,
                        sFromPhone,
                        iFromMemberID,
                        sTextSMS,
                        sTextTTS,
                        sSubject,
                        sMsgType,
                        sFromAddr,
                        sMsgURL,
                        bIsAudio,
                        dStartDate,
                        dStopDate}, this.AddMemberMessageInfoWithDatesOperationCompleted, userState);
        }
        
        private void OnAddMemberMessageInfoWithDatesOperationCompleted(object arg) {
            if ((this.AddMemberMessageInfoWithDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMemberMessageInfoWithDatesCompleted(this, new AddMemberMessageInfoWithDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateMemberMessageInfoWithDates", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateMemberMessageInfoWithDates(string aLicKey, AutoTextMsgs AutoMsgData) {
            object[] results = this.Invoke("UpdateMemberMessageInfoWithDates", new object[] {
                        aLicKey,
                        AutoMsgData});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberMessageInfoWithDatesAsync(string aLicKey, AutoTextMsgs AutoMsgData) {
            this.UpdateMemberMessageInfoWithDatesAsync(aLicKey, AutoMsgData, null);
        }
        
        /// <remarks/>
        public void UpdateMemberMessageInfoWithDatesAsync(string aLicKey, AutoTextMsgs AutoMsgData, object userState) {
            if ((this.UpdateMemberMessageInfoWithDatesOperationCompleted == null)) {
                this.UpdateMemberMessageInfoWithDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberMessageInfoWithDatesOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberMessageInfoWithDates", new object[] {
                        aLicKey,
                        AutoMsgData}, this.UpdateMemberMessageInfoWithDatesOperationCompleted, userState);
        }
        
        private void OnUpdateMemberMessageInfoWithDatesOperationCompleted(object arg) {
            if ((this.UpdateMemberMessageInfoWithDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberMessageInfoWithDatesCompleted(this, new UpdateMemberMessageInfoWithDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateMemberMessageResponse", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateMemberMessageResponse(string aLicKey, int lResponseID, int iMemberID, string sResponseType, string sResponseURL, string sResponseText, string sResponseSeq, long lScheduleID, long lMsgID, int iLastUpdatedBy) {
            object[] results = this.Invoke("UpdateMemberMessageResponse", new object[] {
                        aLicKey,
                        lResponseID,
                        iMemberID,
                        sResponseType,
                        sResponseURL,
                        sResponseText,
                        sResponseSeq,
                        lScheduleID,
                        lMsgID,
                        iLastUpdatedBy});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberMessageResponseAsync(string aLicKey, int lResponseID, int iMemberID, string sResponseType, string sResponseURL, string sResponseText, string sResponseSeq, long lScheduleID, long lMsgID, int iLastUpdatedBy) {
            this.UpdateMemberMessageResponseAsync(aLicKey, lResponseID, iMemberID, sResponseType, sResponseURL, sResponseText, sResponseSeq, lScheduleID, lMsgID, iLastUpdatedBy, null);
        }
        
        /// <remarks/>
        public void UpdateMemberMessageResponseAsync(string aLicKey, int lResponseID, int iMemberID, string sResponseType, string sResponseURL, string sResponseText, string sResponseSeq, long lScheduleID, long lMsgID, int iLastUpdatedBy, object userState) {
            if ((this.UpdateMemberMessageResponseOperationCompleted == null)) {
                this.UpdateMemberMessageResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberMessageResponseOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberMessageResponse", new object[] {
                        aLicKey,
                        lResponseID,
                        iMemberID,
                        sResponseType,
                        sResponseURL,
                        sResponseText,
                        sResponseSeq,
                        lScheduleID,
                        lMsgID,
                        iLastUpdatedBy}, this.UpdateMemberMessageResponseOperationCompleted, userState);
        }
        
        private void OnUpdateMemberMessageResponseOperationCompleted(object arg) {
            if ((this.UpdateMemberMessageResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberMessageResponseCompleted(this, new UpdateMemberMessageResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateMemberMessageResponses", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateMemberMessageResponses(string aLicKey, AutoTextMsgs AutoMsgData) {
            object[] results = this.Invoke("UpdateMemberMessageResponses", new object[] {
                        aLicKey,
                        AutoMsgData});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberMessageResponsesAsync(string aLicKey, AutoTextMsgs AutoMsgData) {
            this.UpdateMemberMessageResponsesAsync(aLicKey, AutoMsgData, null);
        }
        
        /// <remarks/>
        public void UpdateMemberMessageResponsesAsync(string aLicKey, AutoTextMsgs AutoMsgData, object userState) {
            if ((this.UpdateMemberMessageResponsesOperationCompleted == null)) {
                this.UpdateMemberMessageResponsesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberMessageResponsesOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberMessageResponses", new object[] {
                        aLicKey,
                        AutoMsgData}, this.UpdateMemberMessageResponsesOperationCompleted, userState);
        }
        
        private void OnUpdateMemberMessageResponsesOperationCompleted(object arg) {
            if ((this.UpdateMemberMessageResponsesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberMessageResponsesCompleted(this, new UpdateMemberMessageResponsesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddMemberMessageInfoWithDatesID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddMemberMessageInfoWithDatesID(string aLicKey, int iToMemberID, string sFromPhone, int iFromMemberID, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, bool bIsAudio, System.DateTime dStartDate, System.DateTime dStopDate) {
            object[] results = this.Invoke("AddMemberMessageInfoWithDatesID", new object[] {
                        aLicKey,
                        iToMemberID,
                        sFromPhone,
                        iFromMemberID,
                        sTextSMS,
                        sTextTTS,
                        sSubject,
                        sMsgType,
                        sFromAddr,
                        sMsgURL,
                        bIsAudio,
                        dStartDate,
                        dStopDate});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddMemberMessageInfoWithDatesIDAsync(string aLicKey, int iToMemberID, string sFromPhone, int iFromMemberID, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, bool bIsAudio, System.DateTime dStartDate, System.DateTime dStopDate) {
            this.AddMemberMessageInfoWithDatesIDAsync(aLicKey, iToMemberID, sFromPhone, iFromMemberID, sTextSMS, sTextTTS, sSubject, sMsgType, sFromAddr, sMsgURL, bIsAudio, dStartDate, dStopDate, null);
        }
        
        /// <remarks/>
        public void AddMemberMessageInfoWithDatesIDAsync(string aLicKey, int iToMemberID, string sFromPhone, int iFromMemberID, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, bool bIsAudio, System.DateTime dStartDate, System.DateTime dStopDate, object userState) {
            if ((this.AddMemberMessageInfoWithDatesIDOperationCompleted == null)) {
                this.AddMemberMessageInfoWithDatesIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMemberMessageInfoWithDatesIDOperationCompleted);
            }
            this.InvokeAsync("AddMemberMessageInfoWithDatesID", new object[] {
                        aLicKey,
                        iToMemberID,
                        sFromPhone,
                        iFromMemberID,
                        sTextSMS,
                        sTextTTS,
                        sSubject,
                        sMsgType,
                        sFromAddr,
                        sMsgURL,
                        bIsAudio,
                        dStartDate,
                        dStopDate}, this.AddMemberMessageInfoWithDatesIDOperationCompleted, userState);
        }
        
        private void OnAddMemberMessageInfoWithDatesIDOperationCompleted(object arg) {
            if ((this.AddMemberMessageInfoWithDatesIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMemberMessageInfoWithDatesIDCompleted(this, new AddMemberMessageInfoWithDatesIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddGroupMessageInfoWithDates", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddGroupMessageInfoWithDates(string aLicKey, string sToPhoneNumber, string sFromPhoneNumber, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, int sSponsorID, bool bIsAudio, System.DateTime dStartDate, System.DateTime dStopDate) {
            object[] results = this.Invoke("AddGroupMessageInfoWithDates", new object[] {
                        aLicKey,
                        sToPhoneNumber,
                        sFromPhoneNumber,
                        sTextSMS,
                        sTextTTS,
                        sSubject,
                        sMsgType,
                        sFromAddr,
                        sMsgURL,
                        sSponsorID,
                        bIsAudio,
                        dStartDate,
                        dStopDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupMessageInfoWithDatesAsync(string aLicKey, string sToPhoneNumber, string sFromPhoneNumber, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, int sSponsorID, bool bIsAudio, System.DateTime dStartDate, System.DateTime dStopDate) {
            this.AddGroupMessageInfoWithDatesAsync(aLicKey, sToPhoneNumber, sFromPhoneNumber, sTextSMS, sTextTTS, sSubject, sMsgType, sFromAddr, sMsgURL, sSponsorID, bIsAudio, dStartDate, dStopDate, null);
        }
        
        /// <remarks/>
        public void AddGroupMessageInfoWithDatesAsync(string aLicKey, string sToPhoneNumber, string sFromPhoneNumber, string sTextSMS, string sTextTTS, string sSubject, string sMsgType, string sFromAddr, string sMsgURL, int sSponsorID, bool bIsAudio, System.DateTime dStartDate, System.DateTime dStopDate, object userState) {
            if ((this.AddGroupMessageInfoWithDatesOperationCompleted == null)) {
                this.AddGroupMessageInfoWithDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupMessageInfoWithDatesOperationCompleted);
            }
            this.InvokeAsync("AddGroupMessageInfoWithDates", new object[] {
                        aLicKey,
                        sToPhoneNumber,
                        sFromPhoneNumber,
                        sTextSMS,
                        sTextTTS,
                        sSubject,
                        sMsgType,
                        sFromAddr,
                        sMsgURL,
                        sSponsorID,
                        bIsAudio,
                        dStartDate,
                        dStopDate}, this.AddGroupMessageInfoWithDatesOperationCompleted, userState);
        }
        
        private void OnAddGroupMessageInfoWithDatesOperationCompleted(object arg) {
            if ((this.AddGroupMessageInfoWithDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupMessageInfoWithDatesCompleted(this, new AddGroupMessageInfoWithDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddMessageResponse", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddMessageResponse(string aLicKey, int iMemberID, string sResponseType, string sResponseURL, string sResponseText, string sResponseSeq, long lScheduleID, long lMsgID, int iLastUpdatedBy) {
            object[] results = this.Invoke("AddMessageResponse", new object[] {
                        aLicKey,
                        iMemberID,
                        sResponseType,
                        sResponseURL,
                        sResponseText,
                        sResponseSeq,
                        lScheduleID,
                        lMsgID,
                        iLastUpdatedBy});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddMessageResponseAsync(string aLicKey, int iMemberID, string sResponseType, string sResponseURL, string sResponseText, string sResponseSeq, long lScheduleID, long lMsgID, int iLastUpdatedBy) {
            this.AddMessageResponseAsync(aLicKey, iMemberID, sResponseType, sResponseURL, sResponseText, sResponseSeq, lScheduleID, lMsgID, iLastUpdatedBy, null);
        }
        
        /// <remarks/>
        public void AddMessageResponseAsync(string aLicKey, int iMemberID, string sResponseType, string sResponseURL, string sResponseText, string sResponseSeq, long lScheduleID, long lMsgID, int iLastUpdatedBy, object userState) {
            if ((this.AddMessageResponseOperationCompleted == null)) {
                this.AddMessageResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMessageResponseOperationCompleted);
            }
            this.InvokeAsync("AddMessageResponse", new object[] {
                        aLicKey,
                        iMemberID,
                        sResponseType,
                        sResponseURL,
                        sResponseText,
                        sResponseSeq,
                        lScheduleID,
                        lMsgID,
                        iLastUpdatedBy}, this.AddMessageResponseOperationCompleted, userState);
        }
        
        private void OnAddMessageResponseOperationCompleted(object arg) {
            if ((this.AddMessageResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMessageResponseCompleted(this, new AddMessageResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateContactInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateContactInfo(string aLicKey, int iMemberID, int iBuddyID, string cRole, bool iIsActive, string sCGSiteID, string sRelationshipCD) {
            object[] results = this.Invoke("UpdateContactInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        iBuddyID,
                        cRole,
                        iIsActive,
                        sCGSiteID,
                        sRelationshipCD});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContactInfoAsync(string aLicKey, int iMemberID, int iBuddyID, string cRole, bool iIsActive, string sCGSiteID, string sRelationshipCD) {
            this.UpdateContactInfoAsync(aLicKey, iMemberID, iBuddyID, cRole, iIsActive, sCGSiteID, sRelationshipCD, null);
        }
        
        /// <remarks/>
        public void UpdateContactInfoAsync(string aLicKey, int iMemberID, int iBuddyID, string cRole, bool iIsActive, string sCGSiteID, string sRelationshipCD, object userState) {
            if ((this.UpdateContactInfoOperationCompleted == null)) {
                this.UpdateContactInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContactInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateContactInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        iBuddyID,
                        cRole,
                        iIsActive,
                        sCGSiteID,
                        sRelationshipCD}, this.UpdateContactInfoOperationCompleted, userState);
        }
        
        private void OnUpdateContactInfoOperationCompleted(object arg) {
            if ((this.UpdateContactInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContactInfoCompleted(this, new UpdateContactInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/ArchiveBcsTestLog", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ArchiveBcsTestLog(string aLicKey, int iBcsLogID) {
            object[] results = this.Invoke("ArchiveBcsTestLog", new object[] {
                        aLicKey,
                        iBcsLogID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ArchiveBcsTestLogAsync(string aLicKey, int iBcsLogID) {
            this.ArchiveBcsTestLogAsync(aLicKey, iBcsLogID, null);
        }
        
        /// <remarks/>
        public void ArchiveBcsTestLogAsync(string aLicKey, int iBcsLogID, object userState) {
            if ((this.ArchiveBcsTestLogOperationCompleted == null)) {
                this.ArchiveBcsTestLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchiveBcsTestLogOperationCompleted);
            }
            this.InvokeAsync("ArchiveBcsTestLog", new object[] {
                        aLicKey,
                        iBcsLogID}, this.ArchiveBcsTestLogOperationCompleted, userState);
        }
        
        private void OnArchiveBcsTestLogOperationCompleted(object arg) {
            if ((this.ArchiveBcsTestLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchiveBcsTestLogCompleted(this, new ArchiveBcsTestLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DeleteContactInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteContactInfo(string aLicKey, int iMemberID, int iBuddyID, string cRole) {
            object[] results = this.Invoke("DeleteContactInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        iBuddyID,
                        cRole});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContactInfoAsync(string aLicKey, int iMemberID, int iBuddyID, string cRole) {
            this.DeleteContactInfoAsync(aLicKey, iMemberID, iBuddyID, cRole, null);
        }
        
        /// <remarks/>
        public void DeleteContactInfoAsync(string aLicKey, int iMemberID, int iBuddyID, string cRole, object userState) {
            if ((this.DeleteContactInfoOperationCompleted == null)) {
                this.DeleteContactInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContactInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteContactInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        iBuddyID,
                        cRole}, this.DeleteContactInfoOperationCompleted, userState);
        }
        
        private void OnDeleteContactInfoOperationCompleted(object arg) {
            if ((this.DeleteContactInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContactInfoCompleted(this, new DeleteContactInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddToBCNetwork", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddToBCNetwork(string aLicKey, int iNewMemberID, int iNetworkRefId, int iSponsorID) {
            object[] results = this.Invoke("AddToBCNetwork", new object[] {
                        aLicKey,
                        iNewMemberID,
                        iNetworkRefId,
                        iSponsorID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddToBCNetworkAsync(string aLicKey, int iNewMemberID, int iNetworkRefId, int iSponsorID) {
            this.AddToBCNetworkAsync(aLicKey, iNewMemberID, iNetworkRefId, iSponsorID, null);
        }
        
        /// <remarks/>
        public void AddToBCNetworkAsync(string aLicKey, int iNewMemberID, int iNetworkRefId, int iSponsorID, object userState) {
            if ((this.AddToBCNetworkOperationCompleted == null)) {
                this.AddToBCNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToBCNetworkOperationCompleted);
            }
            this.InvokeAsync("AddToBCNetwork", new object[] {
                        aLicKey,
                        iNewMemberID,
                        iNetworkRefId,
                        iSponsorID}, this.AddToBCNetworkOperationCompleted, userState);
        }
        
        private void OnAddToBCNetworkOperationCompleted(object arg) {
            if ((this.AddToBCNetworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToBCNetworkCompleted(this, new AddToBCNetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/TranferToNewNetwork", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TranferToNewNetwork(string aLicKey, int iCurrentMemberID, int iNetworkID, int iSponsorID) {
            object[] results = this.Invoke("TranferToNewNetwork", new object[] {
                        aLicKey,
                        iCurrentMemberID,
                        iNetworkID,
                        iSponsorID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TranferToNewNetworkAsync(string aLicKey, int iCurrentMemberID, int iNetworkID, int iSponsorID) {
            this.TranferToNewNetworkAsync(aLicKey, iCurrentMemberID, iNetworkID, iSponsorID, null);
        }
        
        /// <remarks/>
        public void TranferToNewNetworkAsync(string aLicKey, int iCurrentMemberID, int iNetworkID, int iSponsorID, object userState) {
            if ((this.TranferToNewNetworkOperationCompleted == null)) {
                this.TranferToNewNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTranferToNewNetworkOperationCompleted);
            }
            this.InvokeAsync("TranferToNewNetwork", new object[] {
                        aLicKey,
                        iCurrentMemberID,
                        iNetworkID,
                        iSponsorID}, this.TranferToNewNetworkOperationCompleted, userState);
        }
        
        private void OnTranferToNewNetworkOperationCompleted(object arg) {
            if ((this.TranferToNewNetworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TranferToNewNetworkCompleted(this, new TranferToNewNetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/RemoveFromBCNetwork", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveFromBCNetwork(string aLicKey, int iCurrentMemberID) {
            object[] results = this.Invoke("RemoveFromBCNetwork", new object[] {
                        aLicKey,
                        iCurrentMemberID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFromBCNetworkAsync(string aLicKey, int iCurrentMemberID) {
            this.RemoveFromBCNetworkAsync(aLicKey, iCurrentMemberID, null);
        }
        
        /// <remarks/>
        public void RemoveFromBCNetworkAsync(string aLicKey, int iCurrentMemberID, object userState) {
            if ((this.RemoveFromBCNetworkOperationCompleted == null)) {
                this.RemoveFromBCNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFromBCNetworkOperationCompleted);
            }
            this.InvokeAsync("RemoveFromBCNetwork", new object[] {
                        aLicKey,
                        iCurrentMemberID}, this.RemoveFromBCNetworkOperationCompleted, userState);
        }
        
        private void OnRemoveFromBCNetworkOperationCompleted(object arg) {
            if ((this.RemoveFromBCNetworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFromBCNetworkCompleted(this, new RemoveFromBCNetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddScheduleInfo(
                    string aLicKey, 
                    int iMemberID, 
                    string dSchedDate, 
                    string tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            object[] results = this.Invoke("AddScheduleInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleInfoAsync(
                    string aLicKey, 
                    int iMemberID, 
                    string dSchedDate, 
                    string tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            this.AddScheduleInfoAsync(aLicKey, iMemberID, dSchedDate, tTime, sSiteID, iBcsTestCode, sCGSiteID, sCategory, sSubCategory, iContactTypeCode, sCallFreq, iMaxRecalls, iRecallsMade, iRefID, iWaitTime, dStopDate, bHasMsg, lMsgID, null);
        }
        
        /// <remarks/>
        public void AddScheduleInfoAsync(
                    string aLicKey, 
                    int iMemberID, 
                    string dSchedDate, 
                    string tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID, 
                    object userState) {
            if ((this.AddScheduleInfoOperationCompleted == null)) {
                this.AddScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("AddScheduleInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID}, this.AddScheduleInfoOperationCompleted, userState);
        }
        
        private void OnAddScheduleInfoOperationCompleted(object arg) {
            if ((this.AddScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleInfoCompleted(this, new AddScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddMemberReminder", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddMemberReminder(string aLicKey, int iMemberID, System.DateTime dReminderDate, int BCNTime, int iContactTypeCode, string sCallFreq, System.DateTime dStopDate, string sMessage) {
            object[] results = this.Invoke("AddMemberReminder", new object[] {
                        aLicKey,
                        iMemberID,
                        dReminderDate,
                        BCNTime,
                        iContactTypeCode,
                        sCallFreq,
                        dStopDate,
                        sMessage});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddMemberReminderAsync(string aLicKey, int iMemberID, System.DateTime dReminderDate, int BCNTime, int iContactTypeCode, string sCallFreq, System.DateTime dStopDate, string sMessage) {
            this.AddMemberReminderAsync(aLicKey, iMemberID, dReminderDate, BCNTime, iContactTypeCode, sCallFreq, dStopDate, sMessage, null);
        }
        
        /// <remarks/>
        public void AddMemberReminderAsync(string aLicKey, int iMemberID, System.DateTime dReminderDate, int BCNTime, int iContactTypeCode, string sCallFreq, System.DateTime dStopDate, string sMessage, object userState) {
            if ((this.AddMemberReminderOperationCompleted == null)) {
                this.AddMemberReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMemberReminderOperationCompleted);
            }
            this.InvokeAsync("AddMemberReminder", new object[] {
                        aLicKey,
                        iMemberID,
                        dReminderDate,
                        BCNTime,
                        iContactTypeCode,
                        sCallFreq,
                        dStopDate,
                        sMessage}, this.AddMemberReminderOperationCompleted, userState);
        }
        
        private void OnAddMemberReminderOperationCompleted(object arg) {
            if ((this.AddMemberReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMemberReminderCompleted(this, new AddMemberReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddScheduleInfoTZ", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddScheduleInfoTZ(
                    string aLicKey, 
                    int iMemberID, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            object[] results = this.Invoke("AddScheduleInfoTZ", new object[] {
                        aLicKey,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleInfoTZAsync(
                    string aLicKey, 
                    int iMemberID, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            this.AddScheduleInfoTZAsync(aLicKey, iMemberID, dSchedDate, tTime, sSiteID, iBcsTestCode, sCGSiteID, sCategory, sSubCategory, iContactTypeCode, sCallFreq, iMaxRecalls, iRecallsMade, iRefID, iWaitTime, dStopDate, bHasMsg, lMsgID, null);
        }
        
        /// <remarks/>
        public void AddScheduleInfoTZAsync(
                    string aLicKey, 
                    int iMemberID, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID, 
                    object userState) {
            if ((this.AddScheduleInfoTZOperationCompleted == null)) {
                this.AddScheduleInfoTZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleInfoTZOperationCompleted);
            }
            this.InvokeAsync("AddScheduleInfoTZ", new object[] {
                        aLicKey,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID}, this.AddScheduleInfoTZOperationCompleted, userState);
        }
        
        private void OnAddScheduleInfoTZOperationCompleted(object arg) {
            if ((this.AddScheduleInfoTZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleInfoTZCompleted(this, new AddScheduleInfoTZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddScheduleInfoResponseTZ", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddScheduleInfoResponseTZ(string aLicKey, int iMemberID, string sRespSiteID, string sCallFreq, int iMaxRecalls, int iWaitTime, System.DateTime dStopDate, bool bCreateMsg, string sSMSText, string sTTSText, string sSubject, string sMsgType, long lMsgID) {
            object[] results = this.Invoke("AddScheduleInfoResponseTZ", new object[] {
                        aLicKey,
                        iMemberID,
                        sRespSiteID,
                        sCallFreq,
                        iMaxRecalls,
                        iWaitTime,
                        dStopDate,
                        bCreateMsg,
                        sSMSText,
                        sTTSText,
                        sSubject,
                        sMsgType,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleInfoResponseTZAsync(string aLicKey, int iMemberID, string sRespSiteID, string sCallFreq, int iMaxRecalls, int iWaitTime, System.DateTime dStopDate, bool bCreateMsg, string sSMSText, string sTTSText, string sSubject, string sMsgType, long lMsgID) {
            this.AddScheduleInfoResponseTZAsync(aLicKey, iMemberID, sRespSiteID, sCallFreq, iMaxRecalls, iWaitTime, dStopDate, bCreateMsg, sSMSText, sTTSText, sSubject, sMsgType, lMsgID, null);
        }
        
        /// <remarks/>
        public void AddScheduleInfoResponseTZAsync(string aLicKey, int iMemberID, string sRespSiteID, string sCallFreq, int iMaxRecalls, int iWaitTime, System.DateTime dStopDate, bool bCreateMsg, string sSMSText, string sTTSText, string sSubject, string sMsgType, long lMsgID, object userState) {
            if ((this.AddScheduleInfoResponseTZOperationCompleted == null)) {
                this.AddScheduleInfoResponseTZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleInfoResponseTZOperationCompleted);
            }
            this.InvokeAsync("AddScheduleInfoResponseTZ", new object[] {
                        aLicKey,
                        iMemberID,
                        sRespSiteID,
                        sCallFreq,
                        iMaxRecalls,
                        iWaitTime,
                        dStopDate,
                        bCreateMsg,
                        sSMSText,
                        sTTSText,
                        sSubject,
                        sMsgType,
                        lMsgID}, this.AddScheduleInfoResponseTZOperationCompleted, userState);
        }
        
        private void OnAddScheduleInfoResponseTZOperationCompleted(object arg) {
            if ((this.AddScheduleInfoResponseTZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleInfoResponseTZCompleted(this, new AddScheduleInfoResponseTZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddScheduleInfoRandomTZ", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddScheduleInfoRandomTZ(
                    string aLicKey, 
                    int iMemberID, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            object[] results = this.Invoke("AddScheduleInfoRandomTZ", new object[] {
                        aLicKey,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleInfoRandomTZAsync(
                    string aLicKey, 
                    int iMemberID, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            this.AddScheduleInfoRandomTZAsync(aLicKey, iMemberID, dSchedDate, tTime, sSiteID, iBcsTestCode, sCGSiteID, sCategory, sSubCategory, iContactTypeCode, sCallFreq, iMaxRecalls, iRecallsMade, iRefID, iWaitTime, dStopDate, bHasMsg, lMsgID, null);
        }
        
        /// <remarks/>
        public void AddScheduleInfoRandomTZAsync(
                    string aLicKey, 
                    int iMemberID, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID, 
                    object userState) {
            if ((this.AddScheduleInfoRandomTZOperationCompleted == null)) {
                this.AddScheduleInfoRandomTZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleInfoRandomTZOperationCompleted);
            }
            this.InvokeAsync("AddScheduleInfoRandomTZ", new object[] {
                        aLicKey,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID}, this.AddScheduleInfoRandomTZOperationCompleted, userState);
        }
        
        private void OnAddScheduleInfoRandomTZOperationCompleted(object arg) {
            if ((this.AddScheduleInfoRandomTZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleInfoRandomTZCompleted(this, new AddScheduleInfoRandomTZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddGroupScheduleInfoTZ", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddGroupScheduleInfoTZ(
                    string aLicKey, 
                    string sAccountType, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            object[] results = this.Invoke("AddGroupScheduleInfoTZ", new object[] {
                        aLicKey,
                        sAccountType,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupScheduleInfoTZAsync(
                    string aLicKey, 
                    string sAccountType, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            this.AddGroupScheduleInfoTZAsync(aLicKey, sAccountType, dSchedDate, tTime, sSiteID, iBcsTestCode, sCGSiteID, sCategory, sSubCategory, iContactTypeCode, sCallFreq, iMaxRecalls, iRecallsMade, iWaitTime, dStopDate, bHasMsg, lMsgID, null);
        }
        
        /// <remarks/>
        public void AddGroupScheduleInfoTZAsync(
                    string aLicKey, 
                    string sAccountType, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID, 
                    object userState) {
            if ((this.AddGroupScheduleInfoTZOperationCompleted == null)) {
                this.AddGroupScheduleInfoTZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupScheduleInfoTZOperationCompleted);
            }
            this.InvokeAsync("AddGroupScheduleInfoTZ", new object[] {
                        aLicKey,
                        sAccountType,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID}, this.AddGroupScheduleInfoTZOperationCompleted, userState);
        }
        
        private void OnAddGroupScheduleInfoTZOperationCompleted(object arg) {
            if ((this.AddGroupScheduleInfoTZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupScheduleInfoTZCompleted(this, new AddGroupScheduleInfoTZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddNowScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNowScheduleInfo(
                    string aLicKey, 
                    int sMemberID, 
                    string sAcctTypeCode, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            object[] results = this.Invoke("AddNowScheduleInfo", new object[] {
                        aLicKey,
                        sMemberID,
                        sAcctTypeCode,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNowScheduleInfoAsync(
                    string aLicKey, 
                    int sMemberID, 
                    string sAcctTypeCode, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            this.AddNowScheduleInfoAsync(aLicKey, sMemberID, sAcctTypeCode, sSiteID, iBcsTestCode, sCGSiteID, sCategory, sSubCategory, iContactTypeCode, sCallFreq, iMaxRecalls, iRecallsMade, iRefID, iWaitTime, dStopDate, bHasMsg, lMsgID, null);
        }
        
        /// <remarks/>
        public void AddNowScheduleInfoAsync(
                    string aLicKey, 
                    int sMemberID, 
                    string sAcctTypeCode, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID, 
                    object userState) {
            if ((this.AddNowScheduleInfoOperationCompleted == null)) {
                this.AddNowScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNowScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("AddNowScheduleInfo", new object[] {
                        aLicKey,
                        sMemberID,
                        sAcctTypeCode,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID}, this.AddNowScheduleInfoOperationCompleted, userState);
        }
        
        private void OnAddNowScheduleInfoOperationCompleted(object arg) {
            if ((this.AddNowScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNowScheduleInfoCompleted(this, new AddNowScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddNowGroupScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNowGroupScheduleInfo(
                    string aLicKey, 
                    int iMemberID, 
                    string sAcctTypeCode, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            object[] results = this.Invoke("AddNowGroupScheduleInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        sAcctTypeCode,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNowGroupScheduleInfoAsync(
                    string aLicKey, 
                    int iMemberID, 
                    string sAcctTypeCode, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            this.AddNowGroupScheduleInfoAsync(aLicKey, iMemberID, sAcctTypeCode, sSiteID, iBcsTestCode, sCGSiteID, sCategory, sSubCategory, iContactTypeCode, sCallFreq, iMaxRecalls, iRecallsMade, iRefID, iWaitTime, dStopDate, bHasMsg, lMsgID, null);
        }
        
        /// <remarks/>
        public void AddNowGroupScheduleInfoAsync(
                    string aLicKey, 
                    int iMemberID, 
                    string sAcctTypeCode, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID, 
                    object userState) {
            if ((this.AddNowGroupScheduleInfoOperationCompleted == null)) {
                this.AddNowGroupScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNowGroupScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("AddNowGroupScheduleInfo", new object[] {
                        aLicKey,
                        iMemberID,
                        sAcctTypeCode,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID}, this.AddNowGroupScheduleInfoOperationCompleted, userState);
        }
        
        private void OnAddNowGroupScheduleInfoOperationCompleted(object arg) {
            if ((this.AddNowGroupScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNowGroupScheduleInfoCompleted(this, new AddNowGroupScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddNowCGGroupScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNowCGGroupScheduleInfo(
                    string aLicKey, 
                    int iBuddyID, 
                    string sAcctTypeCode, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            object[] results = this.Invoke("AddNowCGGroupScheduleInfo", new object[] {
                        aLicKey,
                        iBuddyID,
                        sAcctTypeCode,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNowCGGroupScheduleInfoAsync(
                    string aLicKey, 
                    int iBuddyID, 
                    string sAcctTypeCode, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            this.AddNowCGGroupScheduleInfoAsync(aLicKey, iBuddyID, sAcctTypeCode, sSiteID, iBcsTestCode, sCGSiteID, sCategory, sSubCategory, iContactTypeCode, sCallFreq, iMaxRecalls, iRecallsMade, iRefID, iWaitTime, dStopDate, bHasMsg, lMsgID, null);
        }
        
        /// <remarks/>
        public void AddNowCGGroupScheduleInfoAsync(
                    string aLicKey, 
                    int iBuddyID, 
                    string sAcctTypeCode, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID, 
                    object userState) {
            if ((this.AddNowCGGroupScheduleInfoOperationCompleted == null)) {
                this.AddNowCGGroupScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNowCGGroupScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("AddNowCGGroupScheduleInfo", new object[] {
                        aLicKey,
                        iBuddyID,
                        sAcctTypeCode,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID}, this.AddNowCGGroupScheduleInfoOperationCompleted, userState);
        }
        
        private void OnAddNowCGGroupScheduleInfoOperationCompleted(object arg) {
            if ((this.AddNowCGGroupScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNowCGGroupScheduleInfoCompleted(this, new AddNowCGGroupScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateScheduleInfo(
                    string aLicKey, 
                    string sMemberPhone, 
                    int iMemberID, 
                    string dSchedDate, 
                    string tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    string sCallingStatus, 
                    long iCurrScheduleID, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            object[] results = this.Invoke("UpdateScheduleInfo", new object[] {
                        aLicKey,
                        sMemberPhone,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        sCallingStatus,
                        iCurrScheduleID,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateScheduleInfoAsync(
                    string aLicKey, 
                    string sMemberPhone, 
                    int iMemberID, 
                    string dSchedDate, 
                    string tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    string sCallingStatus, 
                    long iCurrScheduleID, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            this.UpdateScheduleInfoAsync(aLicKey, sMemberPhone, iMemberID, dSchedDate, tTime, sSiteID, iBcsTestCode, sCGSiteID, sCategory, sSubCategory, sCallingStatus, iCurrScheduleID, iContactTypeCode, sCallFreq, iMaxRecalls, iRecallsMade, iRefID, iWaitTime, dStopDate, bHasMsg, lMsgID, null);
        }
        
        /// <remarks/>
        public void UpdateScheduleInfoAsync(
                    string aLicKey, 
                    string sMemberPhone, 
                    int iMemberID, 
                    string dSchedDate, 
                    string tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    string sCallingStatus, 
                    long iCurrScheduleID, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID, 
                    object userState) {
            if ((this.UpdateScheduleInfoOperationCompleted == null)) {
                this.UpdateScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateScheduleInfo", new object[] {
                        aLicKey,
                        sMemberPhone,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        sCallingStatus,
                        iCurrScheduleID,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID}, this.UpdateScheduleInfoOperationCompleted, userState);
        }
        
        private void OnUpdateScheduleInfoOperationCompleted(object arg) {
            if ((this.UpdateScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateScheduleInfoCompleted(this, new UpdateScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateScheduleInfoTZ", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateScheduleInfoTZ(
                    string aLicKey, 
                    string sMemberPhone, 
                    int iMemberID, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    string sCallingStatus, 
                    long iCurrScheduleID, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            object[] results = this.Invoke("UpdateScheduleInfoTZ", new object[] {
                        aLicKey,
                        sMemberPhone,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        sCallingStatus,
                        iCurrScheduleID,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateScheduleInfoTZAsync(
                    string aLicKey, 
                    string sMemberPhone, 
                    int iMemberID, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    string sCallingStatus, 
                    long iCurrScheduleID, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID) {
            this.UpdateScheduleInfoTZAsync(aLicKey, sMemberPhone, iMemberID, dSchedDate, tTime, sSiteID, iBcsTestCode, sCGSiteID, sCategory, sSubCategory, sCallingStatus, iCurrScheduleID, iContactTypeCode, sCallFreq, iMaxRecalls, iRecallsMade, iRefID, iWaitTime, dStopDate, bHasMsg, lMsgID, null);
        }
        
        /// <remarks/>
        public void UpdateScheduleInfoTZAsync(
                    string aLicKey, 
                    string sMemberPhone, 
                    int iMemberID, 
                    System.DateTime dSchedDate, 
                    int tTime, 
                    string sSiteID, 
                    int iBcsTestCode, 
                    string sCGSiteID, 
                    string sCategory, 
                    string sSubCategory, 
                    string sCallingStatus, 
                    long iCurrScheduleID, 
                    int iContactTypeCode, 
                    string sCallFreq, 
                    int iMaxRecalls, 
                    int iRecallsMade, 
                    int iRefID, 
                    int iWaitTime, 
                    System.DateTime dStopDate, 
                    bool bHasMsg, 
                    long lMsgID, 
                    object userState) {
            if ((this.UpdateScheduleInfoTZOperationCompleted == null)) {
                this.UpdateScheduleInfoTZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateScheduleInfoTZOperationCompleted);
            }
            this.InvokeAsync("UpdateScheduleInfoTZ", new object[] {
                        aLicKey,
                        sMemberPhone,
                        iMemberID,
                        dSchedDate,
                        tTime,
                        sSiteID,
                        iBcsTestCode,
                        sCGSiteID,
                        sCategory,
                        sSubCategory,
                        sCallingStatus,
                        iCurrScheduleID,
                        iContactTypeCode,
                        sCallFreq,
                        iMaxRecalls,
                        iRecallsMade,
                        iRefID,
                        iWaitTime,
                        dStopDate,
                        bHasMsg,
                        lMsgID}, this.UpdateScheduleInfoTZOperationCompleted, userState);
        }
        
        private void OnUpdateScheduleInfoTZOperationCompleted(object arg) {
            if ((this.UpdateScheduleInfoTZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateScheduleInfoTZCompleted(this, new UpdateScheduleInfoTZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DelGroupScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long DelGroupScheduleInfo(string aLicKey, string sAcctType, int iNetworkID) {
            object[] results = this.Invoke("DelGroupScheduleInfo", new object[] {
                        aLicKey,
                        sAcctType,
                        iNetworkID});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DelGroupScheduleInfoAsync(string aLicKey, string sAcctType, int iNetworkID) {
            this.DelGroupScheduleInfoAsync(aLicKey, sAcctType, iNetworkID, null);
        }
        
        /// <remarks/>
        public void DelGroupScheduleInfoAsync(string aLicKey, string sAcctType, int iNetworkID, object userState) {
            if ((this.DelGroupScheduleInfoOperationCompleted == null)) {
                this.DelGroupScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelGroupScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("DelGroupScheduleInfo", new object[] {
                        aLicKey,
                        sAcctType,
                        iNetworkID}, this.DelGroupScheduleInfoOperationCompleted, userState);
        }
        
        private void OnDelGroupScheduleInfoOperationCompleted(object arg) {
            if ((this.DelGroupScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelGroupScheduleInfoCompleted(this, new DelGroupScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DelScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DelScheduleInfo(string aLicKey, long iScheduleID) {
            object[] results = this.Invoke("DelScheduleInfo", new object[] {
                        aLicKey,
                        iScheduleID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DelScheduleInfoAsync(string aLicKey, long iScheduleID) {
            this.DelScheduleInfoAsync(aLicKey, iScheduleID, null);
        }
        
        /// <remarks/>
        public void DelScheduleInfoAsync(string aLicKey, long iScheduleID, object userState) {
            if ((this.DelScheduleInfoOperationCompleted == null)) {
                this.DelScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("DelScheduleInfo", new object[] {
                        aLicKey,
                        iScheduleID}, this.DelScheduleInfoOperationCompleted, userState);
        }
        
        private void OnDelScheduleInfoOperationCompleted(object arg) {
            if ((this.DelScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelScheduleInfoCompleted(this, new DelScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DelMemberScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DelMemberScheduleInfo(string aLicKey, string sMemberPhone) {
            object[] results = this.Invoke("DelMemberScheduleInfo", new object[] {
                        aLicKey,
                        sMemberPhone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DelMemberScheduleInfoAsync(string aLicKey, string sMemberPhone) {
            this.DelMemberScheduleInfoAsync(aLicKey, sMemberPhone, null);
        }
        
        /// <remarks/>
        public void DelMemberScheduleInfoAsync(string aLicKey, string sMemberPhone, object userState) {
            if ((this.DelMemberScheduleInfoOperationCompleted == null)) {
                this.DelMemberScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMemberScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("DelMemberScheduleInfo", new object[] {
                        aLicKey,
                        sMemberPhone}, this.DelMemberScheduleInfoOperationCompleted, userState);
        }
        
        private void OnDelMemberScheduleInfoOperationCompleted(object arg) {
            if ((this.DelMemberScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMemberScheduleInfoCompleted(this, new DelMemberScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/PurgeMemberByID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PurgeMemberByID(string aLicKey, int iAdminID, int iMemberID) {
            object[] results = this.Invoke("PurgeMemberByID", new object[] {
                        aLicKey,
                        iAdminID,
                        iMemberID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PurgeMemberByIDAsync(string aLicKey, int iAdminID, int iMemberID) {
            this.PurgeMemberByIDAsync(aLicKey, iAdminID, iMemberID, null);
        }
        
        /// <remarks/>
        public void PurgeMemberByIDAsync(string aLicKey, int iAdminID, int iMemberID, object userState) {
            if ((this.PurgeMemberByIDOperationCompleted == null)) {
                this.PurgeMemberByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurgeMemberByIDOperationCompleted);
            }
            this.InvokeAsync("PurgeMemberByID", new object[] {
                        aLicKey,
                        iAdminID,
                        iMemberID}, this.PurgeMemberByIDOperationCompleted, userState);
        }
        
        private void OnPurgeMemberByIDOperationCompleted(object arg) {
            if ((this.PurgeMemberByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurgeMemberByIDCompleted(this, new PurgeMemberByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/PurgeMemberByPhone", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PurgeMemberByPhone(string aLicKey, int iAdminID, string sPhone) {
            object[] results = this.Invoke("PurgeMemberByPhone", new object[] {
                        aLicKey,
                        iAdminID,
                        sPhone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PurgeMemberByPhoneAsync(string aLicKey, int iAdminID, string sPhone) {
            this.PurgeMemberByPhoneAsync(aLicKey, iAdminID, sPhone, null);
        }
        
        /// <remarks/>
        public void PurgeMemberByPhoneAsync(string aLicKey, int iAdminID, string sPhone, object userState) {
            if ((this.PurgeMemberByPhoneOperationCompleted == null)) {
                this.PurgeMemberByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurgeMemberByPhoneOperationCompleted);
            }
            this.InvokeAsync("PurgeMemberByPhone", new object[] {
                        aLicKey,
                        iAdminID,
                        sPhone}, this.PurgeMemberByPhoneOperationCompleted, userState);
        }
        
        private void OnPurgeMemberByPhoneOperationCompleted(object arg) {
            if ((this.PurgeMemberByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurgeMemberByPhoneCompleted(this, new PurgeMemberByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DelMemberLogonAll", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DelMemberLogonAll(string aLicKey, int iMemberID) {
            object[] results = this.Invoke("DelMemberLogonAll", new object[] {
                        aLicKey,
                        iMemberID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DelMemberLogonAllAsync(string aLicKey, int iMemberID) {
            this.DelMemberLogonAllAsync(aLicKey, iMemberID, null);
        }
        
        /// <remarks/>
        public void DelMemberLogonAllAsync(string aLicKey, int iMemberID, object userState) {
            if ((this.DelMemberLogonAllOperationCompleted == null)) {
                this.DelMemberLogonAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMemberLogonAllOperationCompleted);
            }
            this.InvokeAsync("DelMemberLogonAll", new object[] {
                        aLicKey,
                        iMemberID}, this.DelMemberLogonAllOperationCompleted, userState);
        }
        
        private void OnDelMemberLogonAllOperationCompleted(object arg) {
            if ((this.DelMemberLogonAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMemberLogonAllCompleted(this, new DelMemberLogonAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DelMemberLogon", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DelMemberLogon(string aLicKey, string PhoneNumber, string sUserID) {
            object[] results = this.Invoke("DelMemberLogon", new object[] {
                        aLicKey,
                        PhoneNumber,
                        sUserID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DelMemberLogonAsync(string aLicKey, string PhoneNumber, string sUserID) {
            this.DelMemberLogonAsync(aLicKey, PhoneNumber, sUserID, null);
        }
        
        /// <remarks/>
        public void DelMemberLogonAsync(string aLicKey, string PhoneNumber, string sUserID, object userState) {
            if ((this.DelMemberLogonOperationCompleted == null)) {
                this.DelMemberLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMemberLogonOperationCompleted);
            }
            this.InvokeAsync("DelMemberLogon", new object[] {
                        aLicKey,
                        PhoneNumber,
                        sUserID}, this.DelMemberLogonOperationCompleted, userState);
        }
        
        private void OnDelMemberLogonOperationCompleted(object arg) {
            if ((this.DelMemberLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMemberLogonCompleted(this, new DelMemberLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DelMessagesByAcctType", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DelMessagesByAcctType(string aLicKey, string sType) {
            object[] results = this.Invoke("DelMessagesByAcctType", new object[] {
                        aLicKey,
                        sType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DelMessagesByAcctTypeAsync(string aLicKey, string sType) {
            this.DelMessagesByAcctTypeAsync(aLicKey, sType, null);
        }
        
        /// <remarks/>
        public void DelMessagesByAcctTypeAsync(string aLicKey, string sType, object userState) {
            if ((this.DelMessagesByAcctTypeOperationCompleted == null)) {
                this.DelMessagesByAcctTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMessagesByAcctTypeOperationCompleted);
            }
            this.InvokeAsync("DelMessagesByAcctType", new object[] {
                        aLicKey,
                        sType}, this.DelMessagesByAcctTypeOperationCompleted, userState);
        }
        
        private void OnDelMessagesByAcctTypeOperationCompleted(object arg) {
            if ((this.DelMessagesByAcctTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMessagesByAcctTypeCompleted(this, new DelMessagesByAcctTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DelMessagesByID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DelMessagesByID(string aLicKey, long lMsgID) {
            object[] results = this.Invoke("DelMessagesByID", new object[] {
                        aLicKey,
                        lMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DelMessagesByIDAsync(string aLicKey, long lMsgID) {
            this.DelMessagesByIDAsync(aLicKey, lMsgID, null);
        }
        
        /// <remarks/>
        public void DelMessagesByIDAsync(string aLicKey, long lMsgID, object userState) {
            if ((this.DelMessagesByIDOperationCompleted == null)) {
                this.DelMessagesByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelMessagesByIDOperationCompleted);
            }
            this.InvokeAsync("DelMessagesByID", new object[] {
                        aLicKey,
                        lMsgID}, this.DelMessagesByIDOperationCompleted, userState);
        }
        
        private void OnDelMessagesByIDOperationCompleted(object arg) {
            if ((this.DelMessagesByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelMessagesByIDCompleted(this, new DelMessagesByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallerMemberID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCallerMemberID(string aLicKey, string sPhoneNumber) {
            object[] results = this.Invoke("GetCallerMemberID", new object[] {
                        aLicKey,
                        sPhoneNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallerMemberIDAsync(string aLicKey, string sPhoneNumber) {
            this.GetCallerMemberIDAsync(aLicKey, sPhoneNumber, null);
        }
        
        /// <remarks/>
        public void GetCallerMemberIDAsync(string aLicKey, string sPhoneNumber, object userState) {
            if ((this.GetCallerMemberIDOperationCompleted == null)) {
                this.GetCallerMemberIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallerMemberIDOperationCompleted);
            }
            this.InvokeAsync("GetCallerMemberID", new object[] {
                        aLicKey,
                        sPhoneNumber}, this.GetCallerMemberIDOperationCompleted, userState);
        }
        
        private void OnGetCallerMemberIDOperationCompleted(object arg) {
            if ((this.GetCallerMemberIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallerMemberIDCompleted(this, new GetCallerMemberIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/SendTestMsg", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendTestMsg(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr) {
            object[] results = this.Invoke("SendTestMsg", new object[] {
                        aLicKey,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTestMsgAsync(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr) {
            this.SendTestMsgAsync(aLicKey, sSmsAddress, sSubject, sMessage, sFromAddr, null);
        }
        
        /// <remarks/>
        public void SendTestMsgAsync(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr, object userState) {
            if ((this.SendTestMsgOperationCompleted == null)) {
                this.SendTestMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTestMsgOperationCompleted);
            }
            this.InvokeAsync("SendTestMsg", new object[] {
                        aLicKey,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr}, this.SendTestMsgOperationCompleted, userState);
        }
        
        private void OnSendTestMsgOperationCompleted(object arg) {
            if ((this.SendTestMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTestMsgCompleted(this, new SendTestMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/SendTestMsgInternational", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendTestMsgInternational(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr, Callers clsCaller) {
            object[] results = this.Invoke("SendTestMsgInternational", new object[] {
                        aLicKey,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr,
                        clsCaller});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTestMsgInternationalAsync(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr, Callers clsCaller) {
            this.SendTestMsgInternationalAsync(aLicKey, sSmsAddress, sSubject, sMessage, sFromAddr, clsCaller, null);
        }
        
        /// <remarks/>
        public void SendTestMsgInternationalAsync(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr, Callers clsCaller, object userState) {
            if ((this.SendTestMsgInternationalOperationCompleted == null)) {
                this.SendTestMsgInternationalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTestMsgInternationalOperationCompleted);
            }
            this.InvokeAsync("SendTestMsgInternational", new object[] {
                        aLicKey,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr,
                        clsCaller}, this.SendTestMsgInternationalOperationCompleted, userState);
        }
        
        private void OnSendTestMsgInternationalOperationCompleted(object arg) {
            if ((this.SendTestMsgInternationalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTestMsgInternationalCompleted(this, new SendTestMsgInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/SendTestMsgInternationalAttachments", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendTestMsgInternationalAttachments(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr, string sMsgPath, Callers clsCaller) {
            object[] results = this.Invoke("SendTestMsgInternationalAttachments", new object[] {
                        aLicKey,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr,
                        sMsgPath,
                        clsCaller});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTestMsgInternationalAttachmentsAsync(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr, string sMsgPath, Callers clsCaller) {
            this.SendTestMsgInternationalAttachmentsAsync(aLicKey, sSmsAddress, sSubject, sMessage, sFromAddr, sMsgPath, clsCaller, null);
        }
        
        /// <remarks/>
        public void SendTestMsgInternationalAttachmentsAsync(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr, string sMsgPath, Callers clsCaller, object userState) {
            if ((this.SendTestMsgInternationalAttachmentsOperationCompleted == null)) {
                this.SendTestMsgInternationalAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTestMsgInternationalAttachmentsOperationCompleted);
            }
            this.InvokeAsync("SendTestMsgInternationalAttachments", new object[] {
                        aLicKey,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr,
                        sMsgPath,
                        clsCaller}, this.SendTestMsgInternationalAttachmentsOperationCompleted, userState);
        }
        
        private void OnSendTestMsgInternationalAttachmentsOperationCompleted(object arg) {
            if ((this.SendTestMsgInternationalAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTestMsgInternationalAttachmentsCompleted(this, new SendTestMsgInternationalAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/SendTestMsgInternational2", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendTestMsgInternational2(string aLicKey, int iMember, string sSmsAddress, string sSubject, string sMessage, string sFromAddr) {
            object[] results = this.Invoke("SendTestMsgInternational2", new object[] {
                        aLicKey,
                        iMember,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTestMsgInternational2Async(string aLicKey, int iMember, string sSmsAddress, string sSubject, string sMessage, string sFromAddr) {
            this.SendTestMsgInternational2Async(aLicKey, iMember, sSmsAddress, sSubject, sMessage, sFromAddr, null);
        }
        
        /// <remarks/>
        public void SendTestMsgInternational2Async(string aLicKey, int iMember, string sSmsAddress, string sSubject, string sMessage, string sFromAddr, object userState) {
            if ((this.SendTestMsgInternational2OperationCompleted == null)) {
                this.SendTestMsgInternational2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTestMsgInternational2OperationCompleted);
            }
            this.InvokeAsync("SendTestMsgInternational2", new object[] {
                        aLicKey,
                        iMember,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr}, this.SendTestMsgInternational2OperationCompleted, userState);
        }
        
        private void OnSendTestMsgInternational2OperationCompleted(object arg) {
            if ((this.SendTestMsgInternational2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTestMsgInternational2Completed(this, new SendTestMsgInternational2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/NotifiyAllCareGivers", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifiyAllCareGivers(string aLicKey, int iBuddyMemberID, string sSubject, string sMessage, string sFromAddr) {
            object[] results = this.Invoke("NotifiyAllCareGivers", new object[] {
                        aLicKey,
                        iBuddyMemberID,
                        sSubject,
                        sMessage,
                        sFromAddr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifiyAllCareGiversAsync(string aLicKey, int iBuddyMemberID, string sSubject, string sMessage, string sFromAddr) {
            this.NotifiyAllCareGiversAsync(aLicKey, iBuddyMemberID, sSubject, sMessage, sFromAddr, null);
        }
        
        /// <remarks/>
        public void NotifiyAllCareGiversAsync(string aLicKey, int iBuddyMemberID, string sSubject, string sMessage, string sFromAddr, object userState) {
            if ((this.NotifiyAllCareGiversOperationCompleted == null)) {
                this.NotifiyAllCareGiversOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifiyAllCareGiversOperationCompleted);
            }
            this.InvokeAsync("NotifiyAllCareGivers", new object[] {
                        aLicKey,
                        iBuddyMemberID,
                        sSubject,
                        sMessage,
                        sFromAddr}, this.NotifiyAllCareGiversOperationCompleted, userState);
        }
        
        private void OnNotifiyAllCareGiversOperationCompleted(object arg) {
            if ((this.NotifiyAllCareGiversCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifiyAllCareGiversCompleted(this, new NotifiyAllCareGiversCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/NotifiyAllNetwork", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifiyAllNetwork(string aLicKey, int iNetRefID, string sSubject, string sMessage, string sFromAddr) {
            object[] results = this.Invoke("NotifiyAllNetwork", new object[] {
                        aLicKey,
                        iNetRefID,
                        sSubject,
                        sMessage,
                        sFromAddr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifiyAllNetworkAsync(string aLicKey, int iNetRefID, string sSubject, string sMessage, string sFromAddr) {
            this.NotifiyAllNetworkAsync(aLicKey, iNetRefID, sSubject, sMessage, sFromAddr, null);
        }
        
        /// <remarks/>
        public void NotifiyAllNetworkAsync(string aLicKey, int iNetRefID, string sSubject, string sMessage, string sFromAddr, object userState) {
            if ((this.NotifiyAllNetworkOperationCompleted == null)) {
                this.NotifiyAllNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifiyAllNetworkOperationCompleted);
            }
            this.InvokeAsync("NotifiyAllNetwork", new object[] {
                        aLicKey,
                        iNetRefID,
                        sSubject,
                        sMessage,
                        sFromAddr}, this.NotifiyAllNetworkOperationCompleted, userState);
        }
        
        private void OnNotifiyAllNetworkOperationCompleted(object arg) {
            if ((this.NotifiyAllNetworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifiyAllNetworkCompleted(this, new NotifiyAllNetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/NotifiyAllSponsorships", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifiyAllSponsorships(string aLicKey, int iSponsorID, string sSubject, string sMessage, string sFromAddr) {
            object[] results = this.Invoke("NotifiyAllSponsorships", new object[] {
                        aLicKey,
                        iSponsorID,
                        sSubject,
                        sMessage,
                        sFromAddr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifiyAllSponsorshipsAsync(string aLicKey, int iSponsorID, string sSubject, string sMessage, string sFromAddr) {
            this.NotifiyAllSponsorshipsAsync(aLicKey, iSponsorID, sSubject, sMessage, sFromAddr, null);
        }
        
        /// <remarks/>
        public void NotifiyAllSponsorshipsAsync(string aLicKey, int iSponsorID, string sSubject, string sMessage, string sFromAddr, object userState) {
            if ((this.NotifiyAllSponsorshipsOperationCompleted == null)) {
                this.NotifiyAllSponsorshipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifiyAllSponsorshipsOperationCompleted);
            }
            this.InvokeAsync("NotifiyAllSponsorships", new object[] {
                        aLicKey,
                        iSponsorID,
                        sSubject,
                        sMessage,
                        sFromAddr}, this.NotifiyAllSponsorshipsOperationCompleted, userState);
        }
        
        private void OnNotifiyAllSponsorshipsOperationCompleted(object arg) {
            if ((this.NotifiyAllSponsorshipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifiyAllSponsorshipsCompleted(this, new NotifiyAllSponsorshipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/SendNotificationMsg", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendNotificationMsg(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr) {
            object[] results = this.Invoke("SendNotificationMsg", new object[] {
                        aLicKey,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendNotificationMsgAsync(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr) {
            this.SendNotificationMsgAsync(aLicKey, sSmsAddress, sSubject, sMessage, sFromAddr, null);
        }
        
        /// <remarks/>
        public void SendNotificationMsgAsync(string aLicKey, string sSmsAddress, string sSubject, string sMessage, string sFromAddr, object userState) {
            if ((this.SendNotificationMsgOperationCompleted == null)) {
                this.SendNotificationMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNotificationMsgOperationCompleted);
            }
            this.InvokeAsync("SendNotificationMsg", new object[] {
                        aLicKey,
                        sSmsAddress,
                        sSubject,
                        sMessage,
                        sFromAddr}, this.SendNotificationMsgOperationCompleted, userState);
        }
        
        private void OnSendNotificationMsgOperationCompleted(object arg) {
            if ((this.SendNotificationMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNotificationMsgCompleted(this, new SendNotificationMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/SendAllCGMsg", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendAllCGMsg(string aLicKey, int iBuddyID, long lMessageID, string sMessage, string sFromAddr) {
            object[] results = this.Invoke("SendAllCGMsg", new object[] {
                        aLicKey,
                        iBuddyID,
                        lMessageID,
                        sMessage,
                        sFromAddr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendAllCGMsgAsync(string aLicKey, int iBuddyID, long lMessageID, string sMessage, string sFromAddr) {
            this.SendAllCGMsgAsync(aLicKey, iBuddyID, lMessageID, sMessage, sFromAddr, null);
        }
        
        /// <remarks/>
        public void SendAllCGMsgAsync(string aLicKey, int iBuddyID, long lMessageID, string sMessage, string sFromAddr, object userState) {
            if ((this.SendAllCGMsgOperationCompleted == null)) {
                this.SendAllCGMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAllCGMsgOperationCompleted);
            }
            this.InvokeAsync("SendAllCGMsg", new object[] {
                        aLicKey,
                        iBuddyID,
                        lMessageID,
                        sMessage,
                        sFromAddr}, this.SendAllCGMsgOperationCompleted, userState);
        }
        
        private void OnSendAllCGMsgOperationCompleted(object arg) {
            if ((this.SendAllCGMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAllCGMsgCompleted(this, new SendAllCGMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/ContactNextBackup", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ContactNextBackup(string aLicKey, CallInfo clsCGInfo) {
            object[] results = this.Invoke("ContactNextBackup", new object[] {
                        aLicKey,
                        clsCGInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ContactNextBackupAsync(string aLicKey, CallInfo clsCGInfo) {
            this.ContactNextBackupAsync(aLicKey, clsCGInfo, null);
        }
        
        /// <remarks/>
        public void ContactNextBackupAsync(string aLicKey, CallInfo clsCGInfo, object userState) {
            if ((this.ContactNextBackupOperationCompleted == null)) {
                this.ContactNextBackupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactNextBackupOperationCompleted);
            }
            this.InvokeAsync("ContactNextBackup", new object[] {
                        aLicKey,
                        clsCGInfo}, this.ContactNextBackupOperationCompleted, userState);
        }
        
        private void OnContactNextBackupOperationCompleted(object arg) {
            if ((this.ContactNextBackupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactNextBackupCompleted(this, new ContactNextBackupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/BroadcastAlert", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BroadcastAlert(string aLicKey, string sMemberPhone, string sSubject, string sMessage, string sFromAddr) {
            object[] results = this.Invoke("BroadcastAlert", new object[] {
                        aLicKey,
                        sMemberPhone,
                        sSubject,
                        sMessage,
                        sFromAddr});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BroadcastAlertAsync(string aLicKey, string sMemberPhone, string sSubject, string sMessage, string sFromAddr) {
            this.BroadcastAlertAsync(aLicKey, sMemberPhone, sSubject, sMessage, sFromAddr, null);
        }
        
        /// <remarks/>
        public void BroadcastAlertAsync(string aLicKey, string sMemberPhone, string sSubject, string sMessage, string sFromAddr, object userState) {
            if ((this.BroadcastAlertOperationCompleted == null)) {
                this.BroadcastAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBroadcastAlertOperationCompleted);
            }
            this.InvokeAsync("BroadcastAlert", new object[] {
                        aLicKey,
                        sMemberPhone,
                        sSubject,
                        sMessage,
                        sFromAddr}, this.BroadcastAlertOperationCompleted, userState);
        }
        
        private void OnBroadcastAlertOperationCompleted(object arg) {
            if ((this.BroadcastAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BroadcastAlertCompleted(this, new BroadcastAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/BroadcastWAP", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BroadcastWAP(string aLicKey, string sMemberPhone, string sSubject, string sMessage, string sFromAddr) {
            object[] results = this.Invoke("BroadcastWAP", new object[] {
                        aLicKey,
                        sMemberPhone,
                        sSubject,
                        sMessage,
                        sFromAddr});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BroadcastWAPAsync(string aLicKey, string sMemberPhone, string sSubject, string sMessage, string sFromAddr) {
            this.BroadcastWAPAsync(aLicKey, sMemberPhone, sSubject, sMessage, sFromAddr, null);
        }
        
        /// <remarks/>
        public void BroadcastWAPAsync(string aLicKey, string sMemberPhone, string sSubject, string sMessage, string sFromAddr, object userState) {
            if ((this.BroadcastWAPOperationCompleted == null)) {
                this.BroadcastWAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBroadcastWAPOperationCompleted);
            }
            this.InvokeAsync("BroadcastWAP", new object[] {
                        aLicKey,
                        sMemberPhone,
                        sSubject,
                        sMessage,
                        sFromAddr}, this.BroadcastWAPOperationCompleted, userState);
        }
        
        private void OnBroadcastWAPOperationCompleted(object arg) {
            if ((this.BroadcastWAPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BroadcastWAPCompleted(this, new BroadcastWAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/LookupSMSAddress", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers LookupSMSAddress(string aLicKey, Callers BCNCaller) {
            object[] results = this.Invoke("LookupSMSAddress", new object[] {
                        aLicKey,
                        BCNCaller});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void LookupSMSAddressAsync(string aLicKey, Callers BCNCaller) {
            this.LookupSMSAddressAsync(aLicKey, BCNCaller, null);
        }
        
        /// <remarks/>
        public void LookupSMSAddressAsync(string aLicKey, Callers BCNCaller, object userState) {
            if ((this.LookupSMSAddressOperationCompleted == null)) {
                this.LookupSMSAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLookupSMSAddressOperationCompleted);
            }
            this.InvokeAsync("LookupSMSAddress", new object[] {
                        aLicKey,
                        BCNCaller}, this.LookupSMSAddressOperationCompleted, userState);
        }
        
        private void OnLookupSMSAddressOperationCompleted(object arg) {
            if ((this.LookupSMSAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LookupSMSAddressCompleted(this, new LookupSMSAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddVoiceSubscriberInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers AddVoiceSubscriberInfo(string aLicKey, Callers BCNCaller, bool CreateLogin, bool NotifyMember) {
            object[] results = this.Invoke("AddVoiceSubscriberInfo", new object[] {
                        aLicKey,
                        BCNCaller,
                        CreateLogin,
                        NotifyMember});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void AddVoiceSubscriberInfoAsync(string aLicKey, Callers BCNCaller, bool CreateLogin, bool NotifyMember) {
            this.AddVoiceSubscriberInfoAsync(aLicKey, BCNCaller, CreateLogin, NotifyMember, null);
        }
        
        /// <remarks/>
        public void AddVoiceSubscriberInfoAsync(string aLicKey, Callers BCNCaller, bool CreateLogin, bool NotifyMember, object userState) {
            if ((this.AddVoiceSubscriberInfoOperationCompleted == null)) {
                this.AddVoiceSubscriberInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVoiceSubscriberInfoOperationCompleted);
            }
            this.InvokeAsync("AddVoiceSubscriberInfo", new object[] {
                        aLicKey,
                        BCNCaller,
                        CreateLogin,
                        NotifyMember}, this.AddVoiceSubscriberInfoOperationCompleted, userState);
        }
        
        private void OnAddVoiceSubscriberInfoOperationCompleted(object arg) {
            if ((this.AddVoiceSubscriberInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVoiceSubscriberInfoCompleted(this, new AddVoiceSubscriberInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddWebBuddyCallSchedule", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers AddWebBuddyCallSchedule(string aLicKey, Callers BCNCaller, bool NotifyMember, System.DateTime tTime, int iBcsTestCode, int iContactTypeCode, string sCallFreq) {
            object[] results = this.Invoke("AddWebBuddyCallSchedule", new object[] {
                        aLicKey,
                        BCNCaller,
                        NotifyMember,
                        tTime,
                        iBcsTestCode,
                        iContactTypeCode,
                        sCallFreq});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void AddWebBuddyCallScheduleAsync(string aLicKey, Callers BCNCaller, bool NotifyMember, System.DateTime tTime, int iBcsTestCode, int iContactTypeCode, string sCallFreq) {
            this.AddWebBuddyCallScheduleAsync(aLicKey, BCNCaller, NotifyMember, tTime, iBcsTestCode, iContactTypeCode, sCallFreq, null);
        }
        
        /// <remarks/>
        public void AddWebBuddyCallScheduleAsync(string aLicKey, Callers BCNCaller, bool NotifyMember, System.DateTime tTime, int iBcsTestCode, int iContactTypeCode, string sCallFreq, object userState) {
            if ((this.AddWebBuddyCallScheduleOperationCompleted == null)) {
                this.AddWebBuddyCallScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWebBuddyCallScheduleOperationCompleted);
            }
            this.InvokeAsync("AddWebBuddyCallSchedule", new object[] {
                        aLicKey,
                        BCNCaller,
                        NotifyMember,
                        tTime,
                        iBcsTestCode,
                        iContactTypeCode,
                        sCallFreq}, this.AddWebBuddyCallScheduleOperationCompleted, userState);
        }
        
        private void OnAddWebBuddyCallScheduleOperationCompleted(object arg) {
            if ((this.AddWebBuddyCallScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWebBuddyCallScheduleCompleted(this, new AddWebBuddyCallScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddWebBuddySubscriberInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers AddWebBuddySubscriberInfo(string aLicKey, Callers BCNCaller, bool NotifyMember) {
            object[] results = this.Invoke("AddWebBuddySubscriberInfo", new object[] {
                        aLicKey,
                        BCNCaller,
                        NotifyMember});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void AddWebBuddySubscriberInfoAsync(string aLicKey, Callers BCNCaller, bool NotifyMember) {
            this.AddWebBuddySubscriberInfoAsync(aLicKey, BCNCaller, NotifyMember, null);
        }
        
        /// <remarks/>
        public void AddWebBuddySubscriberInfoAsync(string aLicKey, Callers BCNCaller, bool NotifyMember, object userState) {
            if ((this.AddWebBuddySubscriberInfoOperationCompleted == null)) {
                this.AddWebBuddySubscriberInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWebBuddySubscriberInfoOperationCompleted);
            }
            this.InvokeAsync("AddWebBuddySubscriberInfo", new object[] {
                        aLicKey,
                        BCNCaller,
                        NotifyMember}, this.AddWebBuddySubscriberInfoOperationCompleted, userState);
        }
        
        private void OnAddWebBuddySubscriberInfoOperationCompleted(object arg) {
            if ((this.AddWebBuddySubscriberInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWebBuddySubscriberInfoCompleted(this, new AddWebBuddySubscriberInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddWebSubscriberInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers AddWebSubscriberInfo(string aLicKey, Callers BCNCaller, bool NotifyMember) {
            object[] results = this.Invoke("AddWebSubscriberInfo", new object[] {
                        aLicKey,
                        BCNCaller,
                        NotifyMember});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void AddWebSubscriberInfoAsync(string aLicKey, Callers BCNCaller, bool NotifyMember) {
            this.AddWebSubscriberInfoAsync(aLicKey, BCNCaller, NotifyMember, null);
        }
        
        /// <remarks/>
        public void AddWebSubscriberInfoAsync(string aLicKey, Callers BCNCaller, bool NotifyMember, object userState) {
            if ((this.AddWebSubscriberInfoOperationCompleted == null)) {
                this.AddWebSubscriberInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWebSubscriberInfoOperationCompleted);
            }
            this.InvokeAsync("AddWebSubscriberInfo", new object[] {
                        aLicKey,
                        BCNCaller,
                        NotifyMember}, this.AddWebSubscriberInfoOperationCompleted, userState);
        }
        
        private void OnAddWebSubscriberInfoOperationCompleted(object arg) {
            if ((this.AddWebSubscriberInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWebSubscriberInfoCompleted(this, new AddWebSubscriberInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetInfoFromScheduleXML", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetInfoFromScheduleXML(string aLicKey, long iScheduleID, string sPrompt, string sDest) {
            object[] results = this.Invoke("GetInfoFromScheduleXML", new object[] {
                        aLicKey,
                        iScheduleID,
                        sPrompt,
                        sDest});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoFromScheduleXMLAsync(string aLicKey, long iScheduleID, string sPrompt, string sDest) {
            this.GetInfoFromScheduleXMLAsync(aLicKey, iScheduleID, sPrompt, sDest, null);
        }
        
        /// <remarks/>
        public void GetInfoFromScheduleXMLAsync(string aLicKey, long iScheduleID, string sPrompt, string sDest, object userState) {
            if ((this.GetInfoFromScheduleXMLOperationCompleted == null)) {
                this.GetInfoFromScheduleXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoFromScheduleXMLOperationCompleted);
            }
            this.InvokeAsync("GetInfoFromScheduleXML", new object[] {
                        aLicKey,
                        iScheduleID,
                        sPrompt,
                        sDest}, this.GetInfoFromScheduleXMLOperationCompleted, userState);
        }
        
        private void OnGetInfoFromScheduleXMLOperationCompleted(object arg) {
            if ((this.GetInfoFromScheduleXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoFromScheduleXMLCompleted(this, new GetInfoFromScheduleXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetInfoFromSchedule", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallInfo GetInfoFromSchedule(string aLicKey, long iScheduleID) {
            object[] results = this.Invoke("GetInfoFromSchedule", new object[] {
                        aLicKey,
                        iScheduleID});
            return ((CallInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoFromScheduleAsync(string aLicKey, long iScheduleID) {
            this.GetInfoFromScheduleAsync(aLicKey, iScheduleID, null);
        }
        
        /// <remarks/>
        public void GetInfoFromScheduleAsync(string aLicKey, long iScheduleID, object userState) {
            if ((this.GetInfoFromScheduleOperationCompleted == null)) {
                this.GetInfoFromScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoFromScheduleOperationCompleted);
            }
            this.InvokeAsync("GetInfoFromSchedule", new object[] {
                        aLicKey,
                        iScheduleID}, this.GetInfoFromScheduleOperationCompleted, userState);
        }
        
        private void OnGetInfoFromScheduleOperationCompleted(object arg) {
            if ((this.GetInfoFromScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoFromScheduleCompleted(this, new GetInfoFromScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/ResetPIN", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ResetPIN(string aLicKey, string sPin, bool bPinRequired, int iMember) {
            object[] results = this.Invoke("ResetPIN", new object[] {
                        aLicKey,
                        sPin,
                        bPinRequired,
                        iMember});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPINAsync(string aLicKey, string sPin, bool bPinRequired, int iMember) {
            this.ResetPINAsync(aLicKey, sPin, bPinRequired, iMember, null);
        }
        
        /// <remarks/>
        public void ResetPINAsync(string aLicKey, string sPin, bool bPinRequired, int iMember, object userState) {
            if ((this.ResetPINOperationCompleted == null)) {
                this.ResetPINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPINOperationCompleted);
            }
            this.InvokeAsync("ResetPIN", new object[] {
                        aLicKey,
                        sPin,
                        bPinRequired,
                        iMember}, this.ResetPINOperationCompleted, userState);
        }
        
        private void OnResetPINOperationCompleted(object arg) {
            if ((this.ResetPINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPINCompleted(this, new ResetPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/SendEASAlerts", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendEASAlerts(string aLicKey, long BcnNetwork, string BcnSite, string CGSite) {
            object[] results = this.Invoke("SendEASAlerts", new object[] {
                        aLicKey,
                        BcnNetwork,
                        BcnSite,
                        CGSite});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendEASAlertsAsync(string aLicKey, long BcnNetwork, string BcnSite, string CGSite) {
            this.SendEASAlertsAsync(aLicKey, BcnNetwork, BcnSite, CGSite, null);
        }
        
        /// <remarks/>
        public void SendEASAlertsAsync(string aLicKey, long BcnNetwork, string BcnSite, string CGSite, object userState) {
            if ((this.SendEASAlertsOperationCompleted == null)) {
                this.SendEASAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEASAlertsOperationCompleted);
            }
            this.InvokeAsync("SendEASAlerts", new object[] {
                        aLicKey,
                        BcnNetwork,
                        BcnSite,
                        CGSite}, this.SendEASAlertsOperationCompleted, userState);
        }
        
        private void OnSendEASAlertsOperationCompleted(object arg) {
            if ((this.SendEASAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEASAlertsCompleted(this, new SendEASAlertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddWEPScheduleAlert", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddWEPScheduleAlert(string aLicKey, int BuddyID, long EasMsgID, string BcnSite, string CGSite) {
            object[] results = this.Invoke("AddWEPScheduleAlert", new object[] {
                        aLicKey,
                        BuddyID,
                        EasMsgID,
                        BcnSite,
                        CGSite});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddWEPScheduleAlertAsync(string aLicKey, int BuddyID, long EasMsgID, string BcnSite, string CGSite) {
            this.AddWEPScheduleAlertAsync(aLicKey, BuddyID, EasMsgID, BcnSite, CGSite, null);
        }
        
        /// <remarks/>
        public void AddWEPScheduleAlertAsync(string aLicKey, int BuddyID, long EasMsgID, string BcnSite, string CGSite, object userState) {
            if ((this.AddWEPScheduleAlertOperationCompleted == null)) {
                this.AddWEPScheduleAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWEPScheduleAlertOperationCompleted);
            }
            this.InvokeAsync("AddWEPScheduleAlert", new object[] {
                        aLicKey,
                        BuddyID,
                        EasMsgID,
                        BcnSite,
                        CGSite}, this.AddWEPScheduleAlertOperationCompleted, userState);
        }
        
        private void OnAddWEPScheduleAlertOperationCompleted(object arg) {
            if ((this.AddWEPScheduleAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWEPScheduleAlertCompleted(this, new AddWEPScheduleAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddWEPMembership", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddWEPMembership(string aLicKey, Callers WepInfo, bool NotifyMember) {
            object[] results = this.Invoke("AddWEPMembership", new object[] {
                        aLicKey,
                        WepInfo,
                        NotifyMember});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddWEPMembershipAsync(string aLicKey, Callers WepInfo, bool NotifyMember) {
            this.AddWEPMembershipAsync(aLicKey, WepInfo, NotifyMember, null);
        }
        
        /// <remarks/>
        public void AddWEPMembershipAsync(string aLicKey, Callers WepInfo, bool NotifyMember, object userState) {
            if ((this.AddWEPMembershipOperationCompleted == null)) {
                this.AddWEPMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWEPMembershipOperationCompleted);
            }
            this.InvokeAsync("AddWEPMembership", new object[] {
                        aLicKey,
                        WepInfo,
                        NotifyMember}, this.AddWEPMembershipOperationCompleted, userState);
        }
        
        private void OnAddWEPMembershipOperationCompleted(object arg) {
            if ((this.AddWEPMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWEPMembershipCompleted(this, new AddWEPMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddWEPMemberships", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddWEPMemberships(string aLicKey, int Member, System.DateTime StartDate, System.DateTime StopDate, bool IsActive, string Zipcode, string Fipscode, bool NotifyMember) {
            object[] results = this.Invoke("AddWEPMemberships", new object[] {
                        aLicKey,
                        Member,
                        StartDate,
                        StopDate,
                        IsActive,
                        Zipcode,
                        Fipscode,
                        NotifyMember});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddWEPMembershipsAsync(string aLicKey, int Member, System.DateTime StartDate, System.DateTime StopDate, bool IsActive, string Zipcode, string Fipscode, bool NotifyMember) {
            this.AddWEPMembershipsAsync(aLicKey, Member, StartDate, StopDate, IsActive, Zipcode, Fipscode, NotifyMember, null);
        }
        
        /// <remarks/>
        public void AddWEPMembershipsAsync(string aLicKey, int Member, System.DateTime StartDate, System.DateTime StopDate, bool IsActive, string Zipcode, string Fipscode, bool NotifyMember, object userState) {
            if ((this.AddWEPMembershipsOperationCompleted == null)) {
                this.AddWEPMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWEPMembershipsOperationCompleted);
            }
            this.InvokeAsync("AddWEPMemberships", new object[] {
                        aLicKey,
                        Member,
                        StartDate,
                        StopDate,
                        IsActive,
                        Zipcode,
                        Fipscode,
                        NotifyMember}, this.AddWEPMembershipsOperationCompleted, userState);
        }
        
        private void OnAddWEPMembershipsOperationCompleted(object arg) {
            if ((this.AddWEPMembershipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWEPMembershipsCompleted(this, new AddWEPMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateWEPMemberships", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWEPMemberships(string aLicKey, int Member, System.DateTime StartDate, System.DateTime StopDate, bool IsActive, string Zipcode, string Fipscode, long WepId, bool NotifyMember) {
            object[] results = this.Invoke("UpdateWEPMemberships", new object[] {
                        aLicKey,
                        Member,
                        StartDate,
                        StopDate,
                        IsActive,
                        Zipcode,
                        Fipscode,
                        WepId,
                        NotifyMember});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWEPMembershipsAsync(string aLicKey, int Member, System.DateTime StartDate, System.DateTime StopDate, bool IsActive, string Zipcode, string Fipscode, long WepId, bool NotifyMember) {
            this.UpdateWEPMembershipsAsync(aLicKey, Member, StartDate, StopDate, IsActive, Zipcode, Fipscode, WepId, NotifyMember, null);
        }
        
        /// <remarks/>
        public void UpdateWEPMembershipsAsync(string aLicKey, int Member, System.DateTime StartDate, System.DateTime StopDate, bool IsActive, string Zipcode, string Fipscode, long WepId, bool NotifyMember, object userState) {
            if ((this.UpdateWEPMembershipsOperationCompleted == null)) {
                this.UpdateWEPMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWEPMembershipsOperationCompleted);
            }
            this.InvokeAsync("UpdateWEPMemberships", new object[] {
                        aLicKey,
                        Member,
                        StartDate,
                        StopDate,
                        IsActive,
                        Zipcode,
                        Fipscode,
                        WepId,
                        NotifyMember}, this.UpdateWEPMembershipsOperationCompleted, userState);
        }
        
        private void OnUpdateWEPMembershipsOperationCompleted(object arg) {
            if ((this.UpdateWEPMembershipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWEPMembershipsCompleted(this, new UpdateWEPMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateWEPMembership", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWEPMembership(string aLicKey, Callers WepInfo, long WepId, bool NotifyMember) {
            object[] results = this.Invoke("UpdateWEPMembership", new object[] {
                        aLicKey,
                        WepInfo,
                        WepId,
                        NotifyMember});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWEPMembershipAsync(string aLicKey, Callers WepInfo, long WepId, bool NotifyMember) {
            this.UpdateWEPMembershipAsync(aLicKey, WepInfo, WepId, NotifyMember, null);
        }
        
        /// <remarks/>
        public void UpdateWEPMembershipAsync(string aLicKey, Callers WepInfo, long WepId, bool NotifyMember, object userState) {
            if ((this.UpdateWEPMembershipOperationCompleted == null)) {
                this.UpdateWEPMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWEPMembershipOperationCompleted);
            }
            this.InvokeAsync("UpdateWEPMembership", new object[] {
                        aLicKey,
                        WepInfo,
                        WepId,
                        NotifyMember}, this.UpdateWEPMembershipOperationCompleted, userState);
        }
        
        private void OnUpdateWEPMembershipOperationCompleted(object arg) {
            if ((this.UpdateWEPMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWEPMembershipCompleted(this, new UpdateWEPMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetWEPMembers", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWEPMembers(string aLicKey, int iNetworkRefID) {
            object[] results = this.Invoke("GetWEPMembers", new object[] {
                        aLicKey,
                        iNetworkRefID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWEPMembersAsync(string aLicKey, int iNetworkRefID) {
            this.GetWEPMembersAsync(aLicKey, iNetworkRefID, null);
        }
        
        /// <remarks/>
        public void GetWEPMembersAsync(string aLicKey, int iNetworkRefID, object userState) {
            if ((this.GetWEPMembersOperationCompleted == null)) {
                this.GetWEPMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWEPMembersOperationCompleted);
            }
            this.InvokeAsync("GetWEPMembers", new object[] {
                        aLicKey,
                        iNetworkRefID}, this.GetWEPMembersOperationCompleted, userState);
        }
        
        private void OnGetWEPMembersOperationCompleted(object arg) {
            if ((this.GetWEPMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWEPMembersCompleted(this, new GetWEPMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetWEPMembersSchedule", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWEPMembersSchedule(string aLicKey, int BuddyID) {
            object[] results = this.Invoke("GetWEPMembersSchedule", new object[] {
                        aLicKey,
                        BuddyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWEPMembersScheduleAsync(string aLicKey, int BuddyID) {
            this.GetWEPMembersScheduleAsync(aLicKey, BuddyID, null);
        }
        
        /// <remarks/>
        public void GetWEPMembersScheduleAsync(string aLicKey, int BuddyID, object userState) {
            if ((this.GetWEPMembersScheduleOperationCompleted == null)) {
                this.GetWEPMembersScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWEPMembersScheduleOperationCompleted);
            }
            this.InvokeAsync("GetWEPMembersSchedule", new object[] {
                        aLicKey,
                        BuddyID}, this.GetWEPMembersScheduleOperationCompleted, userState);
        }
        
        private void OnGetWEPMembersScheduleOperationCompleted(object arg) {
            if ((this.GetWEPMembersScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWEPMembersScheduleCompleted(this, new GetWEPMembersScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DeleteWEPMembership", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteWEPMembership(string aLicKey, long WepID) {
            object[] results = this.Invoke("DeleteWEPMembership", new object[] {
                        aLicKey,
                        WepID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWEPMembershipAsync(string aLicKey, long WepID) {
            this.DeleteWEPMembershipAsync(aLicKey, WepID, null);
        }
        
        /// <remarks/>
        public void DeleteWEPMembershipAsync(string aLicKey, long WepID, object userState) {
            if ((this.DeleteWEPMembershipOperationCompleted == null)) {
                this.DeleteWEPMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWEPMembershipOperationCompleted);
            }
            this.InvokeAsync("DeleteWEPMembership", new object[] {
                        aLicKey,
                        WepID}, this.DeleteWEPMembershipOperationCompleted, userState);
        }
        
        private void OnDeleteWEPMembershipOperationCompleted(object arg) {
            if ((this.DeleteWEPMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWEPMembershipCompleted(this, new DeleteWEPMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/BuildPrompt", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BuildPrompt(string aLicKey, string sGoodMsg, string sGoodDest, string sBadMsg, string sBadDest) {
            object[] results = this.Invoke("BuildPrompt", new object[] {
                        aLicKey,
                        sGoodMsg,
                        sGoodDest,
                        sBadMsg,
                        sBadDest});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BuildPromptAsync(string aLicKey, string sGoodMsg, string sGoodDest, string sBadMsg, string sBadDest) {
            this.BuildPromptAsync(aLicKey, sGoodMsg, sGoodDest, sBadMsg, sBadDest, null);
        }
        
        /// <remarks/>
        public void BuildPromptAsync(string aLicKey, string sGoodMsg, string sGoodDest, string sBadMsg, string sBadDest, object userState) {
            if ((this.BuildPromptOperationCompleted == null)) {
                this.BuildPromptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildPromptOperationCompleted);
            }
            this.InvokeAsync("BuildPrompt", new object[] {
                        aLicKey,
                        sGoodMsg,
                        sGoodDest,
                        sBadMsg,
                        sBadDest}, this.BuildPromptOperationCompleted, userState);
        }
        
        private void OnBuildPromptOperationCompleted(object arg) {
            if ((this.BuildPromptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildPromptCompleted(this, new BuildPromptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/BuildErrorPrompt", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BuildErrorPrompt(string aLicKey, string sMsg, string sDest) {
            object[] results = this.Invoke("BuildErrorPrompt", new object[] {
                        aLicKey,
                        sMsg,
                        sDest});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BuildErrorPromptAsync(string aLicKey, string sMsg, string sDest) {
            this.BuildErrorPromptAsync(aLicKey, sMsg, sDest, null);
        }
        
        /// <remarks/>
        public void BuildErrorPromptAsync(string aLicKey, string sMsg, string sDest, object userState) {
            if ((this.BuildErrorPromptOperationCompleted == null)) {
                this.BuildErrorPromptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildErrorPromptOperationCompleted);
            }
            this.InvokeAsync("BuildErrorPrompt", new object[] {
                        aLicKey,
                        sMsg,
                        sDest}, this.BuildErrorPromptOperationCompleted, userState);
        }
        
        private void OnBuildErrorPromptOperationCompleted(object arg) {
            if ((this.BuildErrorPromptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildErrorPromptCompleted(this, new BuildErrorPromptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/ConvertGMTToCurrentDate", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime ConvertGMTToCurrentDate(string aLicKey, int iCallTime) {
            object[] results = this.Invoke("ConvertGMTToCurrentDate", new object[] {
                        aLicKey,
                        iCallTime});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertGMTToCurrentDateAsync(string aLicKey, int iCallTime) {
            this.ConvertGMTToCurrentDateAsync(aLicKey, iCallTime, null);
        }
        
        /// <remarks/>
        public void ConvertGMTToCurrentDateAsync(string aLicKey, int iCallTime, object userState) {
            if ((this.ConvertGMTToCurrentDateOperationCompleted == null)) {
                this.ConvertGMTToCurrentDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertGMTToCurrentDateOperationCompleted);
            }
            this.InvokeAsync("ConvertGMTToCurrentDate", new object[] {
                        aLicKey,
                        iCallTime}, this.ConvertGMTToCurrentDateOperationCompleted, userState);
        }
        
        private void OnConvertGMTToCurrentDateOperationCompleted(object arg) {
            if ((this.ConvertGMTToCurrentDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertGMTToCurrentDateCompleted(this, new ConvertGMTToCurrentDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/ConvertFromGMTDateTime", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime ConvertFromGMTDateTime(string aLicKey, System.DateTime iGMTDateTime) {
            object[] results = this.Invoke("ConvertFromGMTDateTime", new object[] {
                        aLicKey,
                        iGMTDateTime});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertFromGMTDateTimeAsync(string aLicKey, System.DateTime iGMTDateTime) {
            this.ConvertFromGMTDateTimeAsync(aLicKey, iGMTDateTime, null);
        }
        
        /// <remarks/>
        public void ConvertFromGMTDateTimeAsync(string aLicKey, System.DateTime iGMTDateTime, object userState) {
            if ((this.ConvertFromGMTDateTimeOperationCompleted == null)) {
                this.ConvertFromGMTDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertFromGMTDateTimeOperationCompleted);
            }
            this.InvokeAsync("ConvertFromGMTDateTime", new object[] {
                        aLicKey,
                        iGMTDateTime}, this.ConvertFromGMTDateTimeOperationCompleted, userState);
        }
        
        private void OnConvertFromGMTDateTimeOperationCompleted(object arg) {
            if ((this.ConvertFromGMTDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertFromGMTDateTimeCompleted(this, new ConvertFromGMTDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/CalcGMTMinTime", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CalcGMTMinTime(string aLicKey, System.DateTime dtSchedTime) {
            object[] results = this.Invoke("CalcGMTMinTime", new object[] {
                        aLicKey,
                        dtSchedTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CalcGMTMinTimeAsync(string aLicKey, System.DateTime dtSchedTime) {
            this.CalcGMTMinTimeAsync(aLicKey, dtSchedTime, null);
        }
        
        /// <remarks/>
        public void CalcGMTMinTimeAsync(string aLicKey, System.DateTime dtSchedTime, object userState) {
            if ((this.CalcGMTMinTimeOperationCompleted == null)) {
                this.CalcGMTMinTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcGMTMinTimeOperationCompleted);
            }
            this.InvokeAsync("CalcGMTMinTime", new object[] {
                        aLicKey,
                        dtSchedTime}, this.CalcGMTMinTimeOperationCompleted, userState);
        }
        
        private void OnCalcGMTMinTimeOperationCompleted(object arg) {
            if ((this.CalcGMTMinTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcGMTMinTimeCompleted(this, new CalcGMTMinTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/CalcGMTDate", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime CalcGMTDate(string aLicKey, System.DateTime dtSchedTime) {
            object[] results = this.Invoke("CalcGMTDate", new object[] {
                        aLicKey,
                        dtSchedTime});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CalcGMTDateAsync(string aLicKey, System.DateTime dtSchedTime) {
            this.CalcGMTDateAsync(aLicKey, dtSchedTime, null);
        }
        
        /// <remarks/>
        public void CalcGMTDateAsync(string aLicKey, System.DateTime dtSchedTime, object userState) {
            if ((this.CalcGMTDateOperationCompleted == null)) {
                this.CalcGMTDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcGMTDateOperationCompleted);
            }
            this.InvokeAsync("CalcGMTDate", new object[] {
                        aLicKey,
                        dtSchedTime}, this.CalcGMTDateOperationCompleted, userState);
        }
        
        private void OnCalcGMTDateOperationCompleted(object arg) {
            if ((this.CalcGMTDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcGMTDateCompleted(this, new CalcGMTDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateWorkerMessage", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWorkerMessage(string aLicKey, long MsgNumber, long WorkerID, bool MsgSent, bool MsgRead, bool MsgReplySent, string MsgType) {
            object[] results = this.Invoke("UpdateWorkerMessage", new object[] {
                        aLicKey,
                        MsgNumber,
                        WorkerID,
                        MsgSent,
                        MsgRead,
                        MsgReplySent,
                        MsgType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkerMessageAsync(string aLicKey, long MsgNumber, long WorkerID, bool MsgSent, bool MsgRead, bool MsgReplySent, string MsgType) {
            this.UpdateWorkerMessageAsync(aLicKey, MsgNumber, WorkerID, MsgSent, MsgRead, MsgReplySent, MsgType, null);
        }
        
        /// <remarks/>
        public void UpdateWorkerMessageAsync(string aLicKey, long MsgNumber, long WorkerID, bool MsgSent, bool MsgRead, bool MsgReplySent, string MsgType, object userState) {
            if ((this.UpdateWorkerMessageOperationCompleted == null)) {
                this.UpdateWorkerMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkerMessageOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkerMessage", new object[] {
                        aLicKey,
                        MsgNumber,
                        WorkerID,
                        MsgSent,
                        MsgRead,
                        MsgReplySent,
                        MsgType}, this.UpdateWorkerMessageOperationCompleted, userState);
        }
        
        private void OnUpdateWorkerMessageOperationCompleted(object arg) {
            if ((this.UpdateWorkerMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkerMessageCompleted(this, new UpdateWorkerMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetLogon", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLogon(string aLicKey, string UserID, string Pswd) {
            object[] results = this.Invoke("GetLogon", new object[] {
                        aLicKey,
                        UserID,
                        Pswd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogonAsync(string aLicKey, string UserID, string Pswd) {
            this.GetLogonAsync(aLicKey, UserID, Pswd, null);
        }
        
        /// <remarks/>
        public void GetLogonAsync(string aLicKey, string UserID, string Pswd, object userState) {
            if ((this.GetLogonOperationCompleted == null)) {
                this.GetLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogonOperationCompleted);
            }
            this.InvokeAsync("GetLogon", new object[] {
                        aLicKey,
                        UserID,
                        Pswd}, this.GetLogonOperationCompleted, userState);
        }
        
        private void OnGetLogonOperationCompleted(object arg) {
            if ((this.GetLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogonCompleted(this, new GetLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GeneratePswd", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GeneratePswd(string aLicKey, string PhoneNumber) {
            object[] results = this.Invoke("GeneratePswd", new object[] {
                        aLicKey,
                        PhoneNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePswdAsync(string aLicKey, string PhoneNumber) {
            this.GeneratePswdAsync(aLicKey, PhoneNumber, null);
        }
        
        /// <remarks/>
        public void GeneratePswdAsync(string aLicKey, string PhoneNumber, object userState) {
            if ((this.GeneratePswdOperationCompleted == null)) {
                this.GeneratePswdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePswdOperationCompleted);
            }
            this.InvokeAsync("GeneratePswd", new object[] {
                        aLicKey,
                        PhoneNumber}, this.GeneratePswdOperationCompleted, userState);
        }
        
        private void OnGeneratePswdOperationCompleted(object arg) {
            if ((this.GeneratePswdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePswdCompleted(this, new GeneratePswdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GenerateUniquePhoneID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateUniquePhoneID(string aLicKey) {
            object[] results = this.Invoke("GenerateUniquePhoneID", new object[] {
                        aLicKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateUniquePhoneIDAsync(string aLicKey) {
            this.GenerateUniquePhoneIDAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void GenerateUniquePhoneIDAsync(string aLicKey, object userState) {
            if ((this.GenerateUniquePhoneIDOperationCompleted == null)) {
                this.GenerateUniquePhoneIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateUniquePhoneIDOperationCompleted);
            }
            this.InvokeAsync("GenerateUniquePhoneID", new object[] {
                        aLicKey}, this.GenerateUniquePhoneIDOperationCompleted, userState);
        }
        
        private void OnGenerateUniquePhoneIDOperationCompleted(object arg) {
            if ((this.GenerateUniquePhoneIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateUniquePhoneIDCompleted(this, new GenerateUniquePhoneIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetLogonUserInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLogonUserInfo(string aLicKey) {
            object[] results = this.Invoke("GetLogonUserInfo", new object[] {
                        aLicKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogonUserInfoAsync(string aLicKey) {
            this.GetLogonUserInfoAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void GetLogonUserInfoAsync(string aLicKey, object userState) {
            if ((this.GetLogonUserInfoOperationCompleted == null)) {
                this.GetLogonUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogonUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetLogonUserInfo", new object[] {
                        aLicKey}, this.GetLogonUserInfoOperationCompleted, userState);
        }
        
        private void OnGetLogonUserInfoOperationCompleted(object arg) {
            if ((this.GetLogonUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogonUserInfoCompleted(this, new GetLogonUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetUserLicKey", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserLicKey(string aLicKey, string UserID, string Pswd) {
            object[] results = this.Invoke("GetUserLicKey", new object[] {
                        aLicKey,
                        UserID,
                        Pswd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLicKeyAsync(string aLicKey, string UserID, string Pswd) {
            this.GetUserLicKeyAsync(aLicKey, UserID, Pswd, null);
        }
        
        /// <remarks/>
        public void GetUserLicKeyAsync(string aLicKey, string UserID, string Pswd, object userState) {
            if ((this.GetUserLicKeyOperationCompleted == null)) {
                this.GetUserLicKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLicKeyOperationCompleted);
            }
            this.InvokeAsync("GetUserLicKey", new object[] {
                        aLicKey,
                        UserID,
                        Pswd}, this.GetUserLicKeyOperationCompleted, userState);
        }
        
        private void OnGetUserLicKeyOperationCompleted(object arg) {
            if ((this.GetUserLicKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLicKeyCompleted(this, new GetUserLicKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetUplineSponsorDS", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUplineSponsorDS(string aLicKey, string UserID, string Pswd) {
            object[] results = this.Invoke("GetUplineSponsorDS", new object[] {
                        aLicKey,
                        UserID,
                        Pswd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUplineSponsorDSAsync(string aLicKey, string UserID, string Pswd) {
            this.GetUplineSponsorDSAsync(aLicKey, UserID, Pswd, null);
        }
        
        /// <remarks/>
        public void GetUplineSponsorDSAsync(string aLicKey, string UserID, string Pswd, object userState) {
            if ((this.GetUplineSponsorDSOperationCompleted == null)) {
                this.GetUplineSponsorDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUplineSponsorDSOperationCompleted);
            }
            this.InvokeAsync("GetUplineSponsorDS", new object[] {
                        aLicKey,
                        UserID,
                        Pswd}, this.GetUplineSponsorDSOperationCompleted, userState);
        }
        
        private void OnGetUplineSponsorDSOperationCompleted(object arg) {
            if ((this.GetUplineSponsorDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUplineSponsorDSCompleted(this, new GetUplineSponsorDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetUplineSponsor", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers GetUplineSponsor(string aLicKey, int UserID) {
            object[] results = this.Invoke("GetUplineSponsor", new object[] {
                        aLicKey,
                        UserID});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void GetUplineSponsorAsync(string aLicKey, int UserID) {
            this.GetUplineSponsorAsync(aLicKey, UserID, null);
        }
        
        /// <remarks/>
        public void GetUplineSponsorAsync(string aLicKey, int UserID, object userState) {
            if ((this.GetUplineSponsorOperationCompleted == null)) {
                this.GetUplineSponsorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUplineSponsorOperationCompleted);
            }
            this.InvokeAsync("GetUplineSponsor", new object[] {
                        aLicKey,
                        UserID}, this.GetUplineSponsorOperationCompleted, userState);
        }
        
        private void OnGetUplineSponsorOperationCompleted(object arg) {
            if ((this.GetUplineSponsorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUplineSponsorCompleted(this, new GetUplineSponsorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/BuildSMSAddress", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuildSMSAddress(string aLicKey, int ProviderID, string PhoneNumber) {
            object[] results = this.Invoke("BuildSMSAddress", new object[] {
                        aLicKey,
                        ProviderID,
                        PhoneNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuildSMSAddressAsync(string aLicKey, int ProviderID, string PhoneNumber) {
            this.BuildSMSAddressAsync(aLicKey, ProviderID, PhoneNumber, null);
        }
        
        /// <remarks/>
        public void BuildSMSAddressAsync(string aLicKey, int ProviderID, string PhoneNumber, object userState) {
            if ((this.BuildSMSAddressOperationCompleted == null)) {
                this.BuildSMSAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildSMSAddressOperationCompleted);
            }
            this.InvokeAsync("BuildSMSAddress", new object[] {
                        aLicKey,
                        ProviderID,
                        PhoneNumber}, this.BuildSMSAddressOperationCompleted, userState);
        }
        
        private void OnBuildSMSAddressOperationCompleted(object arg) {
            if ((this.BuildSMSAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildSMSAddressCompleted(this, new BuildSMSAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallInfoByIDDS", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallInfoByIDDS(string aLicKey, int iMemberID) {
            object[] results = this.Invoke("GetCallInfoByIDDS", new object[] {
                        aLicKey,
                        iMemberID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallInfoByIDDSAsync(string aLicKey, int iMemberID) {
            this.GetCallInfoByIDDSAsync(aLicKey, iMemberID, null);
        }
        
        /// <remarks/>
        public void GetCallInfoByIDDSAsync(string aLicKey, int iMemberID, object userState) {
            if ((this.GetCallInfoByIDDSOperationCompleted == null)) {
                this.GetCallInfoByIDDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallInfoByIDDSOperationCompleted);
            }
            this.InvokeAsync("GetCallInfoByIDDS", new object[] {
                        aLicKey,
                        iMemberID}, this.GetCallInfoByIDDSOperationCompleted, userState);
        }
        
        private void OnGetCallInfoByIDDSOperationCompleted(object arg) {
            if ((this.GetCallInfoByIDDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallInfoByIDDSCompleted(this, new GetCallInfoByIDDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallInfoByPhoneDS", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallInfoByPhoneDS(string aLicKey, string sPhoneNum) {
            object[] results = this.Invoke("GetCallInfoByPhoneDS", new object[] {
                        aLicKey,
                        sPhoneNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallInfoByPhoneDSAsync(string aLicKey, string sPhoneNum) {
            this.GetCallInfoByPhoneDSAsync(aLicKey, sPhoneNum, null);
        }
        
        /// <remarks/>
        public void GetCallInfoByPhoneDSAsync(string aLicKey, string sPhoneNum, object userState) {
            if ((this.GetCallInfoByPhoneDSOperationCompleted == null)) {
                this.GetCallInfoByPhoneDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallInfoByPhoneDSOperationCompleted);
            }
            this.InvokeAsync("GetCallInfoByPhoneDS", new object[] {
                        aLicKey,
                        sPhoneNum}, this.GetCallInfoByPhoneDSOperationCompleted, userState);
        }
        
        private void OnGetCallInfoByPhoneDSOperationCompleted(object arg) {
            if ((this.GetCallInfoByPhoneDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallInfoByPhoneDSCompleted(this, new GetCallInfoByPhoneDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetDupCheckPhoneNumbers", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDupCheckPhoneNumbers(string aLicKey, int iNetworkRefID) {
            object[] results = this.Invoke("GetDupCheckPhoneNumbers", new object[] {
                        aLicKey,
                        iNetworkRefID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDupCheckPhoneNumbersAsync(string aLicKey, int iNetworkRefID) {
            this.GetDupCheckPhoneNumbersAsync(aLicKey, iNetworkRefID, null);
        }
        
        /// <remarks/>
        public void GetDupCheckPhoneNumbersAsync(string aLicKey, int iNetworkRefID, object userState) {
            if ((this.GetDupCheckPhoneNumbersOperationCompleted == null)) {
                this.GetDupCheckPhoneNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDupCheckPhoneNumbersOperationCompleted);
            }
            this.InvokeAsync("GetDupCheckPhoneNumbers", new object[] {
                        aLicKey,
                        iNetworkRefID}, this.GetDupCheckPhoneNumbersOperationCompleted, userState);
        }
        
        private void OnGetDupCheckPhoneNumbersOperationCompleted(object arg) {
            if ((this.GetDupCheckPhoneNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDupCheckPhoneNumbersCompleted(this, new GetDupCheckPhoneNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallInfoByID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers GetCallInfoByID(string aLicKey, int iMemberID) {
            object[] results = this.Invoke("GetCallInfoByID", new object[] {
                        aLicKey,
                        iMemberID});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallInfoByIDAsync(string aLicKey, int iMemberID) {
            this.GetCallInfoByIDAsync(aLicKey, iMemberID, null);
        }
        
        /// <remarks/>
        public void GetCallInfoByIDAsync(string aLicKey, int iMemberID, object userState) {
            if ((this.GetCallInfoByIDOperationCompleted == null)) {
                this.GetCallInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallInfoByIDOperationCompleted);
            }
            this.InvokeAsync("GetCallInfoByID", new object[] {
                        aLicKey,
                        iMemberID}, this.GetCallInfoByIDOperationCompleted, userState);
        }
        
        private void OnGetCallInfoByIDOperationCompleted(object arg) {
            if ((this.GetCallInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallInfoByIDCompleted(this, new GetCallInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallInfoByPhone", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers GetCallInfoByPhone(string aLicKey, string sPhoneNum) {
            object[] results = this.Invoke("GetCallInfoByPhone", new object[] {
                        aLicKey,
                        sPhoneNum});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallInfoByPhoneAsync(string aLicKey, string sPhoneNum) {
            this.GetCallInfoByPhoneAsync(aLicKey, sPhoneNum, null);
        }
        
        /// <remarks/>
        public void GetCallInfoByPhoneAsync(string aLicKey, string sPhoneNum, object userState) {
            if ((this.GetCallInfoByPhoneOperationCompleted == null)) {
                this.GetCallInfoByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallInfoByPhoneOperationCompleted);
            }
            this.InvokeAsync("GetCallInfoByPhone", new object[] {
                        aLicKey,
                        sPhoneNum}, this.GetCallInfoByPhoneOperationCompleted, userState);
        }
        
        private void OnGetCallInfoByPhoneOperationCompleted(object arg) {
            if ((this.GetCallInfoByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallInfoByPhoneCompleted(this, new GetCallInfoByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAllBuddysByCaregiverPhone", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllBuddysByCaregiverPhone(string aLicKey, string sPhoneNum) {
            object[] results = this.Invoke("GetAllBuddysByCaregiverPhone", new object[] {
                        aLicKey,
                        sPhoneNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBuddysByCaregiverPhoneAsync(string aLicKey, string sPhoneNum) {
            this.GetAllBuddysByCaregiverPhoneAsync(aLicKey, sPhoneNum, null);
        }
        
        /// <remarks/>
        public void GetAllBuddysByCaregiverPhoneAsync(string aLicKey, string sPhoneNum, object userState) {
            if ((this.GetAllBuddysByCaregiverPhoneOperationCompleted == null)) {
                this.GetAllBuddysByCaregiverPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBuddysByCaregiverPhoneOperationCompleted);
            }
            this.InvokeAsync("GetAllBuddysByCaregiverPhone", new object[] {
                        aLicKey,
                        sPhoneNum}, this.GetAllBuddysByCaregiverPhoneOperationCompleted, userState);
        }
        
        private void OnGetAllBuddysByCaregiverPhoneOperationCompleted(object arg) {
            if ((this.GetAllBuddysByCaregiverPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBuddysByCaregiverPhoneCompleted(this, new GetAllBuddysByCaregiverPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAllBuddysByCaregiverID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllBuddysByCaregiverID(string aLicKey, int MemberID) {
            object[] results = this.Invoke("GetAllBuddysByCaregiverID", new object[] {
                        aLicKey,
                        MemberID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBuddysByCaregiverIDAsync(string aLicKey, int MemberID) {
            this.GetAllBuddysByCaregiverIDAsync(aLicKey, MemberID, null);
        }
        
        /// <remarks/>
        public void GetAllBuddysByCaregiverIDAsync(string aLicKey, int MemberID, object userState) {
            if ((this.GetAllBuddysByCaregiverIDOperationCompleted == null)) {
                this.GetAllBuddysByCaregiverIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBuddysByCaregiverIDOperationCompleted);
            }
            this.InvokeAsync("GetAllBuddysByCaregiverID", new object[] {
                        aLicKey,
                        MemberID}, this.GetAllBuddysByCaregiverIDOperationCompleted, userState);
        }
        
        private void OnGetAllBuddysByCaregiverIDOperationCompleted(object arg) {
            if ((this.GetAllBuddysByCaregiverIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBuddysByCaregiverIDCompleted(this, new GetAllBuddysByCaregiverIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallInfoByFullName", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers GetCallInfoByFullName(string aLicKey, string sFtName, string sLtName) {
            object[] results = this.Invoke("GetCallInfoByFullName", new object[] {
                        aLicKey,
                        sFtName,
                        sLtName});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallInfoByFullNameAsync(string aLicKey, string sFtName, string sLtName) {
            this.GetCallInfoByFullNameAsync(aLicKey, sFtName, sLtName, null);
        }
        
        /// <remarks/>
        public void GetCallInfoByFullNameAsync(string aLicKey, string sFtName, string sLtName, object userState) {
            if ((this.GetCallInfoByFullNameOperationCompleted == null)) {
                this.GetCallInfoByFullNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallInfoByFullNameOperationCompleted);
            }
            this.InvokeAsync("GetCallInfoByFullName", new object[] {
                        aLicKey,
                        sFtName,
                        sLtName}, this.GetCallInfoByFullNameOperationCompleted, userState);
        }
        
        private void OnGetCallInfoByFullNameOperationCompleted(object arg) {
            if ((this.GetCallInfoByFullNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallInfoByFullNameCompleted(this, new GetCallInfoByFullNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallInfoByLtName", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers GetCallInfoByLtName(string aLicKey, string sLtName) {
            object[] results = this.Invoke("GetCallInfoByLtName", new object[] {
                        aLicKey,
                        sLtName});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallInfoByLtNameAsync(string aLicKey, string sLtName) {
            this.GetCallInfoByLtNameAsync(aLicKey, sLtName, null);
        }
        
        /// <remarks/>
        public void GetCallInfoByLtNameAsync(string aLicKey, string sLtName, object userState) {
            if ((this.GetCallInfoByLtNameOperationCompleted == null)) {
                this.GetCallInfoByLtNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallInfoByLtNameOperationCompleted);
            }
            this.InvokeAsync("GetCallInfoByLtName", new object[] {
                        aLicKey,
                        sLtName}, this.GetCallInfoByLtNameOperationCompleted, userState);
        }
        
        private void OnGetCallInfoByLtNameOperationCompleted(object arg) {
            if ((this.GetCallInfoByLtNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallInfoByLtNameCompleted(this, new GetCallInfoByLtNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/IsAuthorizedToAddMember", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Callers IsAuthorizedToAddMember(string aLicKey, Callers clsMember, Callers clsUser, bool bPhoneChg, bool bPhoneOverride) {
            object[] results = this.Invoke("IsAuthorizedToAddMember", new object[] {
                        aLicKey,
                        clsMember,
                        clsUser,
                        bPhoneChg,
                        bPhoneOverride});
            return ((Callers)(results[0]));
        }
        
        /// <remarks/>
        public void IsAuthorizedToAddMemberAsync(string aLicKey, Callers clsMember, Callers clsUser, bool bPhoneChg, bool bPhoneOverride) {
            this.IsAuthorizedToAddMemberAsync(aLicKey, clsMember, clsUser, bPhoneChg, bPhoneOverride, null);
        }
        
        /// <remarks/>
        public void IsAuthorizedToAddMemberAsync(string aLicKey, Callers clsMember, Callers clsUser, bool bPhoneChg, bool bPhoneOverride, object userState) {
            if ((this.IsAuthorizedToAddMemberOperationCompleted == null)) {
                this.IsAuthorizedToAddMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAuthorizedToAddMemberOperationCompleted);
            }
            this.InvokeAsync("IsAuthorizedToAddMember", new object[] {
                        aLicKey,
                        clsMember,
                        clsUser,
                        bPhoneChg,
                        bPhoneOverride}, this.IsAuthorizedToAddMemberOperationCompleted, userState);
        }
        
        private void OnIsAuthorizedToAddMemberOperationCompleted(object arg) {
            if ((this.IsAuthorizedToAddMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAuthorizedToAddMemberCompleted(this, new IsAuthorizedToAddMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/CanViewMember", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanViewMember(string aLicKey, Callers clsMember, Callers clsUser) {
            object[] results = this.Invoke("CanViewMember", new object[] {
                        aLicKey,
                        clsMember,
                        clsUser});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanViewMemberAsync(string aLicKey, Callers clsMember, Callers clsUser) {
            this.CanViewMemberAsync(aLicKey, clsMember, clsUser, null);
        }
        
        /// <remarks/>
        public void CanViewMemberAsync(string aLicKey, Callers clsMember, Callers clsUser, object userState) {
            if ((this.CanViewMemberOperationCompleted == null)) {
                this.CanViewMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanViewMemberOperationCompleted);
            }
            this.InvokeAsync("CanViewMember", new object[] {
                        aLicKey,
                        clsMember,
                        clsUser}, this.CanViewMemberOperationCompleted, userState);
        }
        
        private void OnCanViewMemberOperationCompleted(object arg) {
            if ((this.CanViewMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanViewMemberCompleted(this, new CanViewMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/IsUserSales", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserSales(string aLicKey) {
            object[] results = this.Invoke("IsUserSales", new object[] {
                        aLicKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserSalesAsync(string aLicKey) {
            this.IsUserSalesAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void IsUserSalesAsync(string aLicKey, object userState) {
            if ((this.IsUserSalesOperationCompleted == null)) {
                this.IsUserSalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserSalesOperationCompleted);
            }
            this.InvokeAsync("IsUserSales", new object[] {
                        aLicKey}, this.IsUserSalesOperationCompleted, userState);
        }
        
        private void OnIsUserSalesOperationCompleted(object arg) {
            if ((this.IsUserSalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserSalesCompleted(this, new IsUserSalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/IsUserMgr", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserMgr(string aLicKey) {
            object[] results = this.Invoke("IsUserMgr", new object[] {
                        aLicKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserMgrAsync(string aLicKey) {
            this.IsUserMgrAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void IsUserMgrAsync(string aLicKey, object userState) {
            if ((this.IsUserMgrOperationCompleted == null)) {
                this.IsUserMgrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserMgrOperationCompleted);
            }
            this.InvokeAsync("IsUserMgr", new object[] {
                        aLicKey}, this.IsUserMgrOperationCompleted, userState);
        }
        
        private void OnIsUserMgrOperationCompleted(object arg) {
            if ((this.IsUserMgrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserMgrCompleted(this, new IsUserMgrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/IsUserOwner", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserOwner(string aLicKey) {
            object[] results = this.Invoke("IsUserOwner", new object[] {
                        aLicKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserOwnerAsync(string aLicKey) {
            this.IsUserOwnerAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void IsUserOwnerAsync(string aLicKey, object userState) {
            if ((this.IsUserOwnerOperationCompleted == null)) {
                this.IsUserOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserOwnerOperationCompleted);
            }
            this.InvokeAsync("IsUserOwner", new object[] {
                        aLicKey}, this.IsUserOwnerOperationCompleted, userState);
        }
        
        private void OnIsUserOwnerOperationCompleted(object arg) {
            if ((this.IsUserOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserOwnerCompleted(this, new IsUserOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/IsRegisteredPhone", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsRegisteredPhone(string aLicKey, string sPhone) {
            object[] results = this.Invoke("IsRegisteredPhone", new object[] {
                        aLicKey,
                        sPhone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsRegisteredPhoneAsync(string aLicKey, string sPhone) {
            this.IsRegisteredPhoneAsync(aLicKey, sPhone, null);
        }
        
        /// <remarks/>
        public void IsRegisteredPhoneAsync(string aLicKey, string sPhone, object userState) {
            if ((this.IsRegisteredPhoneOperationCompleted == null)) {
                this.IsRegisteredPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRegisteredPhoneOperationCompleted);
            }
            this.InvokeAsync("IsRegisteredPhone", new object[] {
                        aLicKey,
                        sPhone}, this.IsRegisteredPhoneOperationCompleted, userState);
        }
        
        private void OnIsRegisteredPhoneOperationCompleted(object arg) {
            if ((this.IsRegisteredPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRegisteredPhoneCompleted(this, new IsRegisteredPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/IsUserAdmin", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserAdmin(string aLicKey) {
            object[] results = this.Invoke("IsUserAdmin", new object[] {
                        aLicKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserAdminAsync(string aLicKey) {
            this.IsUserAdminAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void IsUserAdminAsync(string aLicKey, object userState) {
            if ((this.IsUserAdminOperationCompleted == null)) {
                this.IsUserAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserAdminOperationCompleted);
            }
            this.InvokeAsync("IsUserAdmin", new object[] {
                        aLicKey}, this.IsUserAdminOperationCompleted, userState);
        }
        
        private void OnIsUserAdminOperationCompleted(object arg) {
            if ((this.IsUserAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserAdminCompleted(this, new IsUserAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetMessagesInfoByAcct", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMessagesInfoByAcct(string aLicKey, string sPhoneNum) {
            object[] results = this.Invoke("GetMessagesInfoByAcct", new object[] {
                        aLicKey,
                        sPhoneNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesInfoByAcctAsync(string aLicKey, string sPhoneNum) {
            this.GetMessagesInfoByAcctAsync(aLicKey, sPhoneNum, null);
        }
        
        /// <remarks/>
        public void GetMessagesInfoByAcctAsync(string aLicKey, string sPhoneNum, object userState) {
            if ((this.GetMessagesInfoByAcctOperationCompleted == null)) {
                this.GetMessagesInfoByAcctOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesInfoByAcctOperationCompleted);
            }
            this.InvokeAsync("GetMessagesInfoByAcct", new object[] {
                        aLicKey,
                        sPhoneNum}, this.GetMessagesInfoByAcctOperationCompleted, userState);
        }
        
        private void OnGetMessagesInfoByAcctOperationCompleted(object arg) {
            if ((this.GetMessagesInfoByAcctCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesInfoByAcctCompleted(this, new GetMessagesInfoByAcctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetMessagesInfoByTo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMessagesInfoByTo(string aLicKey, string sPhoneNum, string sType) {
            object[] results = this.Invoke("GetMessagesInfoByTo", new object[] {
                        aLicKey,
                        sPhoneNum,
                        sType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesInfoByToAsync(string aLicKey, string sPhoneNum, string sType) {
            this.GetMessagesInfoByToAsync(aLicKey, sPhoneNum, sType, null);
        }
        
        /// <remarks/>
        public void GetMessagesInfoByToAsync(string aLicKey, string sPhoneNum, string sType, object userState) {
            if ((this.GetMessagesInfoByToOperationCompleted == null)) {
                this.GetMessagesInfoByToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesInfoByToOperationCompleted);
            }
            this.InvokeAsync("GetMessagesInfoByTo", new object[] {
                        aLicKey,
                        sPhoneNum,
                        sType}, this.GetMessagesInfoByToOperationCompleted, userState);
        }
        
        private void OnGetMessagesInfoByToOperationCompleted(object arg) {
            if ((this.GetMessagesInfoByToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesInfoByToCompleted(this, new GetMessagesInfoByToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetMessagesResponseInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMessagesResponseInfo(string aLicKey, int iAction, int iMemberID, int iResponseSeq, long lScheduleID, int iNetworkRefID, long lMsgID) {
            object[] results = this.Invoke("GetMessagesResponseInfo", new object[] {
                        aLicKey,
                        iAction,
                        iMemberID,
                        iResponseSeq,
                        lScheduleID,
                        iNetworkRefID,
                        lMsgID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesResponseInfoAsync(string aLicKey, int iAction, int iMemberID, int iResponseSeq, long lScheduleID, int iNetworkRefID, long lMsgID) {
            this.GetMessagesResponseInfoAsync(aLicKey, iAction, iMemberID, iResponseSeq, lScheduleID, iNetworkRefID, lMsgID, null);
        }
        
        /// <remarks/>
        public void GetMessagesResponseInfoAsync(string aLicKey, int iAction, int iMemberID, int iResponseSeq, long lScheduleID, int iNetworkRefID, long lMsgID, object userState) {
            if ((this.GetMessagesResponseInfoOperationCompleted == null)) {
                this.GetMessagesResponseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesResponseInfoOperationCompleted);
            }
            this.InvokeAsync("GetMessagesResponseInfo", new object[] {
                        aLicKey,
                        iAction,
                        iMemberID,
                        iResponseSeq,
                        lScheduleID,
                        iNetworkRefID,
                        lMsgID}, this.GetMessagesResponseInfoOperationCompleted, userState);
        }
        
        private void OnGetMessagesResponseInfoOperationCompleted(object arg) {
            if ((this.GetMessagesResponseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesResponseInfoCompleted(this, new GetMessagesResponseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetMessagesInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMessagesInfo(string aLicKey, int iAction, string sPhoneNumber, string sMsgType, string sAcctTypeCode, int iMemberID, bool bMsgRead, long lMsgID, string sCategory, string sSubCategory) {
            object[] results = this.Invoke("GetMessagesInfo", new object[] {
                        aLicKey,
                        iAction,
                        sPhoneNumber,
                        sMsgType,
                        sAcctTypeCode,
                        iMemberID,
                        bMsgRead,
                        lMsgID,
                        sCategory,
                        sSubCategory});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesInfoAsync(string aLicKey, int iAction, string sPhoneNumber, string sMsgType, string sAcctTypeCode, int iMemberID, bool bMsgRead, long lMsgID, string sCategory, string sSubCategory) {
            this.GetMessagesInfoAsync(aLicKey, iAction, sPhoneNumber, sMsgType, sAcctTypeCode, iMemberID, bMsgRead, lMsgID, sCategory, sSubCategory, null);
        }
        
        /// <remarks/>
        public void GetMessagesInfoAsync(string aLicKey, int iAction, string sPhoneNumber, string sMsgType, string sAcctTypeCode, int iMemberID, bool bMsgRead, long lMsgID, string sCategory, string sSubCategory, object userState) {
            if ((this.GetMessagesInfoOperationCompleted == null)) {
                this.GetMessagesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesInfoOperationCompleted);
            }
            this.InvokeAsync("GetMessagesInfo", new object[] {
                        aLicKey,
                        iAction,
                        sPhoneNumber,
                        sMsgType,
                        sAcctTypeCode,
                        iMemberID,
                        bMsgRead,
                        lMsgID,
                        sCategory,
                        sSubCategory}, this.GetMessagesInfoOperationCompleted, userState);
        }
        
        private void OnGetMessagesInfoOperationCompleted(object arg) {
            if ((this.GetMessagesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesInfoCompleted(this, new GetMessagesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/ConvertToSmsAddress", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertToSmsAddress(string aLicKey, string sPhoneNum) {
            object[] results = this.Invoke("ConvertToSmsAddress", new object[] {
                        aLicKey,
                        sPhoneNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertToSmsAddressAsync(string aLicKey, string sPhoneNum) {
            this.ConvertToSmsAddressAsync(aLicKey, sPhoneNum, null);
        }
        
        /// <remarks/>
        public void ConvertToSmsAddressAsync(string aLicKey, string sPhoneNum, object userState) {
            if ((this.ConvertToSmsAddressOperationCompleted == null)) {
                this.ConvertToSmsAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertToSmsAddressOperationCompleted);
            }
            this.InvokeAsync("ConvertToSmsAddress", new object[] {
                        aLicKey,
                        sPhoneNum}, this.ConvertToSmsAddressOperationCompleted, userState);
        }
        
        private void OnConvertToSmsAddressOperationCompleted(object arg) {
            if ((this.ConvertToSmsAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertToSmsAddressCompleted(this, new ConvertToSmsAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAllContactListByMemberID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllContactListByMemberID(string aLicKey, int iMember) {
            object[] results = this.Invoke("GetAllContactListByMemberID", new object[] {
                        aLicKey,
                        iMember});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllContactListByMemberIDAsync(string aLicKey, int iMember) {
            this.GetAllContactListByMemberIDAsync(aLicKey, iMember, null);
        }
        
        /// <remarks/>
        public void GetAllContactListByMemberIDAsync(string aLicKey, int iMember, object userState) {
            if ((this.GetAllContactListByMemberIDOperationCompleted == null)) {
                this.GetAllContactListByMemberIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllContactListByMemberIDOperationCompleted);
            }
            this.InvokeAsync("GetAllContactListByMemberID", new object[] {
                        aLicKey,
                        iMember}, this.GetAllContactListByMemberIDOperationCompleted, userState);
        }
        
        private void OnGetAllContactListByMemberIDOperationCompleted(object arg) {
            if ((this.GetAllContactListByMemberIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllContactListByMemberIDCompleted(this, new GetAllContactListByMemberIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetContactListByRole", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContactListByRole(string aLicKey, string sMemberPhone, string cRole) {
            object[] results = this.Invoke("GetContactListByRole", new object[] {
                        aLicKey,
                        sMemberPhone,
                        cRole});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactListByRoleAsync(string aLicKey, string sMemberPhone, string cRole) {
            this.GetContactListByRoleAsync(aLicKey, sMemberPhone, cRole, null);
        }
        
        /// <remarks/>
        public void GetContactListByRoleAsync(string aLicKey, string sMemberPhone, string cRole, object userState) {
            if ((this.GetContactListByRoleOperationCompleted == null)) {
                this.GetContactListByRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactListByRoleOperationCompleted);
            }
            this.InvokeAsync("GetContactListByRole", new object[] {
                        aLicKey,
                        sMemberPhone,
                        cRole}, this.GetContactListByRoleOperationCompleted, userState);
        }
        
        private void OnGetContactListByRoleOperationCompleted(object arg) {
            if ((this.GetContactListByRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactListByRoleCompleted(this, new GetContactListByRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScheduleInfo(string aLicKey, int iMemberID) {
            object[] results = this.Invoke("GetScheduleInfo", new object[] {
                        aLicKey,
                        iMemberID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleInfoAsync(string aLicKey, int iMemberID) {
            this.GetScheduleInfoAsync(aLicKey, iMemberID, null);
        }
        
        /// <remarks/>
        public void GetScheduleInfoAsync(string aLicKey, int iMemberID, object userState) {
            if ((this.GetScheduleInfoOperationCompleted == null)) {
                this.GetScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("GetScheduleInfo", new object[] {
                        aLicKey,
                        iMemberID}, this.GetScheduleInfoOperationCompleted, userState);
        }
        
        private void OnGetScheduleInfoOperationCompleted(object arg) {
            if ((this.GetScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleInfoCompleted(this, new GetScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAllScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllScheduleInfo(string aLicKey, string sSkipFreq) {
            object[] results = this.Invoke("GetAllScheduleInfo", new object[] {
                        aLicKey,
                        sSkipFreq});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScheduleInfoAsync(string aLicKey, string sSkipFreq) {
            this.GetAllScheduleInfoAsync(aLicKey, sSkipFreq, null);
        }
        
        /// <remarks/>
        public void GetAllScheduleInfoAsync(string aLicKey, string sSkipFreq, object userState) {
            if ((this.GetAllScheduleInfoOperationCompleted == null)) {
                this.GetAllScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllScheduleInfo", new object[] {
                        aLicKey,
                        sSkipFreq}, this.GetAllScheduleInfoOperationCompleted, userState);
        }
        
        private void OnGetAllScheduleInfoOperationCompleted(object arg) {
            if ((this.GetAllScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScheduleInfoCompleted(this, new GetAllScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAllScheduleInfoSecure", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllScheduleInfoSecure(string aLicKey, int iUserID, string sSkipFreq) {
            object[] results = this.Invoke("GetAllScheduleInfoSecure", new object[] {
                        aLicKey,
                        iUserID,
                        sSkipFreq});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScheduleInfoSecureAsync(string aLicKey, int iUserID, string sSkipFreq) {
            this.GetAllScheduleInfoSecureAsync(aLicKey, iUserID, sSkipFreq, null);
        }
        
        /// <remarks/>
        public void GetAllScheduleInfoSecureAsync(string aLicKey, int iUserID, string sSkipFreq, object userState) {
            if ((this.GetAllScheduleInfoSecureOperationCompleted == null)) {
                this.GetAllScheduleInfoSecureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScheduleInfoSecureOperationCompleted);
            }
            this.InvokeAsync("GetAllScheduleInfoSecure", new object[] {
                        aLicKey,
                        iUserID,
                        sSkipFreq}, this.GetAllScheduleInfoSecureOperationCompleted, userState);
        }
        
        private void OnGetAllScheduleInfoSecureOperationCompleted(object arg) {
            if ((this.GetAllScheduleInfoSecureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScheduleInfoSecureCompleted(this, new GetAllScheduleInfoSecureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSingleScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSingleScheduleInfo(string aLicKey, long iScheduleID) {
            object[] results = this.Invoke("GetSingleScheduleInfo", new object[] {
                        aLicKey,
                        iScheduleID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleScheduleInfoAsync(string aLicKey, long iScheduleID) {
            this.GetSingleScheduleInfoAsync(aLicKey, iScheduleID, null);
        }
        
        /// <remarks/>
        public void GetSingleScheduleInfoAsync(string aLicKey, long iScheduleID, object userState) {
            if ((this.GetSingleScheduleInfoOperationCompleted == null)) {
                this.GetSingleScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("GetSingleScheduleInfo", new object[] {
                        aLicKey,
                        iScheduleID}, this.GetSingleScheduleInfoOperationCompleted, userState);
        }
        
        private void OnGetSingleScheduleInfoOperationCompleted(object arg) {
            if ((this.GetSingleScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleScheduleInfoCompleted(this, new GetSingleScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCategoryScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCategoryScheduleInfo(string aLicKey, string sCategory) {
            object[] results = this.Invoke("GetCategoryScheduleInfo", new object[] {
                        aLicKey,
                        sCategory});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryScheduleInfoAsync(string aLicKey, string sCategory) {
            this.GetCategoryScheduleInfoAsync(aLicKey, sCategory, null);
        }
        
        /// <remarks/>
        public void GetCategoryScheduleInfoAsync(string aLicKey, string sCategory, object userState) {
            if ((this.GetCategoryScheduleInfoOperationCompleted == null)) {
                this.GetCategoryScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("GetCategoryScheduleInfo", new object[] {
                        aLicKey,
                        sCategory}, this.GetCategoryScheduleInfoOperationCompleted, userState);
        }
        
        private void OnGetCategoryScheduleInfoOperationCompleted(object arg) {
            if ((this.GetCategoryScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryScheduleInfoCompleted(this, new GetCategoryScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSubCategoryScheduleInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubCategoryScheduleInfo(string aLicKey, string sCategory, string sSubCategory) {
            object[] results = this.Invoke("GetSubCategoryScheduleInfo", new object[] {
                        aLicKey,
                        sCategory,
                        sSubCategory});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubCategoryScheduleInfoAsync(string aLicKey, string sCategory, string sSubCategory) {
            this.GetSubCategoryScheduleInfoAsync(aLicKey, sCategory, sSubCategory, null);
        }
        
        /// <remarks/>
        public void GetSubCategoryScheduleInfoAsync(string aLicKey, string sCategory, string sSubCategory, object userState) {
            if ((this.GetSubCategoryScheduleInfoOperationCompleted == null)) {
                this.GetSubCategoryScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubCategoryScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("GetSubCategoryScheduleInfo", new object[] {
                        aLicKey,
                        sCategory,
                        sSubCategory}, this.GetSubCategoryScheduleInfoOperationCompleted, userState);
        }
        
        private void OnGetSubCategoryScheduleInfoOperationCompleted(object arg) {
            if ((this.GetSubCategoryScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubCategoryScheduleInfoCompleted(this, new GetSubCategoryScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSmsProviderInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSmsProviderInfo(string aLicKey) {
            object[] results = this.Invoke("GetSmsProviderInfo", new object[] {
                        aLicKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsProviderInfoAsync(string aLicKey) {
            this.GetSmsProviderInfoAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void GetSmsProviderInfoAsync(string aLicKey, object userState) {
            if ((this.GetSmsProviderInfoOperationCompleted == null)) {
                this.GetSmsProviderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsProviderInfoOperationCompleted);
            }
            this.InvokeAsync("GetSmsProviderInfo", new object[] {
                        aLicKey}, this.GetSmsProviderInfoOperationCompleted, userState);
        }
        
        private void OnGetSmsProviderInfoOperationCompleted(object arg) {
            if ((this.GetSmsProviderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsProviderInfoCompleted(this, new GetSmsProviderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSmsProviderInfoByAddr", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSmsProviderInfoByAddr(string aLicKey, string sAddr) {
            object[] results = this.Invoke("GetSmsProviderInfoByAddr", new object[] {
                        aLicKey,
                        sAddr});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsProviderInfoByAddrAsync(string aLicKey, string sAddr) {
            this.GetSmsProviderInfoByAddrAsync(aLicKey, sAddr, null);
        }
        
        /// <remarks/>
        public void GetSmsProviderInfoByAddrAsync(string aLicKey, string sAddr, object userState) {
            if ((this.GetSmsProviderInfoByAddrOperationCompleted == null)) {
                this.GetSmsProviderInfoByAddrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsProviderInfoByAddrOperationCompleted);
            }
            this.InvokeAsync("GetSmsProviderInfoByAddr", new object[] {
                        aLicKey,
                        sAddr}, this.GetSmsProviderInfoByAddrOperationCompleted, userState);
        }
        
        private void OnGetSmsProviderInfoByAddrOperationCompleted(object arg) {
            if ((this.GetSmsProviderInfoByAddrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsProviderInfoByAddrCompleted(this, new GetSmsProviderInfoByAddrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetZipcodeInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetZipcodeInfo(string aLicKey, string sZipcode) {
            object[] results = this.Invoke("GetZipcodeInfo", new object[] {
                        aLicKey,
                        sZipcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetZipcodeInfoAsync(string aLicKey, string sZipcode) {
            this.GetZipcodeInfoAsync(aLicKey, sZipcode, null);
        }
        
        /// <remarks/>
        public void GetZipcodeInfoAsync(string aLicKey, string sZipcode, object userState) {
            if ((this.GetZipcodeInfoOperationCompleted == null)) {
                this.GetZipcodeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZipcodeInfoOperationCompleted);
            }
            this.InvokeAsync("GetZipcodeInfo", new object[] {
                        aLicKey,
                        sZipcode}, this.GetZipcodeInfoOperationCompleted, userState);
        }
        
        private void OnGetZipcodeInfoOperationCompleted(object arg) {
            if ((this.GetZipcodeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZipcodeInfoCompleted(this, new GetZipcodeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetAccountTypes", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountTypes(string aLicKey, int iNetworkID) {
            object[] results = this.Invoke("GetAccountTypes", new object[] {
                        aLicKey,
                        iNetworkID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountTypesAsync(string aLicKey, int iNetworkID) {
            this.GetAccountTypesAsync(aLicKey, iNetworkID, null);
        }
        
        /// <remarks/>
        public void GetAccountTypesAsync(string aLicKey, int iNetworkID, object userState) {
            if ((this.GetAccountTypesOperationCompleted == null)) {
                this.GetAccountTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountTypesOperationCompleted);
            }
            this.InvokeAsync("GetAccountTypes", new object[] {
                        aLicKey,
                        iNetworkID}, this.GetAccountTypesOperationCompleted, userState);
        }
        
        private void OnGetAccountTypesOperationCompleted(object arg) {
            if ((this.GetAccountTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountTypesCompleted(this, new GetAccountTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetProviderTypes", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProviderTypes(string aLicKey) {
            object[] results = this.Invoke("GetProviderTypes", new object[] {
                        aLicKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderTypesAsync(string aLicKey) {
            this.GetProviderTypesAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void GetProviderTypesAsync(string aLicKey, object userState) {
            if ((this.GetProviderTypesOperationCompleted == null)) {
                this.GetProviderTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderTypesOperationCompleted);
            }
            this.InvokeAsync("GetProviderTypes", new object[] {
                        aLicKey}, this.GetProviderTypesOperationCompleted, userState);
        }
        
        private void OnGetProviderTypesOperationCompleted(object arg) {
            if ((this.GetProviderTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderTypesCompleted(this, new GetProviderTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetProvidersInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProvidersInfo(string aLicKey) {
            object[] results = this.Invoke("GetProvidersInfo", new object[] {
                        aLicKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProvidersInfoAsync(string aLicKey) {
            this.GetProvidersInfoAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void GetProvidersInfoAsync(string aLicKey, object userState) {
            if ((this.GetProvidersInfoOperationCompleted == null)) {
                this.GetProvidersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProvidersInfoOperationCompleted);
            }
            this.InvokeAsync("GetProvidersInfo", new object[] {
                        aLicKey}, this.GetProvidersInfoOperationCompleted, userState);
        }
        
        private void OnGetProvidersInfoOperationCompleted(object arg) {
            if ((this.GetProvidersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProvidersInfoCompleted(this, new GetProvidersInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetProvidersDefaultInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProvidersDefaultInfo(string aLicKey, string sGeoArea, int iProvider) {
            object[] results = this.Invoke("GetProvidersDefaultInfo", new object[] {
                        aLicKey,
                        sGeoArea,
                        iProvider});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProvidersDefaultInfoAsync(string aLicKey, string sGeoArea, int iProvider) {
            this.GetProvidersDefaultInfoAsync(aLicKey, sGeoArea, iProvider, null);
        }
        
        /// <remarks/>
        public void GetProvidersDefaultInfoAsync(string aLicKey, string sGeoArea, int iProvider, object userState) {
            if ((this.GetProvidersDefaultInfoOperationCompleted == null)) {
                this.GetProvidersDefaultInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProvidersDefaultInfoOperationCompleted);
            }
            this.InvokeAsync("GetProvidersDefaultInfo", new object[] {
                        aLicKey,
                        sGeoArea,
                        iProvider}, this.GetProvidersDefaultInfoOperationCompleted, userState);
        }
        
        private void OnGetProvidersDefaultInfoOperationCompleted(object arg) {
            if ((this.GetProvidersDefaultInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProvidersDefaultInfoCompleted(this, new GetProvidersDefaultInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetProvidersInfoByType", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProvidersInfoByType(string aLicKey, string sID) {
            object[] results = this.Invoke("GetProvidersInfoByType", new object[] {
                        aLicKey,
                        sID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProvidersInfoByTypeAsync(string aLicKey, string sID) {
            this.GetProvidersInfoByTypeAsync(aLicKey, sID, null);
        }
        
        /// <remarks/>
        public void GetProvidersInfoByTypeAsync(string aLicKey, string sID, object userState) {
            if ((this.GetProvidersInfoByTypeOperationCompleted == null)) {
                this.GetProvidersInfoByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProvidersInfoByTypeOperationCompleted);
            }
            this.InvokeAsync("GetProvidersInfoByType", new object[] {
                        aLicKey,
                        sID}, this.GetProvidersInfoByTypeOperationCompleted, userState);
        }
        
        private void OnGetProvidersInfoByTypeOperationCompleted(object arg) {
            if ((this.GetProvidersInfoByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProvidersInfoByTypeCompleted(this, new GetProvidersInfoByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallerInfoByExtRefID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallerInfoByExtRefID(string aLicKey, string sID) {
            object[] results = this.Invoke("GetCallerInfoByExtRefID", new object[] {
                        aLicKey,
                        sID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallerInfoByExtRefIDAsync(string aLicKey, string sID) {
            this.GetCallerInfoByExtRefIDAsync(aLicKey, sID, null);
        }
        
        /// <remarks/>
        public void GetCallerInfoByExtRefIDAsync(string aLicKey, string sID, object userState) {
            if ((this.GetCallerInfoByExtRefIDOperationCompleted == null)) {
                this.GetCallerInfoByExtRefIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallerInfoByExtRefIDOperationCompleted);
            }
            this.InvokeAsync("GetCallerInfoByExtRefID", new object[] {
                        aLicKey,
                        sID}, this.GetCallerInfoByExtRefIDOperationCompleted, userState);
        }
        
        private void OnGetCallerInfoByExtRefIDOperationCompleted(object arg) {
            if ((this.GetCallerInfoByExtRefIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallerInfoByExtRefIDCompleted(this, new GetCallerInfoByExtRefIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSubscribersInfoAdmin", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubscribersInfoAdmin(string aLicKey) {
            object[] results = this.Invoke("GetSubscribersInfoAdmin", new object[] {
                        aLicKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscribersInfoAdminAsync(string aLicKey) {
            this.GetSubscribersInfoAdminAsync(aLicKey, null);
        }
        
        /// <remarks/>
        public void GetSubscribersInfoAdminAsync(string aLicKey, object userState) {
            if ((this.GetSubscribersInfoAdminOperationCompleted == null)) {
                this.GetSubscribersInfoAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribersInfoAdminOperationCompleted);
            }
            this.InvokeAsync("GetSubscribersInfoAdmin", new object[] {
                        aLicKey}, this.GetSubscribersInfoAdminOperationCompleted, userState);
        }
        
        private void OnGetSubscribersInfoAdminOperationCompleted(object arg) {
            if ((this.GetSubscribersInfoAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscribersInfoAdminCompleted(this, new GetSubscribersInfoAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSubscribersInfoByAcctType", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubscribersInfoByAcctType(string aLicKey, int sMemberID) {
            object[] results = this.Invoke("GetSubscribersInfoByAcctType", new object[] {
                        aLicKey,
                        sMemberID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscribersInfoByAcctTypeAsync(string aLicKey, int sMemberID) {
            this.GetSubscribersInfoByAcctTypeAsync(aLicKey, sMemberID, null);
        }
        
        /// <remarks/>
        public void GetSubscribersInfoByAcctTypeAsync(string aLicKey, int sMemberID, object userState) {
            if ((this.GetSubscribersInfoByAcctTypeOperationCompleted == null)) {
                this.GetSubscribersInfoByAcctTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribersInfoByAcctTypeOperationCompleted);
            }
            this.InvokeAsync("GetSubscribersInfoByAcctType", new object[] {
                        aLicKey,
                        sMemberID}, this.GetSubscribersInfoByAcctTypeOperationCompleted, userState);
        }
        
        private void OnGetSubscribersInfoByAcctTypeOperationCompleted(object arg) {
            if ((this.GetSubscribersInfoByAcctTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscribersInfoByAcctTypeCompleted(this, new GetSubscribersInfoByAcctTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSubscribersInfoBySponID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubscribersInfoBySponID(string aLicKey, int iSponsorID) {
            object[] results = this.Invoke("GetSubscribersInfoBySponID", new object[] {
                        aLicKey,
                        iSponsorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscribersInfoBySponIDAsync(string aLicKey, int iSponsorID) {
            this.GetSubscribersInfoBySponIDAsync(aLicKey, iSponsorID, null);
        }
        
        /// <remarks/>
        public void GetSubscribersInfoBySponIDAsync(string aLicKey, int iSponsorID, object userState) {
            if ((this.GetSubscribersInfoBySponIDOperationCompleted == null)) {
                this.GetSubscribersInfoBySponIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribersInfoBySponIDOperationCompleted);
            }
            this.InvokeAsync("GetSubscribersInfoBySponID", new object[] {
                        aLicKey,
                        iSponsorID}, this.GetSubscribersInfoBySponIDOperationCompleted, userState);
        }
        
        private void OnGetSubscribersInfoBySponIDOperationCompleted(object arg) {
            if ((this.GetSubscribersInfoBySponIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscribersInfoBySponIDCompleted(this, new GetSubscribersInfoBySponIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSubscribersInfoByNetworkID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubscribersInfoByNetworkID(string aLicKey, int NetRefID) {
            object[] results = this.Invoke("GetSubscribersInfoByNetworkID", new object[] {
                        aLicKey,
                        NetRefID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscribersInfoByNetworkIDAsync(string aLicKey, int NetRefID) {
            this.GetSubscribersInfoByNetworkIDAsync(aLicKey, NetRefID, null);
        }
        
        /// <remarks/>
        public void GetSubscribersInfoByNetworkIDAsync(string aLicKey, int NetRefID, object userState) {
            if ((this.GetSubscribersInfoByNetworkIDOperationCompleted == null)) {
                this.GetSubscribersInfoByNetworkIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribersInfoByNetworkIDOperationCompleted);
            }
            this.InvokeAsync("GetSubscribersInfoByNetworkID", new object[] {
                        aLicKey,
                        NetRefID}, this.GetSubscribersInfoByNetworkIDOperationCompleted, userState);
        }
        
        private void OnGetSubscribersInfoByNetworkIDOperationCompleted(object arg) {
            if ((this.GetSubscribersInfoByNetworkIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscribersInfoByNetworkIDCompleted(this, new GetSubscribersInfoByNetworkIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSubscribersInfoByAcctTypeCode", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubscribersInfoByAcctTypeCode(string aLicKey, int NetRefID, string AcctType) {
            object[] results = this.Invoke("GetSubscribersInfoByAcctTypeCode", new object[] {
                        aLicKey,
                        NetRefID,
                        AcctType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscribersInfoByAcctTypeCodeAsync(string aLicKey, int NetRefID, string AcctType) {
            this.GetSubscribersInfoByAcctTypeCodeAsync(aLicKey, NetRefID, AcctType, null);
        }
        
        /// <remarks/>
        public void GetSubscribersInfoByAcctTypeCodeAsync(string aLicKey, int NetRefID, string AcctType, object userState) {
            if ((this.GetSubscribersInfoByAcctTypeCodeOperationCompleted == null)) {
                this.GetSubscribersInfoByAcctTypeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribersInfoByAcctTypeCodeOperationCompleted);
            }
            this.InvokeAsync("GetSubscribersInfoByAcctTypeCode", new object[] {
                        aLicKey,
                        NetRefID,
                        AcctType}, this.GetSubscribersInfoByAcctTypeCodeOperationCompleted, userState);
        }
        
        private void OnGetSubscribersInfoByAcctTypeCodeOperationCompleted(object arg) {
            if ((this.GetSubscribersInfoByAcctTypeCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscribersInfoByAcctTypeCodeCompleted(this, new GetSubscribersInfoByAcctTypeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSubscribersInfoLikeAcctTypeCode", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubscribersInfoLikeAcctTypeCode(string aLicKey, int NetRefID, string AcctType) {
            object[] results = this.Invoke("GetSubscribersInfoLikeAcctTypeCode", new object[] {
                        aLicKey,
                        NetRefID,
                        AcctType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscribersInfoLikeAcctTypeCodeAsync(string aLicKey, int NetRefID, string AcctType) {
            this.GetSubscribersInfoLikeAcctTypeCodeAsync(aLicKey, NetRefID, AcctType, null);
        }
        
        /// <remarks/>
        public void GetSubscribersInfoLikeAcctTypeCodeAsync(string aLicKey, int NetRefID, string AcctType, object userState) {
            if ((this.GetSubscribersInfoLikeAcctTypeCodeOperationCompleted == null)) {
                this.GetSubscribersInfoLikeAcctTypeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribersInfoLikeAcctTypeCodeOperationCompleted);
            }
            this.InvokeAsync("GetSubscribersInfoLikeAcctTypeCode", new object[] {
                        aLicKey,
                        NetRefID,
                        AcctType}, this.GetSubscribersInfoLikeAcctTypeCodeOperationCompleted, userState);
        }
        
        private void OnGetSubscribersInfoLikeAcctTypeCodeOperationCompleted(object arg) {
            if ((this.GetSubscribersInfoLikeAcctTypeCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscribersInfoLikeAcctTypeCodeCompleted(this, new GetSubscribersInfoLikeAcctTypeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetSubscribersInfoByTypeCD", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubscribersInfoByTypeCD(string aLicKey, string TypeCD) {
            object[] results = this.Invoke("GetSubscribersInfoByTypeCD", new object[] {
                        aLicKey,
                        TypeCD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscribersInfoByTypeCDAsync(string aLicKey, string TypeCD) {
            this.GetSubscribersInfoByTypeCDAsync(aLicKey, TypeCD, null);
        }
        
        /// <remarks/>
        public void GetSubscribersInfoByTypeCDAsync(string aLicKey, string TypeCD, object userState) {
            if ((this.GetSubscribersInfoByTypeCDOperationCompleted == null)) {
                this.GetSubscribersInfoByTypeCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribersInfoByTypeCDOperationCompleted);
            }
            this.InvokeAsync("GetSubscribersInfoByTypeCD", new object[] {
                        aLicKey,
                        TypeCD}, this.GetSubscribersInfoByTypeCDOperationCompleted, userState);
        }
        
        private void OnGetSubscribersInfoByTypeCDOperationCompleted(object arg) {
            if ((this.GetSubscribersInfoByTypeCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscribersInfoByTypeCDCompleted(this, new GetSubscribersInfoByTypeCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetLinkedSubscribersInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLinkedSubscribersInfo(string aLicKey, int iSponsorID) {
            object[] results = this.Invoke("GetLinkedSubscribersInfo", new object[] {
                        aLicKey,
                        iSponsorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkedSubscribersInfoAsync(string aLicKey, int iSponsorID) {
            this.GetLinkedSubscribersInfoAsync(aLicKey, iSponsorID, null);
        }
        
        /// <remarks/>
        public void GetLinkedSubscribersInfoAsync(string aLicKey, int iSponsorID, object userState) {
            if ((this.GetLinkedSubscribersInfoOperationCompleted == null)) {
                this.GetLinkedSubscribersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkedSubscribersInfoOperationCompleted);
            }
            this.InvokeAsync("GetLinkedSubscribersInfo", new object[] {
                        aLicKey,
                        iSponsorID}, this.GetLinkedSubscribersInfoOperationCompleted, userState);
        }
        
        private void OnGetLinkedSubscribersInfoOperationCompleted(object arg) {
            if ((this.GetLinkedSubscribersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkedSubscribersInfoCompleted(this, new GetLinkedSubscribersInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddSubscriberInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddSubscriberInfo(
                    string aLicKey, 
                    string AccountTypeCode, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string City, 
                    string EmailAddress, 
                    string FirstName, 
                    string LastName, 
                    int MobileFeatures, 
                    bool OptIn, 
                    string PhoneNumber, 
                    string PhoneType, 
                    string Pin, 
                    bool PinRequired, 
                    int ProviderID, 
                    string State, 
                    string ZipCode, 
                    int SponsorID, 
                    int NetworkID, 
                    string ExternalRefID, 
                    string ProviderTypeCD, 
                    string TextMessageAddress, 
                    string Fax, 
                    string CountryCode) {
            object[] results = this.Invoke("AddSubscriberInfo", new object[] {
                        aLicKey,
                        AccountTypeCode,
                        AddressLine1,
                        AddressLine2,
                        City,
                        EmailAddress,
                        FirstName,
                        LastName,
                        MobileFeatures,
                        OptIn,
                        PhoneNumber,
                        PhoneType,
                        Pin,
                        PinRequired,
                        ProviderID,
                        State,
                        ZipCode,
                        SponsorID,
                        NetworkID,
                        ExternalRefID,
                        ProviderTypeCD,
                        TextMessageAddress,
                        Fax,
                        CountryCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddSubscriberInfoAsync(
                    string aLicKey, 
                    string AccountTypeCode, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string City, 
                    string EmailAddress, 
                    string FirstName, 
                    string LastName, 
                    int MobileFeatures, 
                    bool OptIn, 
                    string PhoneNumber, 
                    string PhoneType, 
                    string Pin, 
                    bool PinRequired, 
                    int ProviderID, 
                    string State, 
                    string ZipCode, 
                    int SponsorID, 
                    int NetworkID, 
                    string ExternalRefID, 
                    string ProviderTypeCD, 
                    string TextMessageAddress, 
                    string Fax, 
                    string CountryCode) {
            this.AddSubscriberInfoAsync(aLicKey, AccountTypeCode, AddressLine1, AddressLine2, City, EmailAddress, FirstName, LastName, MobileFeatures, OptIn, PhoneNumber, PhoneType, Pin, PinRequired, ProviderID, State, ZipCode, SponsorID, NetworkID, ExternalRefID, ProviderTypeCD, TextMessageAddress, Fax, CountryCode, null);
        }
        
        /// <remarks/>
        public void AddSubscriberInfoAsync(
                    string aLicKey, 
                    string AccountTypeCode, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string City, 
                    string EmailAddress, 
                    string FirstName, 
                    string LastName, 
                    int MobileFeatures, 
                    bool OptIn, 
                    string PhoneNumber, 
                    string PhoneType, 
                    string Pin, 
                    bool PinRequired, 
                    int ProviderID, 
                    string State, 
                    string ZipCode, 
                    int SponsorID, 
                    int NetworkID, 
                    string ExternalRefID, 
                    string ProviderTypeCD, 
                    string TextMessageAddress, 
                    string Fax, 
                    string CountryCode, 
                    object userState) {
            if ((this.AddSubscriberInfoOperationCompleted == null)) {
                this.AddSubscriberInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSubscriberInfoOperationCompleted);
            }
            this.InvokeAsync("AddSubscriberInfo", new object[] {
                        aLicKey,
                        AccountTypeCode,
                        AddressLine1,
                        AddressLine2,
                        City,
                        EmailAddress,
                        FirstName,
                        LastName,
                        MobileFeatures,
                        OptIn,
                        PhoneNumber,
                        PhoneType,
                        Pin,
                        PinRequired,
                        ProviderID,
                        State,
                        ZipCode,
                        SponsorID,
                        NetworkID,
                        ExternalRefID,
                        ProviderTypeCD,
                        TextMessageAddress,
                        Fax,
                        CountryCode}, this.AddSubscriberInfoOperationCompleted, userState);
        }
        
        private void OnAddSubscriberInfoOperationCompleted(object arg) {
            if ((this.AddSubscriberInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSubscriberInfoCompleted(this, new AddSubscriberInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/UpdateSubscriberInfo", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSubscriberInfo(
                    string aLicKey, 
                    string sMemberPhone, 
                    int iMemberID, 
                    string AccountTypeCode, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string City, 
                    string EmailAddress, 
                    string FirstName, 
                    string LastName, 
                    int MobileFeatures, 
                    bool OptIn, 
                    string PhoneNumber, 
                    string PhoneType, 
                    string Pin, 
                    bool PinRequired, 
                    int ProviderID, 
                    string State, 
                    string ZipCode, 
                    int SponsorID, 
                    int NetworkID, 
                    string ExternalRefID, 
                    string ProviderTypeCD, 
                    string TextMessageAddress, 
                    string Fax, 
                    string CountryCode) {
            object[] results = this.Invoke("UpdateSubscriberInfo", new object[] {
                        aLicKey,
                        sMemberPhone,
                        iMemberID,
                        AccountTypeCode,
                        AddressLine1,
                        AddressLine2,
                        City,
                        EmailAddress,
                        FirstName,
                        LastName,
                        MobileFeatures,
                        OptIn,
                        PhoneNumber,
                        PhoneType,
                        Pin,
                        PinRequired,
                        ProviderID,
                        State,
                        ZipCode,
                        SponsorID,
                        NetworkID,
                        ExternalRefID,
                        ProviderTypeCD,
                        TextMessageAddress,
                        Fax,
                        CountryCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSubscriberInfoAsync(
                    string aLicKey, 
                    string sMemberPhone, 
                    int iMemberID, 
                    string AccountTypeCode, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string City, 
                    string EmailAddress, 
                    string FirstName, 
                    string LastName, 
                    int MobileFeatures, 
                    bool OptIn, 
                    string PhoneNumber, 
                    string PhoneType, 
                    string Pin, 
                    bool PinRequired, 
                    int ProviderID, 
                    string State, 
                    string ZipCode, 
                    int SponsorID, 
                    int NetworkID, 
                    string ExternalRefID, 
                    string ProviderTypeCD, 
                    string TextMessageAddress, 
                    string Fax, 
                    string CountryCode) {
            this.UpdateSubscriberInfoAsync(aLicKey, sMemberPhone, iMemberID, AccountTypeCode, AddressLine1, AddressLine2, City, EmailAddress, FirstName, LastName, MobileFeatures, OptIn, PhoneNumber, PhoneType, Pin, PinRequired, ProviderID, State, ZipCode, SponsorID, NetworkID, ExternalRefID, ProviderTypeCD, TextMessageAddress, Fax, CountryCode, null);
        }
        
        /// <remarks/>
        public void UpdateSubscriberInfoAsync(
                    string aLicKey, 
                    string sMemberPhone, 
                    int iMemberID, 
                    string AccountTypeCode, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string City, 
                    string EmailAddress, 
                    string FirstName, 
                    string LastName, 
                    int MobileFeatures, 
                    bool OptIn, 
                    string PhoneNumber, 
                    string PhoneType, 
                    string Pin, 
                    bool PinRequired, 
                    int ProviderID, 
                    string State, 
                    string ZipCode, 
                    int SponsorID, 
                    int NetworkID, 
                    string ExternalRefID, 
                    string ProviderTypeCD, 
                    string TextMessageAddress, 
                    string Fax, 
                    string CountryCode, 
                    object userState) {
            if ((this.UpdateSubscriberInfoOperationCompleted == null)) {
                this.UpdateSubscriberInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSubscriberInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateSubscriberInfo", new object[] {
                        aLicKey,
                        sMemberPhone,
                        iMemberID,
                        AccountTypeCode,
                        AddressLine1,
                        AddressLine2,
                        City,
                        EmailAddress,
                        FirstName,
                        LastName,
                        MobileFeatures,
                        OptIn,
                        PhoneNumber,
                        PhoneType,
                        Pin,
                        PinRequired,
                        ProviderID,
                        State,
                        ZipCode,
                        SponsorID,
                        NetworkID,
                        ExternalRefID,
                        ProviderTypeCD,
                        TextMessageAddress,
                        Fax,
                        CountryCode}, this.UpdateSubscriberInfoOperationCompleted, userState);
        }
        
        private void OnUpdateSubscriberInfoOperationCompleted(object arg) {
            if ((this.UpdateSubscriberInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSubscriberInfoCompleted(this, new UpdateSubscriberInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/TurnScheduledCallOff", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TurnScheduledCallOff(string aLicKey, long iScheduleID) {
            object[] results = this.Invoke("TurnScheduledCallOff", new object[] {
                        aLicKey,
                        iScheduleID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TurnScheduledCallOffAsync(string aLicKey, long iScheduleID) {
            this.TurnScheduledCallOffAsync(aLicKey, iScheduleID, null);
        }
        
        /// <remarks/>
        public void TurnScheduledCallOffAsync(string aLicKey, long iScheduleID, object userState) {
            if ((this.TurnScheduledCallOffOperationCompleted == null)) {
                this.TurnScheduledCallOffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTurnScheduledCallOffOperationCompleted);
            }
            this.InvokeAsync("TurnScheduledCallOff", new object[] {
                        aLicKey,
                        iScheduleID}, this.TurnScheduledCallOffOperationCompleted, userState);
        }
        
        private void OnTurnScheduledCallOffOperationCompleted(object arg) {
            if ((this.TurnScheduledCallOffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TurnScheduledCallOffCompleted(this, new TurnScheduledCallOffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/TurnAllMemberCallsOff", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TurnAllMemberCallsOff(string aLicKey, string sPhone) {
            object[] results = this.Invoke("TurnAllMemberCallsOff", new object[] {
                        aLicKey,
                        sPhone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TurnAllMemberCallsOffAsync(string aLicKey, string sPhone) {
            this.TurnAllMemberCallsOffAsync(aLicKey, sPhone, null);
        }
        
        /// <remarks/>
        public void TurnAllMemberCallsOffAsync(string aLicKey, string sPhone, object userState) {
            if ((this.TurnAllMemberCallsOffOperationCompleted == null)) {
                this.TurnAllMemberCallsOffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTurnAllMemberCallsOffOperationCompleted);
            }
            this.InvokeAsync("TurnAllMemberCallsOff", new object[] {
                        aLicKey,
                        sPhone}, this.TurnAllMemberCallsOffOperationCompleted, userState);
        }
        
        private void OnTurnAllMemberCallsOffOperationCompleted(object arg) {
            if ((this.TurnAllMemberCallsOffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TurnAllMemberCallsOffCompleted(this, new TurnAllMemberCallsOffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/TurnAllMemberCallsOffByID", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TurnAllMemberCallsOffByID(string aLicKey, int iMemberID) {
            object[] results = this.Invoke("TurnAllMemberCallsOffByID", new object[] {
                        aLicKey,
                        iMemberID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TurnAllMemberCallsOffByIDAsync(string aLicKey, int iMemberID) {
            this.TurnAllMemberCallsOffByIDAsync(aLicKey, iMemberID, null);
        }
        
        /// <remarks/>
        public void TurnAllMemberCallsOffByIDAsync(string aLicKey, int iMemberID, object userState) {
            if ((this.TurnAllMemberCallsOffByIDOperationCompleted == null)) {
                this.TurnAllMemberCallsOffByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTurnAllMemberCallsOffByIDOperationCompleted);
            }
            this.InvokeAsync("TurnAllMemberCallsOffByID", new object[] {
                        aLicKey,
                        iMemberID}, this.TurnAllMemberCallsOffByIDOperationCompleted, userState);
        }
        
        private void OnTurnAllMemberCallsOffByIDOperationCompleted(object arg) {
            if ((this.TurnAllMemberCallsOffByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TurnAllMemberCallsOffByIDCompleted(this, new TurnAllMemberCallsOffByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddCallLog", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCallLog(string aLicKey, string sMsgType, string message, string sAgent, string sDirection, CallInfo clsCallData) {
            this.Invoke("AddCallLog", new object[] {
                        aLicKey,
                        sMsgType,
                        message,
                        sAgent,
                        sDirection,
                        clsCallData});
        }
        
        /// <remarks/>
        public void AddCallLogAsync(string aLicKey, string sMsgType, string message, string sAgent, string sDirection, CallInfo clsCallData) {
            this.AddCallLogAsync(aLicKey, sMsgType, message, sAgent, sDirection, clsCallData, null);
        }
        
        /// <remarks/>
        public void AddCallLogAsync(string aLicKey, string sMsgType, string message, string sAgent, string sDirection, CallInfo clsCallData, object userState) {
            if ((this.AddCallLogOperationCompleted == null)) {
                this.AddCallLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCallLogOperationCompleted);
            }
            this.InvokeAsync("AddCallLog", new object[] {
                        aLicKey,
                        sMsgType,
                        message,
                        sAgent,
                        sDirection,
                        clsCallData}, this.AddCallLogOperationCompleted, userState);
        }
        
        private void OnAddCallLogOperationCompleted(object arg) {
            if ((this.AddCallLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCallLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddCallQueue", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCallQueue(string aLicKey, int iMemberID, string sPhone, System.DateTime dCallDate, int iNetwork) {
            object[] results = this.Invoke("AddCallQueue", new object[] {
                        aLicKey,
                        iMemberID,
                        sPhone,
                        dCallDate,
                        iNetwork});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCallQueueAsync(string aLicKey, int iMemberID, string sPhone, System.DateTime dCallDate, int iNetwork) {
            this.AddCallQueueAsync(aLicKey, iMemberID, sPhone, dCallDate, iNetwork, null);
        }
        
        /// <remarks/>
        public void AddCallQueueAsync(string aLicKey, int iMemberID, string sPhone, System.DateTime dCallDate, int iNetwork, object userState) {
            if ((this.AddCallQueueOperationCompleted == null)) {
                this.AddCallQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCallQueueOperationCompleted);
            }
            this.InvokeAsync("AddCallQueue", new object[] {
                        aLicKey,
                        iMemberID,
                        sPhone,
                        dCallDate,
                        iNetwork}, this.AddCallQueueOperationCompleted, userState);
        }
        
        private void OnAddCallQueueOperationCompleted(object arg) {
            if ((this.AddCallQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCallQueueCompleted(this, new AddCallQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallQueue", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallQueue(string aLicKey, int iNetwork) {
            object[] results = this.Invoke("GetCallQueue", new object[] {
                        aLicKey,
                        iNetwork});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallQueueAsync(string aLicKey, int iNetwork) {
            this.GetCallQueueAsync(aLicKey, iNetwork, null);
        }
        
        /// <remarks/>
        public void GetCallQueueAsync(string aLicKey, int iNetwork, object userState) {
            if ((this.GetCallQueueOperationCompleted == null)) {
                this.GetCallQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallQueueOperationCompleted);
            }
            this.InvokeAsync("GetCallQueue", new object[] {
                        aLicKey,
                        iNetwork}, this.GetCallQueueOperationCompleted, userState);
        }
        
        private void OnGetCallQueueOperationCompleted(object arg) {
            if ((this.GetCallQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallQueueCompleted(this, new GetCallQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/GetCallQueueByPhone", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallQueueByPhone(string aLicKey, string Phone) {
            object[] results = this.Invoke("GetCallQueueByPhone", new object[] {
                        aLicKey,
                        Phone});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallQueueByPhoneAsync(string aLicKey, string Phone) {
            this.GetCallQueueByPhoneAsync(aLicKey, Phone, null);
        }
        
        /// <remarks/>
        public void GetCallQueueByPhoneAsync(string aLicKey, string Phone, object userState) {
            if ((this.GetCallQueueByPhoneOperationCompleted == null)) {
                this.GetCallQueueByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallQueueByPhoneOperationCompleted);
            }
            this.InvokeAsync("GetCallQueueByPhone", new object[] {
                        aLicKey,
                        Phone}, this.GetCallQueueByPhoneOperationCompleted, userState);
        }
        
        private void OnGetCallQueueByPhoneOperationCompleted(object arg) {
            if ((this.GetCallQueueByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallQueueByPhoneCompleted(this, new GetCallQueueByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DeleteCallQueue", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteCallQueue(string aLicKey, System.Guid ID) {
            object[] results = this.Invoke("DeleteCallQueue", new object[] {
                        aLicKey,
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCallQueueAsync(string aLicKey, System.Guid ID) {
            this.DeleteCallQueueAsync(aLicKey, ID, null);
        }
        
        /// <remarks/>
        public void DeleteCallQueueAsync(string aLicKey, System.Guid ID, object userState) {
            if ((this.DeleteCallQueueOperationCompleted == null)) {
                this.DeleteCallQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCallQueueOperationCompleted);
            }
            this.InvokeAsync("DeleteCallQueue", new object[] {
                        aLicKey,
                        ID}, this.DeleteCallQueueOperationCompleted, userState);
        }
        
        private void OnDeleteCallQueueOperationCompleted(object arg) {
            if ((this.DeleteCallQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCallQueueCompleted(this, new DeleteCallQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/DeleteCallQueueByPhone", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteCallQueueByPhone(string aLicKey, string Phone) {
            object[] results = this.Invoke("DeleteCallQueueByPhone", new object[] {
                        aLicKey,
                        Phone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCallQueueByPhoneAsync(string aLicKey, string Phone) {
            this.DeleteCallQueueByPhoneAsync(aLicKey, Phone, null);
        }
        
        /// <remarks/>
        public void DeleteCallQueueByPhoneAsync(string aLicKey, string Phone, object userState) {
            if ((this.DeleteCallQueueByPhoneOperationCompleted == null)) {
                this.DeleteCallQueueByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCallQueueByPhoneOperationCompleted);
            }
            this.InvokeAsync("DeleteCallQueueByPhone", new object[] {
                        aLicKey,
                        Phone}, this.DeleteCallQueueByPhoneOperationCompleted, userState);
        }
        
        private void OnDeleteCallQueueByPhoneOperationCompleted(object arg) {
            if ((this.DeleteCallQueueByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCallQueueByPhoneCompleted(this, new DeleteCallQueueByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddCallLogBCN", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCallLogBCN(string aLicKey, BusinessQueryParameters @params) {
            object[] results = this.Invoke("AddCallLogBCN", new object[] {
                        aLicKey,
                        @params});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCallLogBCNAsync(string aLicKey, BusinessQueryParameters @params) {
            this.AddCallLogBCNAsync(aLicKey, @params, null);
        }
        
        /// <remarks/>
        public void AddCallLogBCNAsync(string aLicKey, BusinessQueryParameters @params, object userState) {
            if ((this.AddCallLogBCNOperationCompleted == null)) {
                this.AddCallLogBCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCallLogBCNOperationCompleted);
            }
            this.InvokeAsync("AddCallLogBCN", new object[] {
                        aLicKey,
                        @params}, this.AddCallLogBCNOperationCompleted, userState);
        }
        
        private void OnAddCallLogBCNOperationCompleted(object arg) {
            if ((this.AddCallLogBCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCallLogBCNCompleted(this, new AddCallLogBCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddFinalCallLogBCN", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddFinalCallLogBCN(string aLicKey, bool bSentAlert, BusinessQueryParameters @params) {
            this.Invoke("AddFinalCallLogBCN", new object[] {
                        aLicKey,
                        bSentAlert,
                        @params});
        }
        
        /// <remarks/>
        public void AddFinalCallLogBCNAsync(string aLicKey, bool bSentAlert, BusinessQueryParameters @params) {
            this.AddFinalCallLogBCNAsync(aLicKey, bSentAlert, @params, null);
        }
        
        /// <remarks/>
        public void AddFinalCallLogBCNAsync(string aLicKey, bool bSentAlert, BusinessQueryParameters @params, object userState) {
            if ((this.AddFinalCallLogBCNOperationCompleted == null)) {
                this.AddFinalCallLogBCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFinalCallLogBCNOperationCompleted);
            }
            this.InvokeAsync("AddFinalCallLogBCN", new object[] {
                        aLicKey,
                        bSentAlert,
                        @params}, this.AddFinalCallLogBCNOperationCompleted, userState);
        }
        
        private void OnAddFinalCallLogBCNOperationCompleted(object arg) {
            if ((this.AddFinalCallLogBCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFinalCallLogBCNCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddNewNetwork", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewNetwork(string aLicKey, int iNetworkID) {
            object[] results = this.Invoke("AddNewNetwork", new object[] {
                        aLicKey,
                        iNetworkID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewNetworkAsync(string aLicKey, int iNetworkID) {
            this.AddNewNetworkAsync(aLicKey, iNetworkID, null);
        }
        
        /// <remarks/>
        public void AddNewNetworkAsync(string aLicKey, int iNetworkID, object userState) {
            if ((this.AddNewNetworkOperationCompleted == null)) {
                this.AddNewNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewNetworkOperationCompleted);
            }
            this.InvokeAsync("AddNewNetwork", new object[] {
                        aLicKey,
                        iNetworkID}, this.AddNewNetworkOperationCompleted, userState);
        }
        
        private void OnAddNewNetworkOperationCompleted(object arg) {
            if ((this.AddNewNetworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewNetworkCompleted(this, new AddNewNetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/AddNewLogin", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewLogin(string aLicKey, int iNetworkID, int iMemberID, string sUserID, string sPassword, string sPhoneNumber, string sLicenseFuncName) {
            object[] results = this.Invoke("AddNewLogin", new object[] {
                        aLicKey,
                        iNetworkID,
                        iMemberID,
                        sUserID,
                        sPassword,
                        sPhoneNumber,
                        sLicenseFuncName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewLoginAsync(string aLicKey, int iNetworkID, int iMemberID, string sUserID, string sPassword, string sPhoneNumber, string sLicenseFuncName) {
            this.AddNewLoginAsync(aLicKey, iNetworkID, iMemberID, sUserID, sPassword, sPhoneNumber, sLicenseFuncName, null);
        }
        
        /// <remarks/>
        public void AddNewLoginAsync(string aLicKey, int iNetworkID, int iMemberID, string sUserID, string sPassword, string sPhoneNumber, string sLicenseFuncName, object userState) {
            if ((this.AddNewLoginOperationCompleted == null)) {
                this.AddNewLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewLoginOperationCompleted);
            }
            this.InvokeAsync("AddNewLogin", new object[] {
                        aLicKey,
                        iNetworkID,
                        iMemberID,
                        sUserID,
                        sPassword,
                        sPhoneNumber,
                        sLicenseFuncName}, this.AddNewLoginOperationCompleted, userState);
        }
        
        private void OnAddNewLoginOperationCompleted(object arg) {
            if ((this.AddNewLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewLoginCompleted(this, new AddNewLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CTechWS.com/CTechWS/ResetLogin", RequestNamespace="http://CTechWS.com/CTechWS", ResponseNamespace="http://CTechWS.com/CTechWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ResetLogin(string aLicKey, int iNetworkID, int iMemberID, string sUserID, string sPhoneNumber, string sAccountTypeName) {
            object[] results = this.Invoke("ResetLogin", new object[] {
                        aLicKey,
                        iNetworkID,
                        iMemberID,
                        sUserID,
                        sPhoneNumber,
                        sAccountTypeName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ResetLoginAsync(string aLicKey, int iNetworkID, int iMemberID, string sUserID, string sPhoneNumber, string sAccountTypeName) {
            this.ResetLoginAsync(aLicKey, iNetworkID, iMemberID, sUserID, sPhoneNumber, sAccountTypeName, null);
        }
        
        /// <remarks/>
        public void ResetLoginAsync(string aLicKey, int iNetworkID, int iMemberID, string sUserID, string sPhoneNumber, string sAccountTypeName, object userState) {
            if ((this.ResetLoginOperationCompleted == null)) {
                this.ResetLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetLoginOperationCompleted);
            }
            this.InvokeAsync("ResetLogin", new object[] {
                        aLicKey,
                        iNetworkID,
                        iMemberID,
                        sUserID,
                        sPhoneNumber,
                        sAccountTypeName}, this.ResetLoginOperationCompleted, userState);
        }
        
        private void OnResetLoginOperationCompleted(object arg) {
            if ((this.ResetLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetLoginCompleted(this, new ResetLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRptScheduledCalls")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    public partial class dsRptScheduledCalls : global::System.Data.DataSet {
        
        private rpt_CallsScheduledDataTable tablerpt_CallsScheduled;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsRptScheduledCalls() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsRptScheduledCalls(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["rpt_CallsScheduled"] != null)) {
                    base.Tables.Add(new rpt_CallsScheduledDataTable(ds.Tables["rpt_CallsScheduled"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rpt_CallsScheduledDataTable rpt_CallsScheduled {
            get {
                return this.tablerpt_CallsScheduled;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsRptScheduledCalls cln = ((dsRptScheduledCalls)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["rpt_CallsScheduled"] != null)) {
                    base.Tables.Add(new rpt_CallsScheduledDataTable(ds.Tables["rpt_CallsScheduled"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablerpt_CallsScheduled = ((rpt_CallsScheduledDataTable)(base.Tables["rpt_CallsScheduled"]));
            if ((initTable == true)) {
                if ((this.tablerpt_CallsScheduled != null)) {
                    this.tablerpt_CallsScheduled.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsRptScheduledCalls";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRptScheduledCalls.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablerpt_CallsScheduled = new rpt_CallsScheduledDataTable();
            base.Tables.Add(this.tablerpt_CallsScheduled);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializerpt_CallsScheduled() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRptScheduledCalls ds = new dsRptScheduledCalls();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void rpt_CallsScheduledRowChangeEventHandler(object sender, rpt_CallsScheduledRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rpt_CallsScheduledDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAccountTypeCode;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnCallFreq;
            
            private global::System.Data.DataColumn columnCallTime;
            
            private global::System.Data.DataColumn columnCallMonth;
            
            private global::System.Data.DataColumn columnCallDay;
            
            private global::System.Data.DataColumn columnCallYear;
            
            private global::System.Data.DataColumn columnMaxRecalls;
            
            private global::System.Data.DataColumn columnRecallsMade;
            
            private global::System.Data.DataColumn columnSiteID;
            
            private global::System.Data.DataColumn columnContactTypeCode;
            
            private global::System.Data.DataColumn columnMemberID;
            
            private global::System.Data.DataColumn columnBcsTestCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallsScheduledDataTable() {
                this.TableName = "rpt_CallsScheduled";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallsScheduledDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected rpt_CallsScheduledDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountTypeCodeColumn {
                get {
                    return this.columnAccountTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallFreqColumn {
                get {
                    return this.columnCallFreq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallTimeColumn {
                get {
                    return this.columnCallTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallMonthColumn {
                get {
                    return this.columnCallMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallDayColumn {
                get {
                    return this.columnCallDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallYearColumn {
                get {
                    return this.columnCallYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxRecallsColumn {
                get {
                    return this.columnMaxRecalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecallsMadeColumn {
                get {
                    return this.columnRecallsMade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SiteIDColumn {
                get {
                    return this.columnSiteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactTypeCodeColumn {
                get {
                    return this.columnContactTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemberIDColumn {
                get {
                    return this.columnMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BcsTestCodeColumn {
                get {
                    return this.columnBcsTestCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallsScheduledRow this[int index] {
                get {
                    return ((rpt_CallsScheduledRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallsScheduledRowChangeEventHandler rpt_CallsScheduledRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallsScheduledRowChangeEventHandler rpt_CallsScheduledRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallsScheduledRowChangeEventHandler rpt_CallsScheduledRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallsScheduledRowChangeEventHandler rpt_CallsScheduledRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addrpt_CallsScheduledRow(rpt_CallsScheduledRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallsScheduledRow Addrpt_CallsScheduledRow(string AccountTypeCode, string PhoneNumber, string FirstName, string LastName, string CallFreq, int CallTime, int CallMonth, int CallDay, int CallYear, int MaxRecalls, int RecallsMade, string SiteID, int ContactTypeCode, int MemberID, int BcsTestCode) {
                rpt_CallsScheduledRow rowrpt_CallsScheduledRow = ((rpt_CallsScheduledRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountTypeCode,
                        PhoneNumber,
                        FirstName,
                        LastName,
                        CallFreq,
                        CallTime,
                        CallMonth,
                        CallDay,
                        CallYear,
                        MaxRecalls,
                        RecallsMade,
                        SiteID,
                        ContactTypeCode,
                        MemberID,
                        BcsTestCode};
                rowrpt_CallsScheduledRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrpt_CallsScheduledRow);
                return rowrpt_CallsScheduledRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rpt_CallsScheduledDataTable cln = ((rpt_CallsScheduledDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rpt_CallsScheduledDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAccountTypeCode = base.Columns["AccountTypeCode"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnCallFreq = base.Columns["CallFreq"];
                this.columnCallTime = base.Columns["CallTime"];
                this.columnCallMonth = base.Columns["CallMonth"];
                this.columnCallDay = base.Columns["CallDay"];
                this.columnCallYear = base.Columns["CallYear"];
                this.columnMaxRecalls = base.Columns["MaxRecalls"];
                this.columnRecallsMade = base.Columns["RecallsMade"];
                this.columnSiteID = base.Columns["SiteID"];
                this.columnContactTypeCode = base.Columns["ContactTypeCode"];
                this.columnMemberID = base.Columns["MemberID"];
                this.columnBcsTestCode = base.Columns["BcsTestCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAccountTypeCode = new global::System.Data.DataColumn("AccountTypeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountTypeCode);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnCallFreq = new global::System.Data.DataColumn("CallFreq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallFreq);
                this.columnCallTime = new global::System.Data.DataColumn("CallTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallTime);
                this.columnCallMonth = new global::System.Data.DataColumn("CallMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallMonth);
                this.columnCallDay = new global::System.Data.DataColumn("CallDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallDay);
                this.columnCallYear = new global::System.Data.DataColumn("CallYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallYear);
                this.columnMaxRecalls = new global::System.Data.DataColumn("MaxRecalls", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxRecalls);
                this.columnRecallsMade = new global::System.Data.DataColumn("RecallsMade", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecallsMade);
                this.columnSiteID = new global::System.Data.DataColumn("SiteID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteID);
                this.columnContactTypeCode = new global::System.Data.DataColumn("ContactTypeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactTypeCode);
                this.columnMemberID = new global::System.Data.DataColumn("MemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberID);
                this.columnBcsTestCode = new global::System.Data.DataColumn("BcsTestCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBcsTestCode);
                this.columnAccountTypeCode.MaxLength = 10;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 10;
                this.columnFirstName.MaxLength = 22;
                this.columnLastName.MaxLength = 22;
                this.columnCallFreq.AllowDBNull = false;
                this.columnCallFreq.MaxLength = 2;
                this.columnSiteID.MaxLength = 10;
                this.columnMemberID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallsScheduledRow Newrpt_CallsScheduledRow() {
                return ((rpt_CallsScheduledRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rpt_CallsScheduledRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rpt_CallsScheduledRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rpt_CallsScheduledRowChanged != null)) {
                    this.rpt_CallsScheduledRowChanged(this, new rpt_CallsScheduledRowChangeEvent(((rpt_CallsScheduledRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rpt_CallsScheduledRowChanging != null)) {
                    this.rpt_CallsScheduledRowChanging(this, new rpt_CallsScheduledRowChangeEvent(((rpt_CallsScheduledRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rpt_CallsScheduledRowDeleted != null)) {
                    this.rpt_CallsScheduledRowDeleted(this, new rpt_CallsScheduledRowChangeEvent(((rpt_CallsScheduledRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rpt_CallsScheduledRowDeleting != null)) {
                    this.rpt_CallsScheduledRowDeleting(this, new rpt_CallsScheduledRowChangeEvent(((rpt_CallsScheduledRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removerpt_CallsScheduledRow(rpt_CallsScheduledRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRptScheduledCalls ds = new dsRptScheduledCalls();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rpt_CallsScheduledDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rpt_CallsScheduledRow : global::System.Data.DataRow {
            
            private rpt_CallsScheduledDataTable tablerpt_CallsScheduled;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallsScheduledRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerpt_CallsScheduled = ((rpt_CallsScheduledDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountTypeCode {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallsScheduled.AccountTypeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountTypeCode\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.AccountTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tablerpt_CallsScheduled.PhoneNumberColumn]));
                }
                set {
                    this[this.tablerpt_CallsScheduled.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallsScheduled.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallsScheduled.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CallFreq {
                get {
                    return ((string)(this[this.tablerpt_CallsScheduled.CallFreqColumn]));
                }
                set {
                    this[this.tablerpt_CallsScheduled.CallFreqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CallTime {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallsScheduled.CallTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallTime\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.CallTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CallMonth {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallsScheduled.CallMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallMonth\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.CallMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CallDay {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallsScheduled.CallDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallDay\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.CallDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CallYear {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallsScheduled.CallYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallYear\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.CallYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxRecalls {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallsScheduled.MaxRecallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxRecalls\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.MaxRecallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RecallsMade {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallsScheduled.RecallsMadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecallsMade\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.RecallsMadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SiteID {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallsScheduled.SiteIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteID\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.SiteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ContactTypeCode {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallsScheduled.ContactTypeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactTypeCode\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.ContactTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MemberID {
                get {
                    return ((int)(this[this.tablerpt_CallsScheduled.MemberIDColumn]));
                }
                set {
                    this[this.tablerpt_CallsScheduled.MemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BcsTestCode {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallsScheduled.BcsTestCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BcsTestCode\' in table \'rpt_CallsScheduled\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallsScheduled.BcsTestCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountTypeCodeNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.AccountTypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountTypeCodeNull() {
                this[this.tablerpt_CallsScheduled.AccountTypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirstNameNull() {
                this[this.tablerpt_CallsScheduled.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastNameNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastNameNull() {
                this[this.tablerpt_CallsScheduled.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallTimeNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.CallTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallTimeNull() {
                this[this.tablerpt_CallsScheduled.CallTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallMonthNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.CallMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallMonthNull() {
                this[this.tablerpt_CallsScheduled.CallMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallDayNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.CallDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallDayNull() {
                this[this.tablerpt_CallsScheduled.CallDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallYearNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.CallYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallYearNull() {
                this[this.tablerpt_CallsScheduled.CallYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxRecallsNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.MaxRecallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxRecallsNull() {
                this[this.tablerpt_CallsScheduled.MaxRecallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecallsMadeNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.RecallsMadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecallsMadeNull() {
                this[this.tablerpt_CallsScheduled.RecallsMadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSiteIDNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.SiteIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSiteIDNull() {
                this[this.tablerpt_CallsScheduled.SiteIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactTypeCodeNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.ContactTypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactTypeCodeNull() {
                this[this.tablerpt_CallsScheduled.ContactTypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBcsTestCodeNull() {
                return this.IsNull(this.tablerpt_CallsScheduled.BcsTestCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBcsTestCodeNull() {
                this[this.tablerpt_CallsScheduled.BcsTestCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class rpt_CallsScheduledRowChangeEvent : global::System.EventArgs {
            
            private rpt_CallsScheduledRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallsScheduledRowChangeEvent(rpt_CallsScheduledRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallsScheduledRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRptMemberCalls")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    public partial class dsRptMemberCalls : global::System.Data.DataSet {
        
        private rpt_BCSMemberCallSummaryDataTable tablerpt_BCSMemberCallSummary;
        
        private Table1DataTable tableTable1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsRptMemberCalls() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsRptMemberCalls(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["rpt_BCSMemberCallSummary"] != null)) {
                    base.Tables.Add(new rpt_BCSMemberCallSummaryDataTable(ds.Tables["rpt_BCSMemberCallSummary"]));
                }
                if ((ds.Tables["Table1"] != null)) {
                    base.Tables.Add(new Table1DataTable(ds.Tables["Table1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rpt_BCSMemberCallSummaryDataTable rpt_BCSMemberCallSummary {
            get {
                return this.tablerpt_BCSMemberCallSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table1DataTable Table1 {
            get {
                return this.tableTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsRptMemberCalls cln = ((dsRptMemberCalls)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["rpt_BCSMemberCallSummary"] != null)) {
                    base.Tables.Add(new rpt_BCSMemberCallSummaryDataTable(ds.Tables["rpt_BCSMemberCallSummary"]));
                }
                if ((ds.Tables["Table1"] != null)) {
                    base.Tables.Add(new Table1DataTable(ds.Tables["Table1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablerpt_BCSMemberCallSummary = ((rpt_BCSMemberCallSummaryDataTable)(base.Tables["rpt_BCSMemberCallSummary"]));
            if ((initTable == true)) {
                if ((this.tablerpt_BCSMemberCallSummary != null)) {
                    this.tablerpt_BCSMemberCallSummary.InitVars();
                }
            }
            this.tableTable1 = ((Table1DataTable)(base.Tables["Table1"]));
            if ((initTable == true)) {
                if ((this.tableTable1 != null)) {
                    this.tableTable1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsRptMemberCalls";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRptMemberCalls.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablerpt_BCSMemberCallSummary = new rpt_BCSMemberCallSummaryDataTable();
            base.Tables.Add(this.tablerpt_BCSMemberCallSummary);
            this.tableTable1 = new Table1DataTable();
            base.Tables.Add(this.tableTable1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializerpt_BCSMemberCallSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRptMemberCalls ds = new dsRptMemberCalls();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void rpt_BCSMemberCallSummaryRowChangeEventHandler(object sender, rpt_BCSMemberCallSummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Table1RowChangeEventHandler(object sender, Table1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rpt_BCSMemberCallSummaryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDay;
            
            private global::System.Data.DataColumn columnCallType;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnMessage;
            
            private global::System.Data.DataColumn columnScheduleID;
            
            private global::System.Data.DataColumn columnTotal_Messages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_BCSMemberCallSummaryDataTable() {
                this.TableName = "rpt_BCSMemberCallSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_BCSMemberCallSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected rpt_BCSMemberCallSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DayColumn {
                get {
                    return this.columnDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallTypeColumn {
                get {
                    return this.columnCallType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScheduleIDColumn {
                get {
                    return this.columnScheduleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_MessagesColumn {
                get {
                    return this.columnTotal_Messages;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_BCSMemberCallSummaryRow this[int index] {
                get {
                    return ((rpt_BCSMemberCallSummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_BCSMemberCallSummaryRowChangeEventHandler rpt_BCSMemberCallSummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_BCSMemberCallSummaryRowChangeEventHandler rpt_BCSMemberCallSummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_BCSMemberCallSummaryRowChangeEventHandler rpt_BCSMemberCallSummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_BCSMemberCallSummaryRowChangeEventHandler rpt_BCSMemberCallSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addrpt_BCSMemberCallSummaryRow(rpt_BCSMemberCallSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_BCSMemberCallSummaryRow Addrpt_BCSMemberCallSummaryRow(int Day, string CallType, string PhoneNumber, string Message, int ScheduleID, int Total_Messages) {
                rpt_BCSMemberCallSummaryRow rowrpt_BCSMemberCallSummaryRow = ((rpt_BCSMemberCallSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Day,
                        CallType,
                        PhoneNumber,
                        Message,
                        ScheduleID,
                        Total_Messages};
                rowrpt_BCSMemberCallSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrpt_BCSMemberCallSummaryRow);
                return rowrpt_BCSMemberCallSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rpt_BCSMemberCallSummaryDataTable cln = ((rpt_BCSMemberCallSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rpt_BCSMemberCallSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDay = base.Columns["Day"];
                this.columnCallType = base.Columns["CallType"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnMessage = base.Columns["Message"];
                this.columnScheduleID = base.Columns["ScheduleID"];
                this.columnTotal_Messages = base.Columns["Total Messages"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDay = new global::System.Data.DataColumn("Day", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay);
                this.columnCallType = new global::System.Data.DataColumn("CallType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallType);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnMessage = new global::System.Data.DataColumn("Message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage);
                this.columnScheduleID = new global::System.Data.DataColumn("ScheduleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleID);
                this.columnTotal_Messages = new global::System.Data.DataColumn("Total Messages", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Messages);
                this.columnDay.ReadOnly = true;
                this.columnCallType.MaxLength = 50;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 10;
                this.columnMessage.MaxLength = 800;
                this.columnTotal_Messages.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_BCSMemberCallSummaryRow Newrpt_BCSMemberCallSummaryRow() {
                return ((rpt_BCSMemberCallSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rpt_BCSMemberCallSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rpt_BCSMemberCallSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rpt_BCSMemberCallSummaryRowChanged != null)) {
                    this.rpt_BCSMemberCallSummaryRowChanged(this, new rpt_BCSMemberCallSummaryRowChangeEvent(((rpt_BCSMemberCallSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rpt_BCSMemberCallSummaryRowChanging != null)) {
                    this.rpt_BCSMemberCallSummaryRowChanging(this, new rpt_BCSMemberCallSummaryRowChangeEvent(((rpt_BCSMemberCallSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rpt_BCSMemberCallSummaryRowDeleted != null)) {
                    this.rpt_BCSMemberCallSummaryRowDeleted(this, new rpt_BCSMemberCallSummaryRowChangeEvent(((rpt_BCSMemberCallSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rpt_BCSMemberCallSummaryRowDeleting != null)) {
                    this.rpt_BCSMemberCallSummaryRowDeleting(this, new rpt_BCSMemberCallSummaryRowChangeEvent(((rpt_BCSMemberCallSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removerpt_BCSMemberCallSummaryRow(rpt_BCSMemberCallSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRptMemberCalls ds = new dsRptMemberCalls();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rpt_BCSMemberCallSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnCallType;
            
            private global::System.Data.DataColumn columnScheduleID;
            
            private global::System.Data.DataColumn columnMemberID;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnMembers_Called;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table1DataTable() {
                this.TableName = "Table1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Table1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallTypeColumn {
                get {
                    return this.columnCallType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScheduleIDColumn {
                get {
                    return this.columnScheduleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemberIDColumn {
                get {
                    return this.columnMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Members_CalledColumn {
                get {
                    return this.columnMembers_Called;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table1Row this[int index] {
                get {
                    return ((Table1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table1RowChangeEventHandler Table1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table1RowChangeEventHandler Table1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table1RowChangeEventHandler Table1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Table1RowChangeEventHandler Table1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTable1Row(Table1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table1Row AddTable1Row(string PhoneNumber, string CallType, int ScheduleID, int MemberID, string FirstName, string LastName, int Members_Called) {
                Table1Row rowTable1Row = ((Table1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PhoneNumber,
                        CallType,
                        ScheduleID,
                        MemberID,
                        FirstName,
                        LastName,
                        Members_Called};
                rowTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable1Row);
                return rowTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table1DataTable cln = ((Table1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnCallType = base.Columns["CallType"];
                this.columnScheduleID = base.Columns["ScheduleID"];
                this.columnMemberID = base.Columns["MemberID"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnMembers_Called = base.Columns["Members Called"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnCallType = new global::System.Data.DataColumn("CallType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallType);
                this.columnScheduleID = new global::System.Data.DataColumn("ScheduleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleID);
                this.columnMemberID = new global::System.Data.DataColumn("MemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberID);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnMembers_Called = new global::System.Data.DataColumn("Members Called", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMembers_Called);
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 10;
                this.columnCallType.MaxLength = 50;
                this.columnFirstName.MaxLength = 22;
                this.columnLastName.MaxLength = 22;
                this.columnMembers_Called.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table1Row NewTable1Row() {
                return ((Table1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table1RowChanged != null)) {
                    this.Table1RowChanged(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table1RowChanging != null)) {
                    this.Table1RowChanging(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table1RowDeleted != null)) {
                    this.Table1RowDeleted(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table1RowDeleting != null)) {
                    this.Table1RowDeleting(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTable1Row(Table1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRptMemberCalls ds = new dsRptMemberCalls();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rpt_BCSMemberCallSummaryRow : global::System.Data.DataRow {
            
            private rpt_BCSMemberCallSummaryDataTable tablerpt_BCSMemberCallSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_BCSMemberCallSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerpt_BCSMemberCallSummary = ((rpt_BCSMemberCallSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Day {
                get {
                    try {
                        return ((int)(this[this.tablerpt_BCSMemberCallSummary.DayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day\' in table \'rpt_BCSMemberCallSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_BCSMemberCallSummary.DayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CallType {
                get {
                    try {
                        return ((string)(this[this.tablerpt_BCSMemberCallSummary.CallTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallType\' in table \'rpt_BCSMemberCallSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_BCSMemberCallSummary.CallTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tablerpt_BCSMemberCallSummary.PhoneNumberColumn]));
                }
                set {
                    this[this.tablerpt_BCSMemberCallSummary.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Message {
                get {
                    try {
                        return ((string)(this[this.tablerpt_BCSMemberCallSummary.MessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Message\' in table \'rpt_BCSMemberCallSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_BCSMemberCallSummary.MessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ScheduleID {
                get {
                    try {
                        return ((int)(this[this.tablerpt_BCSMemberCallSummary.ScheduleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduleID\' in table \'rpt_BCSMemberCallSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_BCSMemberCallSummary.ScheduleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total_Messages {
                get {
                    try {
                        return ((int)(this[this.tablerpt_BCSMemberCallSummary.Total_MessagesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total Messages\' in table \'rpt_BCSMemberCallSummary\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerpt_BCSMemberCallSummary.Total_MessagesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDayNull() {
                return this.IsNull(this.tablerpt_BCSMemberCallSummary.DayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDayNull() {
                this[this.tablerpt_BCSMemberCallSummary.DayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallTypeNull() {
                return this.IsNull(this.tablerpt_BCSMemberCallSummary.CallTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallTypeNull() {
                this[this.tablerpt_BCSMemberCallSummary.CallTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMessageNull() {
                return this.IsNull(this.tablerpt_BCSMemberCallSummary.MessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMessageNull() {
                this[this.tablerpt_BCSMemberCallSummary.MessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScheduleIDNull() {
                return this.IsNull(this.tablerpt_BCSMemberCallSummary.ScheduleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScheduleIDNull() {
                this[this.tablerpt_BCSMemberCallSummary.ScheduleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_MessagesNull() {
                return this.IsNull(this.tablerpt_BCSMemberCallSummary.Total_MessagesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_MessagesNull() {
                this[this.tablerpt_BCSMemberCallSummary.Total_MessagesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table1Row : global::System.Data.DataRow {
            
            private Table1DataTable tableTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Table1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable1 = ((Table1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tableTable1.PhoneNumberColumn]));
                }
                set {
                    this[this.tableTable1.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CallType {
                get {
                    try {
                        return ((string)(this[this.tableTable1.CallTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallType\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.CallTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ScheduleID {
                get {
                    try {
                        return ((int)(this[this.tableTable1.ScheduleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduleID\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.ScheduleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MemberID {
                get {
                    try {
                        return ((int)(this[this.tableTable1.MemberIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberID\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.MemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableTable1.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tableTable1.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Members_Called {
                get {
                    try {
                        return ((int)(this[this.tableTable1.Members_CalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Members Called\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.Members_CalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallTypeNull() {
                return this.IsNull(this.tableTable1.CallTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallTypeNull() {
                this[this.tableTable1.CallTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScheduleIDNull() {
                return this.IsNull(this.tableTable1.ScheduleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScheduleIDNull() {
                this[this.tableTable1.ScheduleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemberIDNull() {
                return this.IsNull(this.tableTable1.MemberIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemberIDNull() {
                this[this.tableTable1.MemberIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableTable1.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirstNameNull() {
                this[this.tableTable1.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableTable1.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastNameNull() {
                this[this.tableTable1.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMembers_CalledNull() {
                return this.IsNull(this.tableTable1.Members_CalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMembers_CalledNull() {
                this[this.tableTable1.Members_CalledColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class rpt_BCSMemberCallSummaryRowChangeEvent : global::System.EventArgs {
            
            private rpt_BCSMemberCallSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_BCSMemberCallSummaryRowChangeEvent(rpt_BCSMemberCallSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_BCSMemberCallSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Table1RowChangeEvent : global::System.EventArgs {
            
            private Table1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table1RowChangeEvent(Table1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Table1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRptCallLogCounts")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    public partial class dsRptCallLogCounts : global::System.Data.DataSet {
        
        private rpt_CallerLogCountsDataTable tablerpt_CallerLogCounts;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsRptCallLogCounts() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsRptCallLogCounts(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["rpt_CallerLogCounts"] != null)) {
                    base.Tables.Add(new rpt_CallerLogCountsDataTable(ds.Tables["rpt_CallerLogCounts"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rpt_CallerLogCountsDataTable rpt_CallerLogCounts {
            get {
                return this.tablerpt_CallerLogCounts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsRptCallLogCounts cln = ((dsRptCallLogCounts)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["rpt_CallerLogCounts"] != null)) {
                    base.Tables.Add(new rpt_CallerLogCountsDataTable(ds.Tables["rpt_CallerLogCounts"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablerpt_CallerLogCounts = ((rpt_CallerLogCountsDataTable)(base.Tables["rpt_CallerLogCounts"]));
            if ((initTable == true)) {
                if ((this.tablerpt_CallerLogCounts != null)) {
                    this.tablerpt_CallerLogCounts.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsRptCallLogCounts";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRptCallLogCounts.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablerpt_CallerLogCounts = new rpt_CallerLogCountsDataTable();
            base.Tables.Add(this.tablerpt_CallerLogCounts);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializerpt_CallerLogCounts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRptCallLogCounts ds = new dsRptCallLogCounts();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void rpt_CallerLogCountsRowChangeEventHandler(object sender, rpt_CallerLogCountsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rpt_CallerLogCountsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCall_Count;
            
            private global::System.Data.DataColumn columnDateCalled;
            
            private global::System.Data.DataColumn columnTimeCalled;
            
            private global::System.Data.DataColumn columnCallType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsDataTable() {
                this.TableName = "rpt_CallerLogCounts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallerLogCountsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected rpt_CallerLogCountsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Call_CountColumn {
                get {
                    return this.columnCall_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCalledColumn {
                get {
                    return this.columnDateCalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeCalledColumn {
                get {
                    return this.columnTimeCalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallTypeColumn {
                get {
                    return this.columnCallType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsRow this[int index] {
                get {
                    return ((rpt_CallerLogCountsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsRowChangeEventHandler rpt_CallerLogCountsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsRowChangeEventHandler rpt_CallerLogCountsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsRowChangeEventHandler rpt_CallerLogCountsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsRowChangeEventHandler rpt_CallerLogCountsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addrpt_CallerLogCountsRow(rpt_CallerLogCountsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsRow Addrpt_CallerLogCountsRow(int Call_Count, string DateCalled, string TimeCalled, string CallType) {
                rpt_CallerLogCountsRow rowrpt_CallerLogCountsRow = ((rpt_CallerLogCountsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Call_Count,
                        DateCalled,
                        TimeCalled,
                        CallType};
                rowrpt_CallerLogCountsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrpt_CallerLogCountsRow);
                return rowrpt_CallerLogCountsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rpt_CallerLogCountsDataTable cln = ((rpt_CallerLogCountsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rpt_CallerLogCountsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCall_Count = base.Columns["Call_Count"];
                this.columnDateCalled = base.Columns["DateCalled"];
                this.columnTimeCalled = base.Columns["TimeCalled"];
                this.columnCallType = base.Columns["CallType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCall_Count = new global::System.Data.DataColumn("Call_Count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Count);
                this.columnDateCalled = new global::System.Data.DataColumn("DateCalled", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCalled);
                this.columnTimeCalled = new global::System.Data.DataColumn("TimeCalled", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeCalled);
                this.columnCallType = new global::System.Data.DataColumn("CallType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallType);
                this.columnCall_Count.ReadOnly = true;
                this.columnDateCalled.ReadOnly = true;
                this.columnDateCalled.MaxLength = 12;
                this.columnTimeCalled.ReadOnly = true;
                this.columnTimeCalled.MaxLength = 8;
                this.columnCallType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsRow Newrpt_CallerLogCountsRow() {
                return ((rpt_CallerLogCountsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rpt_CallerLogCountsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rpt_CallerLogCountsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rpt_CallerLogCountsRowChanged != null)) {
                    this.rpt_CallerLogCountsRowChanged(this, new rpt_CallerLogCountsRowChangeEvent(((rpt_CallerLogCountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rpt_CallerLogCountsRowChanging != null)) {
                    this.rpt_CallerLogCountsRowChanging(this, new rpt_CallerLogCountsRowChangeEvent(((rpt_CallerLogCountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rpt_CallerLogCountsRowDeleted != null)) {
                    this.rpt_CallerLogCountsRowDeleted(this, new rpt_CallerLogCountsRowChangeEvent(((rpt_CallerLogCountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rpt_CallerLogCountsRowDeleting != null)) {
                    this.rpt_CallerLogCountsRowDeleting(this, new rpt_CallerLogCountsRowChangeEvent(((rpt_CallerLogCountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removerpt_CallerLogCountsRow(rpt_CallerLogCountsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRptCallLogCounts ds = new dsRptCallLogCounts();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rpt_CallerLogCountsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rpt_CallerLogCountsRow : global::System.Data.DataRow {
            
            private rpt_CallerLogCountsDataTable tablerpt_CallerLogCounts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallerLogCountsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerpt_CallerLogCounts = ((rpt_CallerLogCountsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Call_Count {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallerLogCounts.Call_CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Count\' in table \'rpt_CallerLogCounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCounts.Call_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DateCalled {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogCounts.DateCalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCalled\' in table \'rpt_CallerLogCounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCounts.DateCalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TimeCalled {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogCounts.TimeCalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeCalled\' in table \'rpt_CallerLogCounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCounts.TimeCalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CallType {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogCounts.CallTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallType\' in table \'rpt_CallerLogCounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCounts.CallTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCall_CountNull() {
                return this.IsNull(this.tablerpt_CallerLogCounts.Call_CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCall_CountNull() {
                this[this.tablerpt_CallerLogCounts.Call_CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCalledNull() {
                return this.IsNull(this.tablerpt_CallerLogCounts.DateCalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCalledNull() {
                this[this.tablerpt_CallerLogCounts.DateCalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeCalledNull() {
                return this.IsNull(this.tablerpt_CallerLogCounts.TimeCalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeCalledNull() {
                this[this.tablerpt_CallerLogCounts.TimeCalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallTypeNull() {
                return this.IsNull(this.tablerpt_CallerLogCounts.CallTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallTypeNull() {
                this[this.tablerpt_CallerLogCounts.CallTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class rpt_CallerLogCountsRowChangeEvent : global::System.EventArgs {
            
            private rpt_CallerLogCountsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsRowChangeEvent(rpt_CallerLogCountsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRptCallCountByDate")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    public partial class dsRptCallCountByDate : global::System.Data.DataSet {
        
        private rpt_CallerLogCountsByDateDataTable tablerpt_CallerLogCountsByDate;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsRptCallCountByDate() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsRptCallCountByDate(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["rpt_CallerLogCountsByDate"] != null)) {
                    base.Tables.Add(new rpt_CallerLogCountsByDateDataTable(ds.Tables["rpt_CallerLogCountsByDate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rpt_CallerLogCountsByDateDataTable rpt_CallerLogCountsByDate {
            get {
                return this.tablerpt_CallerLogCountsByDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsRptCallCountByDate cln = ((dsRptCallCountByDate)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["rpt_CallerLogCountsByDate"] != null)) {
                    base.Tables.Add(new rpt_CallerLogCountsByDateDataTable(ds.Tables["rpt_CallerLogCountsByDate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablerpt_CallerLogCountsByDate = ((rpt_CallerLogCountsByDateDataTable)(base.Tables["rpt_CallerLogCountsByDate"]));
            if ((initTable == true)) {
                if ((this.tablerpt_CallerLogCountsByDate != null)) {
                    this.tablerpt_CallerLogCountsByDate.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsRptCallCountByDate";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRptCallCountByDate.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablerpt_CallerLogCountsByDate = new rpt_CallerLogCountsByDateDataTable();
            base.Tables.Add(this.tablerpt_CallerLogCountsByDate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializerpt_CallerLogCountsByDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRptCallCountByDate ds = new dsRptCallCountByDate();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void rpt_CallerLogCountsByDateRowChangeEventHandler(object sender, rpt_CallerLogCountsByDateRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rpt_CallerLogCountsByDateDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCall_Count;
            
            private global::System.Data.DataColumn columnDateCalled;
            
            private global::System.Data.DataColumn columnCallType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDateDataTable() {
                this.TableName = "rpt_CallerLogCountsByDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallerLogCountsByDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected rpt_CallerLogCountsByDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Call_CountColumn {
                get {
                    return this.columnCall_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCalledColumn {
                get {
                    return this.columnDateCalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallTypeColumn {
                get {
                    return this.columnCallType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDateRow this[int index] {
                get {
                    return ((rpt_CallerLogCountsByDateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsByDateRowChangeEventHandler rpt_CallerLogCountsByDateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsByDateRowChangeEventHandler rpt_CallerLogCountsByDateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsByDateRowChangeEventHandler rpt_CallerLogCountsByDateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsByDateRowChangeEventHandler rpt_CallerLogCountsByDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addrpt_CallerLogCountsByDateRow(rpt_CallerLogCountsByDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDateRow Addrpt_CallerLogCountsByDateRow(int Call_Count, string DateCalled, string CallType) {
                rpt_CallerLogCountsByDateRow rowrpt_CallerLogCountsByDateRow = ((rpt_CallerLogCountsByDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Call_Count,
                        DateCalled,
                        CallType};
                rowrpt_CallerLogCountsByDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrpt_CallerLogCountsByDateRow);
                return rowrpt_CallerLogCountsByDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rpt_CallerLogCountsByDateDataTable cln = ((rpt_CallerLogCountsByDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rpt_CallerLogCountsByDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCall_Count = base.Columns["Call_Count"];
                this.columnDateCalled = base.Columns["DateCalled"];
                this.columnCallType = base.Columns["CallType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCall_Count = new global::System.Data.DataColumn("Call_Count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Count);
                this.columnDateCalled = new global::System.Data.DataColumn("DateCalled", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCalled);
                this.columnCallType = new global::System.Data.DataColumn("CallType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallType);
                this.columnCall_Count.ReadOnly = true;
                this.columnDateCalled.ReadOnly = true;
                this.columnDateCalled.MaxLength = 12;
                this.columnCallType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDateRow Newrpt_CallerLogCountsByDateRow() {
                return ((rpt_CallerLogCountsByDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rpt_CallerLogCountsByDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rpt_CallerLogCountsByDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rpt_CallerLogCountsByDateRowChanged != null)) {
                    this.rpt_CallerLogCountsByDateRowChanged(this, new rpt_CallerLogCountsByDateRowChangeEvent(((rpt_CallerLogCountsByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rpt_CallerLogCountsByDateRowChanging != null)) {
                    this.rpt_CallerLogCountsByDateRowChanging(this, new rpt_CallerLogCountsByDateRowChangeEvent(((rpt_CallerLogCountsByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rpt_CallerLogCountsByDateRowDeleted != null)) {
                    this.rpt_CallerLogCountsByDateRowDeleted(this, new rpt_CallerLogCountsByDateRowChangeEvent(((rpt_CallerLogCountsByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rpt_CallerLogCountsByDateRowDeleting != null)) {
                    this.rpt_CallerLogCountsByDateRowDeleting(this, new rpt_CallerLogCountsByDateRowChangeEvent(((rpt_CallerLogCountsByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removerpt_CallerLogCountsByDateRow(rpt_CallerLogCountsByDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRptCallCountByDate ds = new dsRptCallCountByDate();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rpt_CallerLogCountsByDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rpt_CallerLogCountsByDateRow : global::System.Data.DataRow {
            
            private rpt_CallerLogCountsByDateDataTable tablerpt_CallerLogCountsByDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallerLogCountsByDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerpt_CallerLogCountsByDate = ((rpt_CallerLogCountsByDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Call_Count {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallerLogCountsByDate.Call_CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Count\' in table \'rpt_CallerLogCountsByDate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCountsByDate.Call_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DateCalled {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogCountsByDate.DateCalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCalled\' in table \'rpt_CallerLogCountsByDate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCountsByDate.DateCalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CallType {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogCountsByDate.CallTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallType\' in table \'rpt_CallerLogCountsByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCountsByDate.CallTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCall_CountNull() {
                return this.IsNull(this.tablerpt_CallerLogCountsByDate.Call_CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCall_CountNull() {
                this[this.tablerpt_CallerLogCountsByDate.Call_CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCalledNull() {
                return this.IsNull(this.tablerpt_CallerLogCountsByDate.DateCalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCalledNull() {
                this[this.tablerpt_CallerLogCountsByDate.DateCalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallTypeNull() {
                return this.IsNull(this.tablerpt_CallerLogCountsByDate.CallTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallTypeNull() {
                this[this.tablerpt_CallerLogCountsByDate.CallTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class rpt_CallerLogCountsByDateRowChangeEvent : global::System.EventArgs {
            
            private rpt_CallerLogCountsByDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDateRowChangeEvent(rpt_CallerLogCountsByDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class BusinessQueryParameters {
        
        private System.DateTime orderDateField;
        
        private bool taxableField;
        
        private bool spPriceField;
        
        private int sSPrefixField;
        
        private bool isSelectField;
        
        private string crdReplField;
        
        private bool isDownloadedField;
        
        private bool returnedField;
        
        private int seqNumField;
        
        private bool inventoryField;
        
        private bool sendIDField;
        
        private float amtDiscField;
        
        private float unitTotalField;
        
        private float unitNumberField;
        
        private string productTypeField;
        
        private string productDescField;
        
        private string pageField;
        
        private float qtyField;
        
        private float priceField;
        
        private float subTotalField;
        
        private string shortCodeField;
        
        private string shortCodeTextField;
        
        private string shortCodeTTSField;
        
        private long shortCodeIDField;
        
        private int actionCodeField;
        
        private string actionCodeDescField;
        
        private double feeField;
        
        private string faxField;
        
        private string fileNameField;
        
        private double o2MaxField;
        
        private double o2MinField;
        
        private double intakeMaxField;
        
        private double intakeMinField;
        
        private double o2TriggerField;
        
        private double intakeTriggerField;
        
        private int o2TypeField;
        
        private int intakeTypeField;
        
        private double o2Field;
        
        private double intakeField;
        
        private double heightField;
        
        private long profileIDField;
        
        private float tpMaxField;
        
        private float tpMinField;
        
        private string tpTypeField;
        
        private int systolicMaxField;
        
        private int diastolicMaxField;
        
        private int systolicMinField;
        
        private int diastolicMinField;
        
        private int wtMaxField;
        
        private int wtMinField;
        
        private string wtTypeField;
        
        private string bsTypeField;
        
        private string bpTypeField;
        
        private int bsMinField;
        
        private int bsMaxField;
        
        private int bSTriggerField;
        
        private int wTTriggerField;
        
        private float tPTriggerField;
        
        private int systolicTriggerField;
        
        private int diastolicTriggerField;
        
        private int wtField;
        
        private int bsField;
        
        private float tpField;
        
        private string tradeNameField;
        
        private string packSizeField;
        
        private string strengthField;
        
        private string medicationIDField;
        
        private string nDC_CDField;
        
        private string hIPAA_CDField;
        
        private string nDC_CD_TXTField;
        
        private string unitField;
        
        private string frequencyField;
        
        private string rX_OTCField;
        
        private int last_Perscribed_ByField;
        
        private string sKUField;
        
        private int refills_AllowedField;
        
        private string routeField;
        
        private string packageCodeField;
        
        private string lot_NumField;
        
        private System.DateTime dateCalledField;
        
        private string callTypeField;
        
        private int careGiverIDField;
        
        private string careGiverFirstNameField;
        
        private string careGiverLastNameField;
        
        private string careGiverPhoneField;
        
        private System.Guid callQueueIDField;
        
        private string callRecordingURLField;
        
        private string dialedNumberField;
        
        private string pageHistoryField;
        
        private string siteNumberField;
        
        private string agentField;
        
        private string callOutcomeField;
        
        private string callDirectionField;
        
        private string callDurationField;
        
        private string callStartTimeField;
        
        private int networkRefIdField;
        
        private int refIdField;
        
        private long bcsLogIDField;
        
        private int maxRecallsField;
        
        private int recallsMadeField;
        
        private int contactTypeCodeField;
        
        private int sponsorIdField;
        
        private int buddyIdField;
        
        private string passwordField;
        
        private string userIDField;
        
        private string licenseFuncNameField;
        
        private string subCategoryField;
        
        private string siteIDField;
        
        private int bcsTestCodeField;
        
        private string cGSiteIDField;
        
        private string categoryField;
        
        private string relationshipCodeField;
        
        private char careGiverRoleField;
        
        private string callFreqField;
        
        private int callTimeMissedField;
        
        private int callYearField;
        
        private int callTimeField;
        
        private string phoneNumberField;
        
        private long scheduleIDField;
        
        private string callingStatusMissedField;
        
        private string callingStatusField;
        
        private string callGUIDField;
        
        private int callMonthField;
        
        private System.DateTime stopDateField;
        
        private System.DateTime startDateField;
        
        private System.DateTime callDateField;
        
        private int waitTimeField;
        
        private int callDayField;
        
        private System.DateTime lastUpdatedField;
        
        private int lastUpdatedByField;
        
        private System.Guid licenseKeyField;
        
        private string type_CDField;
        
        private string goodPromptField;
        
        private string badPromptField;
        
        private string phoneTypeField;
        
        private string callerPhoneNumberField;
        
        private int callerIdField;
        
        private int mobileFeaturesField;
        
        private string accountTypeCodeField;
        
        private string sexField;
        
        private int ageField;
        
        private System.DateTime dOBField;
        
        private long numberDaysField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string externalRefIDField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string fIPSCodeField;
        
        private string zipCodeField;
        
        private string stateField;
        
        private string pinField;
        
        private bool msgReadField;
        
        private bool pinRequiredField;
        
        private bool phoneNumberMatchRequiredField;
        
        private bool createIfNotFoundIndField;
        
        private bool hasCustomMsgField;
        
        private bool isQueuedField;
        
        private string emailAddressField;
        
        private string textMessageAddressField;
        
        private System.DateTime accountCreationDateTimeField;
        
        private bool optInField;
        
        private string statusIndField;
        
        private string waitListFLField;
        
        private string storeNameField;
        
        private int storeIDField;
        
        private string barcodeNumberField;
        
        private bool isActiveField;
        
        private int sMSProviderIdField;
        
        private string companyNameField;
        
        private string addressField;
        
        private char addressTypeField;
        
        private string prefixTypeField;
        
        private string memberNotesField;
        
        private int senderMemberIDField;
        
        private int receiverMemberIDField;
        
        private int senderSponsorIDField;
        
        private int receiverSponsorIDField;
        
        private int senderNetworkIDField;
        
        private int receiverNetworkIDField;
        
        private string toPhoneNumberField;
        
        private string fromPhonenumberField;
        
        private string fromAddressField;
        
        private string toAddressField;
        
        private System.DateTime msgReceivedField;
        
        private string msgTextField;
        
        private string msgStatusField;
        
        private string msgSubjectField;
        
        private System.DateTime msgCreatedField;
        
        private int msgPriorityField;
        
        private bool msgRecordedField;
        
        private bool msgReplySentField;
        
        private bool isApprovedField;
        
        private bool isAcknowledgedField;
        
        private string msgTitleField;
        
        private string returnLinkField;
        
        private string errorLinkField;
        
        private string memberNumberField;
        
        private bool msgSentField;
        
        private int providerIDField;
        
        private string sellerPhoneNumField;
        
        private string quickCodeField;
        
        private int categoryIDField;
        
        private System.DateTime addDateField;
        
        private string itemDescURLField;
        
        private string itemDetailDescURLField;
        
        private int itemNumberField;
        
        private string itemDescTTSField;
        
        private string itemDetailDescTTSField;
        
        private string countryCodeField;
        
        private string sellTypeField;
        
        private float highOfferField;
        
        private float currentPriceField;
        
        private int sellerProviderIDField;
        
        private string locationCodeField;
        
        private string serviceCodeField;
        
        private string roomCodeField;
        
        private string bedCodeField;
        
        private System.DateTime bidDateField;
        
        private string msgURLField;
        
        private long msgIDField;
        
        private int notifyIDField;
        
        private string msgTypeField;
        
        private string msgTTSField;
        
        private string msgTextTTSField;
        
        private string msgTxtSMSField;
        
        private System.DateTime bidTimeField;
        
        private string msgToPhoneNumField;
        
        private long msgNumberField;
        
        private int responseSeqField;
        
        private long responseIDField;
        
        private System.DateTime dateCreatedField;
        
        private string responseURLField;
        
        private string responseTextField;
        
        private string responseTypeField;
        
        private bool archivedField;
        
        private string areaCodeField;
        
        private string fastingIndField;
        
        private int weightField;
        
        private int pulseField;
        
        private float tempatureField;
        
        private int diastolicField;
        
        private int systolicField;
        
        private int bloodSerumField;
        
        private int conditionChgIndField;
        
        private string productNumberField;
        
        private System.Guid orderIDField;
        
        private string orderNumberField;
        
        private int campaignField;
        
        private int campaign_YearField;
        
        private int campaign1Field;
        
        private int campaign_Year1Field;
        
        private int campaign2Field;
        
        private int campaign_Year2Field;
        
        private int campaign3Field;
        
        private int campaign_Year3Field;
        
        private System.Guid providerPerfIDField;
        
        private string providerDescField;
        
        private string geoAreaField;
        
        /// <remarks/>
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Taxable {
            get {
                return this.taxableField;
            }
            set {
                this.taxableField = value;
            }
        }
        
        /// <remarks/>
        public bool SpPrice {
            get {
                return this.spPriceField;
            }
            set {
                this.spPriceField = value;
            }
        }
        
        /// <remarks/>
        public int SSPrefix {
            get {
                return this.sSPrefixField;
            }
            set {
                this.sSPrefixField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSelect {
            get {
                return this.isSelectField;
            }
            set {
                this.isSelectField = value;
            }
        }
        
        /// <remarks/>
        public string CrdRepl {
            get {
                return this.crdReplField;
            }
            set {
                this.crdReplField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDownloaded {
            get {
                return this.isDownloadedField;
            }
            set {
                this.isDownloadedField = value;
            }
        }
        
        /// <remarks/>
        public bool Returned {
            get {
                return this.returnedField;
            }
            set {
                this.returnedField = value;
            }
        }
        
        /// <remarks/>
        public int SeqNum {
            get {
                return this.seqNumField;
            }
            set {
                this.seqNumField = value;
            }
        }
        
        /// <remarks/>
        public bool Inventory {
            get {
                return this.inventoryField;
            }
            set {
                this.inventoryField = value;
            }
        }
        
        /// <remarks/>
        public bool SendID {
            get {
                return this.sendIDField;
            }
            set {
                this.sendIDField = value;
            }
        }
        
        /// <remarks/>
        public float AmtDisc {
            get {
                return this.amtDiscField;
            }
            set {
                this.amtDiscField = value;
            }
        }
        
        /// <remarks/>
        public float UnitTotal {
            get {
                return this.unitTotalField;
            }
            set {
                this.unitTotalField = value;
            }
        }
        
        /// <remarks/>
        public float UnitNumber {
            get {
                return this.unitNumberField;
            }
            set {
                this.unitNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ProductType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductDesc {
            get {
                return this.productDescField;
            }
            set {
                this.productDescField = value;
            }
        }
        
        /// <remarks/>
        public string Page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        public float Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        public float Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public float SubTotal {
            get {
                return this.subTotalField;
            }
            set {
                this.subTotalField = value;
            }
        }
        
        /// <remarks/>
        public string ShortCode {
            get {
                return this.shortCodeField;
            }
            set {
                this.shortCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShortCodeText {
            get {
                return this.shortCodeTextField;
            }
            set {
                this.shortCodeTextField = value;
            }
        }
        
        /// <remarks/>
        public string ShortCodeTTS {
            get {
                return this.shortCodeTTSField;
            }
            set {
                this.shortCodeTTSField = value;
            }
        }
        
        /// <remarks/>
        public long ShortCodeID {
            get {
                return this.shortCodeIDField;
            }
            set {
                this.shortCodeIDField = value;
            }
        }
        
        /// <remarks/>
        public int ActionCode {
            get {
                return this.actionCodeField;
            }
            set {
                this.actionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ActionCodeDesc {
            get {
                return this.actionCodeDescField;
            }
            set {
                this.actionCodeDescField = value;
            }
        }
        
        /// <remarks/>
        public double Fee {
            get {
                return this.feeField;
            }
            set {
                this.feeField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public double O2Max {
            get {
                return this.o2MaxField;
            }
            set {
                this.o2MaxField = value;
            }
        }
        
        /// <remarks/>
        public double O2Min {
            get {
                return this.o2MinField;
            }
            set {
                this.o2MinField = value;
            }
        }
        
        /// <remarks/>
        public double IntakeMax {
            get {
                return this.intakeMaxField;
            }
            set {
                this.intakeMaxField = value;
            }
        }
        
        /// <remarks/>
        public double IntakeMin {
            get {
                return this.intakeMinField;
            }
            set {
                this.intakeMinField = value;
            }
        }
        
        /// <remarks/>
        public double O2Trigger {
            get {
                return this.o2TriggerField;
            }
            set {
                this.o2TriggerField = value;
            }
        }
        
        /// <remarks/>
        public double IntakeTrigger {
            get {
                return this.intakeTriggerField;
            }
            set {
                this.intakeTriggerField = value;
            }
        }
        
        /// <remarks/>
        public int O2Type {
            get {
                return this.o2TypeField;
            }
            set {
                this.o2TypeField = value;
            }
        }
        
        /// <remarks/>
        public int IntakeType {
            get {
                return this.intakeTypeField;
            }
            set {
                this.intakeTypeField = value;
            }
        }
        
        /// <remarks/>
        public double O2 {
            get {
                return this.o2Field;
            }
            set {
                this.o2Field = value;
            }
        }
        
        /// <remarks/>
        public double Intake {
            get {
                return this.intakeField;
            }
            set {
                this.intakeField = value;
            }
        }
        
        /// <remarks/>
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public long ProfileID {
            get {
                return this.profileIDField;
            }
            set {
                this.profileIDField = value;
            }
        }
        
        /// <remarks/>
        public float TpMax {
            get {
                return this.tpMaxField;
            }
            set {
                this.tpMaxField = value;
            }
        }
        
        /// <remarks/>
        public float TpMin {
            get {
                return this.tpMinField;
            }
            set {
                this.tpMinField = value;
            }
        }
        
        /// <remarks/>
        public string TpType {
            get {
                return this.tpTypeField;
            }
            set {
                this.tpTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SystolicMax {
            get {
                return this.systolicMaxField;
            }
            set {
                this.systolicMaxField = value;
            }
        }
        
        /// <remarks/>
        public int DiastolicMax {
            get {
                return this.diastolicMaxField;
            }
            set {
                this.diastolicMaxField = value;
            }
        }
        
        /// <remarks/>
        public int SystolicMin {
            get {
                return this.systolicMinField;
            }
            set {
                this.systolicMinField = value;
            }
        }
        
        /// <remarks/>
        public int DiastolicMin {
            get {
                return this.diastolicMinField;
            }
            set {
                this.diastolicMinField = value;
            }
        }
        
        /// <remarks/>
        public int WtMax {
            get {
                return this.wtMaxField;
            }
            set {
                this.wtMaxField = value;
            }
        }
        
        /// <remarks/>
        public int WtMin {
            get {
                return this.wtMinField;
            }
            set {
                this.wtMinField = value;
            }
        }
        
        /// <remarks/>
        public string WtType {
            get {
                return this.wtTypeField;
            }
            set {
                this.wtTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BsType {
            get {
                return this.bsTypeField;
            }
            set {
                this.bsTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BpType {
            get {
                return this.bpTypeField;
            }
            set {
                this.bpTypeField = value;
            }
        }
        
        /// <remarks/>
        public int BsMin {
            get {
                return this.bsMinField;
            }
            set {
                this.bsMinField = value;
            }
        }
        
        /// <remarks/>
        public int BsMax {
            get {
                return this.bsMaxField;
            }
            set {
                this.bsMaxField = value;
            }
        }
        
        /// <remarks/>
        public int BSTrigger {
            get {
                return this.bSTriggerField;
            }
            set {
                this.bSTriggerField = value;
            }
        }
        
        /// <remarks/>
        public int WTTrigger {
            get {
                return this.wTTriggerField;
            }
            set {
                this.wTTriggerField = value;
            }
        }
        
        /// <remarks/>
        public float TPTrigger {
            get {
                return this.tPTriggerField;
            }
            set {
                this.tPTriggerField = value;
            }
        }
        
        /// <remarks/>
        public int SystolicTrigger {
            get {
                return this.systolicTriggerField;
            }
            set {
                this.systolicTriggerField = value;
            }
        }
        
        /// <remarks/>
        public int DiastolicTrigger {
            get {
                return this.diastolicTriggerField;
            }
            set {
                this.diastolicTriggerField = value;
            }
        }
        
        /// <remarks/>
        public int Wt {
            get {
                return this.wtField;
            }
            set {
                this.wtField = value;
            }
        }
        
        /// <remarks/>
        public int Bs {
            get {
                return this.bsField;
            }
            set {
                this.bsField = value;
            }
        }
        
        /// <remarks/>
        public float Tp {
            get {
                return this.tpField;
            }
            set {
                this.tpField = value;
            }
        }
        
        /// <remarks/>
        public string TradeName {
            get {
                return this.tradeNameField;
            }
            set {
                this.tradeNameField = value;
            }
        }
        
        /// <remarks/>
        public string PackSize {
            get {
                return this.packSizeField;
            }
            set {
                this.packSizeField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationID {
            get {
                return this.medicationIDField;
            }
            set {
                this.medicationIDField = value;
            }
        }
        
        /// <remarks/>
        public string NDC_CD {
            get {
                return this.nDC_CDField;
            }
            set {
                this.nDC_CDField = value;
            }
        }
        
        /// <remarks/>
        public string HIPAA_CD {
            get {
                return this.hIPAA_CDField;
            }
            set {
                this.hIPAA_CDField = value;
            }
        }
        
        /// <remarks/>
        public string NDC_CD_TXT {
            get {
                return this.nDC_CD_TXTField;
            }
            set {
                this.nDC_CD_TXTField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        public string RX_OTC {
            get {
                return this.rX_OTCField;
            }
            set {
                this.rX_OTCField = value;
            }
        }
        
        /// <remarks/>
        public int Last_Perscribed_By {
            get {
                return this.last_Perscribed_ByField;
            }
            set {
                this.last_Perscribed_ByField = value;
            }
        }
        
        /// <remarks/>
        public string SKU {
            get {
                return this.sKUField;
            }
            set {
                this.sKUField = value;
            }
        }
        
        /// <remarks/>
        public int Refills_Allowed {
            get {
                return this.refills_AllowedField;
            }
            set {
                this.refills_AllowedField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string PackageCode {
            get {
                return this.packageCodeField;
            }
            set {
                this.packageCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Lot_Num {
            get {
                return this.lot_NumField;
            }
            set {
                this.lot_NumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCalled {
            get {
                return this.dateCalledField;
            }
            set {
                this.dateCalledField = value;
            }
        }
        
        /// <remarks/>
        public string CallType {
            get {
                return this.callTypeField;
            }
            set {
                this.callTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CareGiverID {
            get {
                return this.careGiverIDField;
            }
            set {
                this.careGiverIDField = value;
            }
        }
        
        /// <remarks/>
        public string CareGiverFirstName {
            get {
                return this.careGiverFirstNameField;
            }
            set {
                this.careGiverFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string CareGiverLastName {
            get {
                return this.careGiverLastNameField;
            }
            set {
                this.careGiverLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string CareGiverPhone {
            get {
                return this.careGiverPhoneField;
            }
            set {
                this.careGiverPhoneField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CallQueueID {
            get {
                return this.callQueueIDField;
            }
            set {
                this.callQueueIDField = value;
            }
        }
        
        /// <remarks/>
        public string CallRecordingURL {
            get {
                return this.callRecordingURLField;
            }
            set {
                this.callRecordingURLField = value;
            }
        }
        
        /// <remarks/>
        public string DialedNumber {
            get {
                return this.dialedNumberField;
            }
            set {
                this.dialedNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PageHistory {
            get {
                return this.pageHistoryField;
            }
            set {
                this.pageHistoryField = value;
            }
        }
        
        /// <remarks/>
        public string SiteNumber {
            get {
                return this.siteNumberField;
            }
            set {
                this.siteNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Agent {
            get {
                return this.agentField;
            }
            set {
                this.agentField = value;
            }
        }
        
        /// <remarks/>
        public string CallOutcome {
            get {
                return this.callOutcomeField;
            }
            set {
                this.callOutcomeField = value;
            }
        }
        
        /// <remarks/>
        public string CallDirection {
            get {
                return this.callDirectionField;
            }
            set {
                this.callDirectionField = value;
            }
        }
        
        /// <remarks/>
        public string CallDuration {
            get {
                return this.callDurationField;
            }
            set {
                this.callDurationField = value;
            }
        }
        
        /// <remarks/>
        public string CallStartTime {
            get {
                return this.callStartTimeField;
            }
            set {
                this.callStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public int NetworkRefId {
            get {
                return this.networkRefIdField;
            }
            set {
                this.networkRefIdField = value;
            }
        }
        
        /// <remarks/>
        public int RefId {
            get {
                return this.refIdField;
            }
            set {
                this.refIdField = value;
            }
        }
        
        /// <remarks/>
        public long BcsLogID {
            get {
                return this.bcsLogIDField;
            }
            set {
                this.bcsLogIDField = value;
            }
        }
        
        /// <remarks/>
        public int MaxRecalls {
            get {
                return this.maxRecallsField;
            }
            set {
                this.maxRecallsField = value;
            }
        }
        
        /// <remarks/>
        public int RecallsMade {
            get {
                return this.recallsMadeField;
            }
            set {
                this.recallsMadeField = value;
            }
        }
        
        /// <remarks/>
        public int ContactTypeCode {
            get {
                return this.contactTypeCodeField;
            }
            set {
                this.contactTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public int SponsorId {
            get {
                return this.sponsorIdField;
            }
            set {
                this.sponsorIdField = value;
            }
        }
        
        /// <remarks/>
        public int BuddyId {
            get {
                return this.buddyIdField;
            }
            set {
                this.buddyIdField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseFuncName {
            get {
                return this.licenseFuncNameField;
            }
            set {
                this.licenseFuncNameField = value;
            }
        }
        
        /// <remarks/>
        public string SubCategory {
            get {
                return this.subCategoryField;
            }
            set {
                this.subCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public int BcsTestCode {
            get {
                return this.bcsTestCodeField;
            }
            set {
                this.bcsTestCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CGSiteID {
            get {
                return this.cGSiteIDField;
            }
            set {
                this.cGSiteIDField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string RelationshipCode {
            get {
                return this.relationshipCodeField;
            }
            set {
                this.relationshipCodeField = value;
            }
        }
        
        /// <remarks/>
        public char CareGiverRole {
            get {
                return this.careGiverRoleField;
            }
            set {
                this.careGiverRoleField = value;
            }
        }
        
        /// <remarks/>
        public string CallFreq {
            get {
                return this.callFreqField;
            }
            set {
                this.callFreqField = value;
            }
        }
        
        /// <remarks/>
        public int CallTimeMissed {
            get {
                return this.callTimeMissedField;
            }
            set {
                this.callTimeMissedField = value;
            }
        }
        
        /// <remarks/>
        public int CallYear {
            get {
                return this.callYearField;
            }
            set {
                this.callYearField = value;
            }
        }
        
        /// <remarks/>
        public int CallTime {
            get {
                return this.callTimeField;
            }
            set {
                this.callTimeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public long ScheduleID {
            get {
                return this.scheduleIDField;
            }
            set {
                this.scheduleIDField = value;
            }
        }
        
        /// <remarks/>
        public string CallingStatusMissed {
            get {
                return this.callingStatusMissedField;
            }
            set {
                this.callingStatusMissedField = value;
            }
        }
        
        /// <remarks/>
        public string CallingStatus {
            get {
                return this.callingStatusField;
            }
            set {
                this.callingStatusField = value;
            }
        }
        
        /// <remarks/>
        public string CallGUID {
            get {
                return this.callGUIDField;
            }
            set {
                this.callGUIDField = value;
            }
        }
        
        /// <remarks/>
        public int CallMonth {
            get {
                return this.callMonthField;
            }
            set {
                this.callMonthField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StopDate {
            get {
                return this.stopDateField;
            }
            set {
                this.stopDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CallDate {
            get {
                return this.callDateField;
            }
            set {
                this.callDateField = value;
            }
        }
        
        /// <remarks/>
        public int WaitTime {
            get {
                return this.waitTimeField;
            }
            set {
                this.waitTimeField = value;
            }
        }
        
        /// <remarks/>
        public int CallDay {
            get {
                return this.callDayField;
            }
            set {
                this.callDayField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public int LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid LicenseKey {
            get {
                return this.licenseKeyField;
            }
            set {
                this.licenseKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Type_CD {
            get {
                return this.type_CDField;
            }
            set {
                this.type_CDField = value;
            }
        }
        
        /// <remarks/>
        public string GoodPrompt {
            get {
                return this.goodPromptField;
            }
            set {
                this.goodPromptField = value;
            }
        }
        
        /// <remarks/>
        public string BadPrompt {
            get {
                return this.badPromptField;
            }
            set {
                this.badPromptField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneType {
            get {
                return this.phoneTypeField;
            }
            set {
                this.phoneTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CallerPhoneNumber {
            get {
                return this.callerPhoneNumberField;
            }
            set {
                this.callerPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public int CallerId {
            get {
                return this.callerIdField;
            }
            set {
                this.callerIdField = value;
            }
        }
        
        /// <remarks/>
        public int MobileFeatures {
            get {
                return this.mobileFeaturesField;
            }
            set {
                this.mobileFeaturesField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTypeCode {
            get {
                return this.accountTypeCodeField;
            }
            set {
                this.accountTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public int Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public long NumberDays {
            get {
                return this.numberDaysField;
            }
            set {
                this.numberDaysField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalRefID {
            get {
                return this.externalRefIDField;
            }
            set {
                this.externalRefIDField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string FIPSCode {
            get {
                return this.fIPSCodeField;
            }
            set {
                this.fIPSCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Pin {
            get {
                return this.pinField;
            }
            set {
                this.pinField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgRead {
            get {
                return this.msgReadField;
            }
            set {
                this.msgReadField = value;
            }
        }
        
        /// <remarks/>
        public bool PinRequired {
            get {
                return this.pinRequiredField;
            }
            set {
                this.pinRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool PhoneNumberMatchRequired {
            get {
                return this.phoneNumberMatchRequiredField;
            }
            set {
                this.phoneNumberMatchRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool CreateIfNotFoundInd {
            get {
                return this.createIfNotFoundIndField;
            }
            set {
                this.createIfNotFoundIndField = value;
            }
        }
        
        /// <remarks/>
        public bool HasCustomMsg {
            get {
                return this.hasCustomMsgField;
            }
            set {
                this.hasCustomMsgField = value;
            }
        }
        
        /// <remarks/>
        public bool IsQueued {
            get {
                return this.isQueuedField;
            }
            set {
                this.isQueuedField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string TextMessageAddress {
            get {
                return this.textMessageAddressField;
            }
            set {
                this.textMessageAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AccountCreationDateTime {
            get {
                return this.accountCreationDateTimeField;
            }
            set {
                this.accountCreationDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool OptIn {
            get {
                return this.optInField;
            }
            set {
                this.optInField = value;
            }
        }
        
        /// <remarks/>
        public string StatusInd {
            get {
                return this.statusIndField;
            }
            set {
                this.statusIndField = value;
            }
        }
        
        /// <remarks/>
        public string WaitListFL {
            get {
                return this.waitListFLField;
            }
            set {
                this.waitListFLField = value;
            }
        }
        
        /// <remarks/>
        public string StoreName {
            get {
                return this.storeNameField;
            }
            set {
                this.storeNameField = value;
            }
        }
        
        /// <remarks/>
        public int StoreID {
            get {
                return this.storeIDField;
            }
            set {
                this.storeIDField = value;
            }
        }
        
        /// <remarks/>
        public string BarcodeNumber {
            get {
                return this.barcodeNumberField;
            }
            set {
                this.barcodeNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public int SMSProviderId {
            get {
                return this.sMSProviderIdField;
            }
            set {
                this.sMSProviderIdField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public char AddressType {
            get {
                return this.addressTypeField;
            }
            set {
                this.addressTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PrefixType {
            get {
                return this.prefixTypeField;
            }
            set {
                this.prefixTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MemberNotes {
            get {
                return this.memberNotesField;
            }
            set {
                this.memberNotesField = value;
            }
        }
        
        /// <remarks/>
        public int SenderMemberID {
            get {
                return this.senderMemberIDField;
            }
            set {
                this.senderMemberIDField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiverMemberID {
            get {
                return this.receiverMemberIDField;
            }
            set {
                this.receiverMemberIDField = value;
            }
        }
        
        /// <remarks/>
        public int SenderSponsorID {
            get {
                return this.senderSponsorIDField;
            }
            set {
                this.senderSponsorIDField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiverSponsorID {
            get {
                return this.receiverSponsorIDField;
            }
            set {
                this.receiverSponsorIDField = value;
            }
        }
        
        /// <remarks/>
        public int SenderNetworkID {
            get {
                return this.senderNetworkIDField;
            }
            set {
                this.senderNetworkIDField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiverNetworkID {
            get {
                return this.receiverNetworkIDField;
            }
            set {
                this.receiverNetworkIDField = value;
            }
        }
        
        /// <remarks/>
        public string ToPhoneNumber {
            get {
                return this.toPhoneNumberField;
            }
            set {
                this.toPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FromPhonenumber {
            get {
                return this.fromPhonenumberField;
            }
            set {
                this.fromPhonenumberField = value;
            }
        }
        
        /// <remarks/>
        public string FromAddress {
            get {
                return this.fromAddressField;
            }
            set {
                this.fromAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ToAddress {
            get {
                return this.toAddressField;
            }
            set {
                this.toAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MsgReceived {
            get {
                return this.msgReceivedField;
            }
            set {
                this.msgReceivedField = value;
            }
        }
        
        /// <remarks/>
        public string MsgText {
            get {
                return this.msgTextField;
            }
            set {
                this.msgTextField = value;
            }
        }
        
        /// <remarks/>
        public string MsgStatus {
            get {
                return this.msgStatusField;
            }
            set {
                this.msgStatusField = value;
            }
        }
        
        /// <remarks/>
        public string MsgSubject {
            get {
                return this.msgSubjectField;
            }
            set {
                this.msgSubjectField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MsgCreated {
            get {
                return this.msgCreatedField;
            }
            set {
                this.msgCreatedField = value;
            }
        }
        
        /// <remarks/>
        public int MsgPriority {
            get {
                return this.msgPriorityField;
            }
            set {
                this.msgPriorityField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgRecorded {
            get {
                return this.msgRecordedField;
            }
            set {
                this.msgRecordedField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgReplySent {
            get {
                return this.msgReplySentField;
            }
            set {
                this.msgReplySentField = value;
            }
        }
        
        /// <remarks/>
        public bool IsApproved {
            get {
                return this.isApprovedField;
            }
            set {
                this.isApprovedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAcknowledged {
            get {
                return this.isAcknowledgedField;
            }
            set {
                this.isAcknowledgedField = value;
            }
        }
        
        /// <remarks/>
        public string MsgTitle {
            get {
                return this.msgTitleField;
            }
            set {
                this.msgTitleField = value;
            }
        }
        
        /// <remarks/>
        public string ReturnLink {
            get {
                return this.returnLinkField;
            }
            set {
                this.returnLinkField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorLink {
            get {
                return this.errorLinkField;
            }
            set {
                this.errorLinkField = value;
            }
        }
        
        /// <remarks/>
        public string MemberNumber {
            get {
                return this.memberNumberField;
            }
            set {
                this.memberNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgSent {
            get {
                return this.msgSentField;
            }
            set {
                this.msgSentField = value;
            }
        }
        
        /// <remarks/>
        public int ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string SellerPhoneNum {
            get {
                return this.sellerPhoneNumField;
            }
            set {
                this.sellerPhoneNumField = value;
            }
        }
        
        /// <remarks/>
        public string QuickCode {
            get {
                return this.quickCodeField;
            }
            set {
                this.quickCodeField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AddDate {
            get {
                return this.addDateField;
            }
            set {
                this.addDateField = value;
            }
        }
        
        /// <remarks/>
        public string ItemDescURL {
            get {
                return this.itemDescURLField;
            }
            set {
                this.itemDescURLField = value;
            }
        }
        
        /// <remarks/>
        public string ItemDetailDescURL {
            get {
                return this.itemDetailDescURLField;
            }
            set {
                this.itemDetailDescURLField = value;
            }
        }
        
        /// <remarks/>
        public int ItemNumber {
            get {
                return this.itemNumberField;
            }
            set {
                this.itemNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ItemDescTTS {
            get {
                return this.itemDescTTSField;
            }
            set {
                this.itemDescTTSField = value;
            }
        }
        
        /// <remarks/>
        public string ItemDetailDescTTS {
            get {
                return this.itemDetailDescTTSField;
            }
            set {
                this.itemDetailDescTTSField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string SellType {
            get {
                return this.sellTypeField;
            }
            set {
                this.sellTypeField = value;
            }
        }
        
        /// <remarks/>
        public float HighOffer {
            get {
                return this.highOfferField;
            }
            set {
                this.highOfferField = value;
            }
        }
        
        /// <remarks/>
        public float CurrentPrice {
            get {
                return this.currentPriceField;
            }
            set {
                this.currentPriceField = value;
            }
        }
        
        /// <remarks/>
        public int SellerProviderID {
            get {
                return this.sellerProviderIDField;
            }
            set {
                this.sellerProviderIDField = value;
            }
        }
        
        /// <remarks/>
        public string LocationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCode {
            get {
                return this.serviceCodeField;
            }
            set {
                this.serviceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RoomCode {
            get {
                return this.roomCodeField;
            }
            set {
                this.roomCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BedCode {
            get {
                return this.bedCodeField;
            }
            set {
                this.bedCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BidDate {
            get {
                return this.bidDateField;
            }
            set {
                this.bidDateField = value;
            }
        }
        
        /// <remarks/>
        public string MsgURL {
            get {
                return this.msgURLField;
            }
            set {
                this.msgURLField = value;
            }
        }
        
        /// <remarks/>
        public long MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int NotifyID {
            get {
                return this.notifyIDField;
            }
            set {
                this.notifyIDField = value;
            }
        }
        
        /// <remarks/>
        public string MsgType {
            get {
                return this.msgTypeField;
            }
            set {
                this.msgTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MsgTTS {
            get {
                return this.msgTTSField;
            }
            set {
                this.msgTTSField = value;
            }
        }
        
        /// <remarks/>
        public string MsgTextTTS {
            get {
                return this.msgTextTTSField;
            }
            set {
                this.msgTextTTSField = value;
            }
        }
        
        /// <remarks/>
        public string MsgTxtSMS {
            get {
                return this.msgTxtSMSField;
            }
            set {
                this.msgTxtSMSField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BidTime {
            get {
                return this.bidTimeField;
            }
            set {
                this.bidTimeField = value;
            }
        }
        
        /// <remarks/>
        public string MsgToPhoneNum {
            get {
                return this.msgToPhoneNumField;
            }
            set {
                this.msgToPhoneNumField = value;
            }
        }
        
        /// <remarks/>
        public long MsgNumber {
            get {
                return this.msgNumberField;
            }
            set {
                this.msgNumberField = value;
            }
        }
        
        /// <remarks/>
        public int ResponseSeq {
            get {
                return this.responseSeqField;
            }
            set {
                this.responseSeqField = value;
            }
        }
        
        /// <remarks/>
        public long ResponseID {
            get {
                return this.responseIDField;
            }
            set {
                this.responseIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseURL {
            get {
                return this.responseURLField;
            }
            set {
                this.responseURLField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseText {
            get {
                return this.responseTextField;
            }
            set {
                this.responseTextField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseType {
            get {
                return this.responseTypeField;
            }
            set {
                this.responseTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool Archived {
            get {
                return this.archivedField;
            }
            set {
                this.archivedField = value;
            }
        }
        
        /// <remarks/>
        public string AreaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FastingInd {
            get {
                return this.fastingIndField;
            }
            set {
                this.fastingIndField = value;
            }
        }
        
        /// <remarks/>
        public int Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public int Pulse {
            get {
                return this.pulseField;
            }
            set {
                this.pulseField = value;
            }
        }
        
        /// <remarks/>
        public float Tempature {
            get {
                return this.tempatureField;
            }
            set {
                this.tempatureField = value;
            }
        }
        
        /// <remarks/>
        public int Diastolic {
            get {
                return this.diastolicField;
            }
            set {
                this.diastolicField = value;
            }
        }
        
        /// <remarks/>
        public int Systolic {
            get {
                return this.systolicField;
            }
            set {
                this.systolicField = value;
            }
        }
        
        /// <remarks/>
        public int BloodSerum {
            get {
                return this.bloodSerumField;
            }
            set {
                this.bloodSerumField = value;
            }
        }
        
        /// <remarks/>
        public int ConditionChgInd {
            get {
                return this.conditionChgIndField;
            }
            set {
                this.conditionChgIndField = value;
            }
        }
        
        /// <remarks/>
        public string ProductNumber {
            get {
                return this.productNumberField;
            }
            set {
                this.productNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public string OrderNumber {
            get {
                return this.orderNumberField;
            }
            set {
                this.orderNumberField = value;
            }
        }
        
        /// <remarks/>
        public int Campaign {
            get {
                return this.campaignField;
            }
            set {
                this.campaignField = value;
            }
        }
        
        /// <remarks/>
        public int Campaign_Year {
            get {
                return this.campaign_YearField;
            }
            set {
                this.campaign_YearField = value;
            }
        }
        
        /// <remarks/>
        public int Campaign1 {
            get {
                return this.campaign1Field;
            }
            set {
                this.campaign1Field = value;
            }
        }
        
        /// <remarks/>
        public int Campaign_Year1 {
            get {
                return this.campaign_Year1Field;
            }
            set {
                this.campaign_Year1Field = value;
            }
        }
        
        /// <remarks/>
        public int Campaign2 {
            get {
                return this.campaign2Field;
            }
            set {
                this.campaign2Field = value;
            }
        }
        
        /// <remarks/>
        public int Campaign_Year2 {
            get {
                return this.campaign_Year2Field;
            }
            set {
                this.campaign_Year2Field = value;
            }
        }
        
        /// <remarks/>
        public int Campaign3 {
            get {
                return this.campaign3Field;
            }
            set {
                this.campaign3Field = value;
            }
        }
        
        /// <remarks/>
        public int Campaign_Year3 {
            get {
                return this.campaign_Year3Field;
            }
            set {
                this.campaign_Year3Field = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ProviderPerfID {
            get {
                return this.providerPerfIDField;
            }
            set {
                this.providerPerfIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderDesc {
            get {
                return this.providerDescField;
            }
            set {
                this.providerDescField = value;
            }
        }
        
        /// <remarks/>
        public string GeoArea {
            get {
                return this.geoAreaField;
            }
            set {
                this.geoAreaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class CallResponse {
        
        private System.DateTime callStartField;
        
        private System.DateTime callEndField;
        
        private bool isValidField;
        
        private string errorMsgField;
        
        private string phoneNumberField;
        
        private string jobIDField;
        
        private string phoneRequestIDField;
        
        private string callResponseCodeField;
        
        private string callResponseMsgField;
        
        /// <remarks/>
        public System.DateTime CallStart {
            get {
                return this.callStartField;
            }
            set {
                this.callStartField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CallEnd {
            get {
                return this.callEndField;
            }
            set {
                this.callEndField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string JobID {
            get {
                return this.jobIDField;
            }
            set {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneRequestID {
            get {
                return this.phoneRequestIDField;
            }
            set {
                this.phoneRequestIDField = value;
            }
        }
        
        /// <remarks/>
        public string CallResponseCode {
            get {
                return this.callResponseCodeField;
            }
            set {
                this.callResponseCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CallResponseMsg {
            get {
                return this.callResponseMsgField;
            }
            set {
                this.callResponseMsgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class CallInfo {
        
        private bool isQueuedField;
        
        private string jobIDField;
        
        private string phoneRequestIDField;
        
        private int caregiverIDField;
        
        private long callDurationField;
        
        private string serviceCodeField;
        
        private string msgURLField;
        
        private bool hasCustomMsgField;
        
        private long msgIDField;
        
        private char roleField;
        
        private int refIDField;
        
        private int buddyIDField;
        
        private System.DateTime lastUpdatedField;
        
        private int callMonthField;
        
        private int callDayField;
        
        private int sMSProviderIDField;
        
        private int callYearField;
        
        private string callFreqField;
        
        private string callOutcomeField;
        
        private int callTimeField;
        
        private System.DateTime callStartTimeField;
        
        private System.DateTime callEndTimeField;
        
        private System.DateTime callDateField;
        
        private System.DateTime stopDateField;
        
        private int maxRecallsField;
        
        private int recallsMadeField;
        
        private string callingStatusField;
        
        private string subCategoryField;
        
        private string categoryField;
        
        private int contactTypeCodeField;
        
        private int bcsTestCodeField;
        
        private bool isOutCallField;
        
        private string cGSiteIDField;
        
        private string siteIDField;
        
        private string ftNameField;
        
        private string ltNameField;
        
        private string cGFtNameField;
        
        private string cGLtNameField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string ctryCodeField;
        
        private string stateField;
        
        private bool recordFoundField;
        
        private bool recordLockedField;
        
        private string phoneNumberField;
        
        private string cGPhoneNumberField;
        
        private string tokenIDField;
        
        private object[] guidListField;
        
        private CallResponse guidRestResponseField;
        
        private string gUIDField;
        
        private string externalRefIDField;
        
        private string type_CDField;
        
        private int waitTimeField;
        
        private string relationshipCodeField;
        
        private long scheduleIDField;
        
        private long recordIDField;
        
        private int memberIDField;
        
        private int cGMemberIDField;
        
        private int rootBuddyIDField;
        
        private string zipCodeField;
        
        private string accountTypeCodeField;
        
        private string emailAddressField;
        
        private string textMessageAddressField;
        
        private int mobileFeaturesField;
        
        private int sponsorIDField;
        
        private int networkRefIDField;
        
        private bool optInField;
        
        private int maxCallWaitField;
        
        private string msgTypeField;
        
        private int senderMemberIDField;
        
        private string msgTextField;
        
        private string fromPhoneNumberField;
        
        /// <remarks/>
        public bool IsQueued {
            get {
                return this.isQueuedField;
            }
            set {
                this.isQueuedField = value;
            }
        }
        
        /// <remarks/>
        public string JobID {
            get {
                return this.jobIDField;
            }
            set {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneRequestID {
            get {
                return this.phoneRequestIDField;
            }
            set {
                this.phoneRequestIDField = value;
            }
        }
        
        /// <remarks/>
        public int CaregiverID {
            get {
                return this.caregiverIDField;
            }
            set {
                this.caregiverIDField = value;
            }
        }
        
        /// <remarks/>
        public long CallDuration {
            get {
                return this.callDurationField;
            }
            set {
                this.callDurationField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceCode {
            get {
                return this.serviceCodeField;
            }
            set {
                this.serviceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MsgURL {
            get {
                return this.msgURLField;
            }
            set {
                this.msgURLField = value;
            }
        }
        
        /// <remarks/>
        public bool HasCustomMsg {
            get {
                return this.hasCustomMsgField;
            }
            set {
                this.hasCustomMsgField = value;
            }
        }
        
        /// <remarks/>
        public long MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public char Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public int RefID {
            get {
                return this.refIDField;
            }
            set {
                this.refIDField = value;
            }
        }
        
        /// <remarks/>
        public int BuddyID {
            get {
                return this.buddyIDField;
            }
            set {
                this.buddyIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public int CallMonth {
            get {
                return this.callMonthField;
            }
            set {
                this.callMonthField = value;
            }
        }
        
        /// <remarks/>
        public int CallDay {
            get {
                return this.callDayField;
            }
            set {
                this.callDayField = value;
            }
        }
        
        /// <remarks/>
        public int SMSProviderID {
            get {
                return this.sMSProviderIDField;
            }
            set {
                this.sMSProviderIDField = value;
            }
        }
        
        /// <remarks/>
        public int CallYear {
            get {
                return this.callYearField;
            }
            set {
                this.callYearField = value;
            }
        }
        
        /// <remarks/>
        public string CallFreq {
            get {
                return this.callFreqField;
            }
            set {
                this.callFreqField = value;
            }
        }
        
        /// <remarks/>
        public string CallOutcome {
            get {
                return this.callOutcomeField;
            }
            set {
                this.callOutcomeField = value;
            }
        }
        
        /// <remarks/>
        public int CallTime {
            get {
                return this.callTimeField;
            }
            set {
                this.callTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CallStartTime {
            get {
                return this.callStartTimeField;
            }
            set {
                this.callStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CallEndTime {
            get {
                return this.callEndTimeField;
            }
            set {
                this.callEndTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CallDate {
            get {
                return this.callDateField;
            }
            set {
                this.callDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StopDate {
            get {
                return this.stopDateField;
            }
            set {
                this.stopDateField = value;
            }
        }
        
        /// <remarks/>
        public int MaxRecalls {
            get {
                return this.maxRecallsField;
            }
            set {
                this.maxRecallsField = value;
            }
        }
        
        /// <remarks/>
        public int RecallsMade {
            get {
                return this.recallsMadeField;
            }
            set {
                this.recallsMadeField = value;
            }
        }
        
        /// <remarks/>
        public string CallingStatus {
            get {
                return this.callingStatusField;
            }
            set {
                this.callingStatusField = value;
            }
        }
        
        /// <remarks/>
        public string SubCategory {
            get {
                return this.subCategoryField;
            }
            set {
                this.subCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public int ContactTypeCode {
            get {
                return this.contactTypeCodeField;
            }
            set {
                this.contactTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public int BcsTestCode {
            get {
                return this.bcsTestCodeField;
            }
            set {
                this.bcsTestCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOutCall {
            get {
                return this.isOutCallField;
            }
            set {
                this.isOutCallField = value;
            }
        }
        
        /// <remarks/>
        public string CGSiteID {
            get {
                return this.cGSiteIDField;
            }
            set {
                this.cGSiteIDField = value;
            }
        }
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string FtName {
            get {
                return this.ftNameField;
            }
            set {
                this.ftNameField = value;
            }
        }
        
        /// <remarks/>
        public string LtName {
            get {
                return this.ltNameField;
            }
            set {
                this.ltNameField = value;
            }
        }
        
        /// <remarks/>
        public string CGFtName {
            get {
                return this.cGFtNameField;
            }
            set {
                this.cGFtNameField = value;
            }
        }
        
        /// <remarks/>
        public string CGLtName {
            get {
                return this.cGLtNameField;
            }
            set {
                this.cGLtNameField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string CtryCode {
            get {
                return this.ctryCodeField;
            }
            set {
                this.ctryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public bool RecordFound {
            get {
                return this.recordFoundField;
            }
            set {
                this.recordFoundField = value;
            }
        }
        
        /// <remarks/>
        public bool RecordLocked {
            get {
                return this.recordLockedField;
            }
            set {
                this.recordLockedField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CGPhoneNumber {
            get {
                return this.cGPhoneNumberField;
            }
            set {
                this.cGPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TokenID {
            get {
                return this.tokenIDField;
            }
            set {
                this.tokenIDField = value;
            }
        }
        
        /// <remarks/>
        public object[] GuidList {
            get {
                return this.guidListField;
            }
            set {
                this.guidListField = value;
            }
        }
        
        /// <remarks/>
        public CallResponse GuidRestResponse {
            get {
                return this.guidRestResponseField;
            }
            set {
                this.guidRestResponseField = value;
            }
        }
        
        /// <remarks/>
        public string GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalRefID {
            get {
                return this.externalRefIDField;
            }
            set {
                this.externalRefIDField = value;
            }
        }
        
        /// <remarks/>
        public string Type_CD {
            get {
                return this.type_CDField;
            }
            set {
                this.type_CDField = value;
            }
        }
        
        /// <remarks/>
        public int WaitTime {
            get {
                return this.waitTimeField;
            }
            set {
                this.waitTimeField = value;
            }
        }
        
        /// <remarks/>
        public string RelationshipCode {
            get {
                return this.relationshipCodeField;
            }
            set {
                this.relationshipCodeField = value;
            }
        }
        
        /// <remarks/>
        public long ScheduleID {
            get {
                return this.scheduleIDField;
            }
            set {
                this.scheduleIDField = value;
            }
        }
        
        /// <remarks/>
        public long RecordID {
            get {
                return this.recordIDField;
            }
            set {
                this.recordIDField = value;
            }
        }
        
        /// <remarks/>
        public int MemberID {
            get {
                return this.memberIDField;
            }
            set {
                this.memberIDField = value;
            }
        }
        
        /// <remarks/>
        public int CGMemberID {
            get {
                return this.cGMemberIDField;
            }
            set {
                this.cGMemberIDField = value;
            }
        }
        
        /// <remarks/>
        public int RootBuddyID {
            get {
                return this.rootBuddyIDField;
            }
            set {
                this.rootBuddyIDField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTypeCode {
            get {
                return this.accountTypeCodeField;
            }
            set {
                this.accountTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string TextMessageAddress {
            get {
                return this.textMessageAddressField;
            }
            set {
                this.textMessageAddressField = value;
            }
        }
        
        /// <remarks/>
        public int MobileFeatures {
            get {
                return this.mobileFeaturesField;
            }
            set {
                this.mobileFeaturesField = value;
            }
        }
        
        /// <remarks/>
        public int SponsorID {
            get {
                return this.sponsorIDField;
            }
            set {
                this.sponsorIDField = value;
            }
        }
        
        /// <remarks/>
        public int NetworkRefID {
            get {
                return this.networkRefIDField;
            }
            set {
                this.networkRefIDField = value;
            }
        }
        
        /// <remarks/>
        public bool OptIn {
            get {
                return this.optInField;
            }
            set {
                this.optInField = value;
            }
        }
        
        /// <remarks/>
        public int MaxCallWait {
            get {
                return this.maxCallWaitField;
            }
            set {
                this.maxCallWaitField = value;
            }
        }
        
        /// <remarks/>
        public string MsgType {
            get {
                return this.msgTypeField;
            }
            set {
                this.msgTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SenderMemberID {
            get {
                return this.senderMemberIDField;
            }
            set {
                this.senderMemberIDField = value;
            }
        }
        
        /// <remarks/>
        public string MsgText {
            get {
                return this.msgTextField;
            }
            set {
                this.msgTextField = value;
            }
        }
        
        /// <remarks/>
        public string FromPhoneNumber {
            get {
                return this.fromPhoneNumberField;
            }
            set {
                this.fromPhoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class AutoTextMsgs {
        
        private int responseSeqField;
        
        private long responseIDField;
        
        private System.DateTime dateCreatedField;
        
        private string responseURLField;
        
        private string responseTextField;
        
        private string responseTypeField;
        
        private long scheduleIDField;
        
        private System.DateTime msgCreatedField;
        
        private string faxField;
        
        private string msgCategoryField;
        
        private string msgSubCategoryField;
        
        private string emailFileField;
        
        private string accountTypeCodeField;
        
        private int msgNewCountField;
        
        private int msgNewTypeCountField;
        
        private int msgOldCountField;
        
        private int msgOldTypeCountField;
        
        private string msgTextTTSField;
        
        private string msgTxtSMSField;
        
        private bool msgRecordedField;
        
        private bool msgReplySentField;
        
        private bool msgReadField;
        
        private string msgAlertField;
        
        private string fromPhoneNumField;
        
        private System.DateTime bidDateField;
        
        private string msgURLField;
        
        private object[] msgValuesField;
        
        private object[] msgGroupField;
        
        private int callerIdField;
        
        private string msgTypeField;
        
        private string msgShortCodeField;
        
        private string msgTTSField;
        
        private System.DateTime bidTimeField;
        
        private string goodDestField;
        
        private string sucessMsgField;
        
        private string failureMsgField;
        
        private string badDestField;
        
        private bool isParsedField;
        
        private bool validFromEmailAddrFoundField;
        
        private bool validFromPhoneFoundField;
        
        private int msgValueCountField;
        
        private bool msgValuesFoundField;
        
        private bool msgSubjectFoundField;
        
        private bool msgReceiverFoundField;
        
        private bool msgSenderFoundField;
        
        private bool msgShortCodeFoundField;
        
        private bool msgCompleteField;
        
        private int categoryIDField;
        
        private int mobileFeaturesField;
        
        private object[] pictureLinkField;
        
        private object[] videoLinkField;
        
        private string toAddressField;
        
        private string toPhoneNumberField;
        
        private string fromPhonenumberField;
        
        private string fromAddressField;
        
        private string msgTextField;
        
        private string msgSubjectField;
        
        private string msgTitleField;
        
        private int itemNumberField;
        
        private string memberNumberField;
        
        private bool msgSentField;
        
        private int providerIDField;
        
        private string providerDomainField;
        
        private string receiverDomainField;
        
        private bool isLoadedField;
        
        private int msgPriorityField;
        
        private int senderMemberIDField;
        
        private int receiverMemberIDField;
        
        private int senderSponsorIDField;
        
        private int receiverSponsorIDField;
        
        private int senderNetworkIDField;
        
        private string senderCountryCodeField;
        
        private int receiverNetworkIDField;
        
        private string receiverCountryCodeField;
        
        private System.DateTime msgReceivedField;
        
        private bool isApprovedField;
        
        private bool isAcknowledgedField;
        
        private string msgStatusField;
        
        private int lastUpdatedByField;
        
        private long msgNumberField;
        
        private System.DateTime lastUpdatedField;
        
        /// <remarks/>
        public int ResponseSeq {
            get {
                return this.responseSeqField;
            }
            set {
                this.responseSeqField = value;
            }
        }
        
        /// <remarks/>
        public long ResponseID {
            get {
                return this.responseIDField;
            }
            set {
                this.responseIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseURL {
            get {
                return this.responseURLField;
            }
            set {
                this.responseURLField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseText {
            get {
                return this.responseTextField;
            }
            set {
                this.responseTextField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseType {
            get {
                return this.responseTypeField;
            }
            set {
                this.responseTypeField = value;
            }
        }
        
        /// <remarks/>
        public long ScheduleID {
            get {
                return this.scheduleIDField;
            }
            set {
                this.scheduleIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MsgCreated {
            get {
                return this.msgCreatedField;
            }
            set {
                this.msgCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string MsgCategory {
            get {
                return this.msgCategoryField;
            }
            set {
                this.msgCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string MsgSubCategory {
            get {
                return this.msgSubCategoryField;
            }
            set {
                this.msgSubCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string EmailFile {
            get {
                return this.emailFileField;
            }
            set {
                this.emailFileField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTypeCode {
            get {
                return this.accountTypeCodeField;
            }
            set {
                this.accountTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public int MsgNewCount {
            get {
                return this.msgNewCountField;
            }
            set {
                this.msgNewCountField = value;
            }
        }
        
        /// <remarks/>
        public int MsgNewTypeCount {
            get {
                return this.msgNewTypeCountField;
            }
            set {
                this.msgNewTypeCountField = value;
            }
        }
        
        /// <remarks/>
        public int MsgOldCount {
            get {
                return this.msgOldCountField;
            }
            set {
                this.msgOldCountField = value;
            }
        }
        
        /// <remarks/>
        public int MsgOldTypeCount {
            get {
                return this.msgOldTypeCountField;
            }
            set {
                this.msgOldTypeCountField = value;
            }
        }
        
        /// <remarks/>
        public string MsgTextTTS {
            get {
                return this.msgTextTTSField;
            }
            set {
                this.msgTextTTSField = value;
            }
        }
        
        /// <remarks/>
        public string MsgTxtSMS {
            get {
                return this.msgTxtSMSField;
            }
            set {
                this.msgTxtSMSField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgRecorded {
            get {
                return this.msgRecordedField;
            }
            set {
                this.msgRecordedField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgReplySent {
            get {
                return this.msgReplySentField;
            }
            set {
                this.msgReplySentField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgRead {
            get {
                return this.msgReadField;
            }
            set {
                this.msgReadField = value;
            }
        }
        
        /// <remarks/>
        public string MsgAlert {
            get {
                return this.msgAlertField;
            }
            set {
                this.msgAlertField = value;
            }
        }
        
        /// <remarks/>
        public string FromPhoneNum {
            get {
                return this.fromPhoneNumField;
            }
            set {
                this.fromPhoneNumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BidDate {
            get {
                return this.bidDateField;
            }
            set {
                this.bidDateField = value;
            }
        }
        
        /// <remarks/>
        public string MsgURL {
            get {
                return this.msgURLField;
            }
            set {
                this.msgURLField = value;
            }
        }
        
        /// <remarks/>
        public object[] MsgValues {
            get {
                return this.msgValuesField;
            }
            set {
                this.msgValuesField = value;
            }
        }
        
        /// <remarks/>
        public object[] MsgGroup {
            get {
                return this.msgGroupField;
            }
            set {
                this.msgGroupField = value;
            }
        }
        
        /// <remarks/>
        public int CallerId {
            get {
                return this.callerIdField;
            }
            set {
                this.callerIdField = value;
            }
        }
        
        /// <remarks/>
        public string MsgType {
            get {
                return this.msgTypeField;
            }
            set {
                this.msgTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MsgShortCode {
            get {
                return this.msgShortCodeField;
            }
            set {
                this.msgShortCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MsgTTS {
            get {
                return this.msgTTSField;
            }
            set {
                this.msgTTSField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BidTime {
            get {
                return this.bidTimeField;
            }
            set {
                this.bidTimeField = value;
            }
        }
        
        /// <remarks/>
        public string GoodDest {
            get {
                return this.goodDestField;
            }
            set {
                this.goodDestField = value;
            }
        }
        
        /// <remarks/>
        public string SucessMsg {
            get {
                return this.sucessMsgField;
            }
            set {
                this.sucessMsgField = value;
            }
        }
        
        /// <remarks/>
        public string FailureMsg {
            get {
                return this.failureMsgField;
            }
            set {
                this.failureMsgField = value;
            }
        }
        
        /// <remarks/>
        public string BadDest {
            get {
                return this.badDestField;
            }
            set {
                this.badDestField = value;
            }
        }
        
        /// <remarks/>
        public bool IsParsed {
            get {
                return this.isParsedField;
            }
            set {
                this.isParsedField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidFromEmailAddrFound {
            get {
                return this.validFromEmailAddrFoundField;
            }
            set {
                this.validFromEmailAddrFoundField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidFromPhoneFound {
            get {
                return this.validFromPhoneFoundField;
            }
            set {
                this.validFromPhoneFoundField = value;
            }
        }
        
        /// <remarks/>
        public int MsgValueCount {
            get {
                return this.msgValueCountField;
            }
            set {
                this.msgValueCountField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgValuesFound {
            get {
                return this.msgValuesFoundField;
            }
            set {
                this.msgValuesFoundField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgSubjectFound {
            get {
                return this.msgSubjectFoundField;
            }
            set {
                this.msgSubjectFoundField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgReceiverFound {
            get {
                return this.msgReceiverFoundField;
            }
            set {
                this.msgReceiverFoundField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgSenderFound {
            get {
                return this.msgSenderFoundField;
            }
            set {
                this.msgSenderFoundField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgShortCodeFound {
            get {
                return this.msgShortCodeFoundField;
            }
            set {
                this.msgShortCodeFoundField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgComplete {
            get {
                return this.msgCompleteField;
            }
            set {
                this.msgCompleteField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public int MobileFeatures {
            get {
                return this.mobileFeaturesField;
            }
            set {
                this.mobileFeaturesField = value;
            }
        }
        
        /// <remarks/>
        public object[] PictureLink {
            get {
                return this.pictureLinkField;
            }
            set {
                this.pictureLinkField = value;
            }
        }
        
        /// <remarks/>
        public object[] VideoLink {
            get {
                return this.videoLinkField;
            }
            set {
                this.videoLinkField = value;
            }
        }
        
        /// <remarks/>
        public string ToAddress {
            get {
                return this.toAddressField;
            }
            set {
                this.toAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ToPhoneNumber {
            get {
                return this.toPhoneNumberField;
            }
            set {
                this.toPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FromPhonenumber {
            get {
                return this.fromPhonenumberField;
            }
            set {
                this.fromPhonenumberField = value;
            }
        }
        
        /// <remarks/>
        public string FromAddress {
            get {
                return this.fromAddressField;
            }
            set {
                this.fromAddressField = value;
            }
        }
        
        /// <remarks/>
        public string MsgText {
            get {
                return this.msgTextField;
            }
            set {
                this.msgTextField = value;
            }
        }
        
        /// <remarks/>
        public string MsgSubject {
            get {
                return this.msgSubjectField;
            }
            set {
                this.msgSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string MsgTitle {
            get {
                return this.msgTitleField;
            }
            set {
                this.msgTitleField = value;
            }
        }
        
        /// <remarks/>
        public int ItemNumber {
            get {
                return this.itemNumberField;
            }
            set {
                this.itemNumberField = value;
            }
        }
        
        /// <remarks/>
        public string MemberNumber {
            get {
                return this.memberNumberField;
            }
            set {
                this.memberNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgSent {
            get {
                return this.msgSentField;
            }
            set {
                this.msgSentField = value;
            }
        }
        
        /// <remarks/>
        public int ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderDomain {
            get {
                return this.providerDomainField;
            }
            set {
                this.providerDomainField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiverDomain {
            get {
                return this.receiverDomainField;
            }
            set {
                this.receiverDomainField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLoaded {
            get {
                return this.isLoadedField;
            }
            set {
                this.isLoadedField = value;
            }
        }
        
        /// <remarks/>
        public int MsgPriority {
            get {
                return this.msgPriorityField;
            }
            set {
                this.msgPriorityField = value;
            }
        }
        
        /// <remarks/>
        public int SenderMemberID {
            get {
                return this.senderMemberIDField;
            }
            set {
                this.senderMemberIDField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiverMemberID {
            get {
                return this.receiverMemberIDField;
            }
            set {
                this.receiverMemberIDField = value;
            }
        }
        
        /// <remarks/>
        public int SenderSponsorID {
            get {
                return this.senderSponsorIDField;
            }
            set {
                this.senderSponsorIDField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiverSponsorID {
            get {
                return this.receiverSponsorIDField;
            }
            set {
                this.receiverSponsorIDField = value;
            }
        }
        
        /// <remarks/>
        public int SenderNetworkID {
            get {
                return this.senderNetworkIDField;
            }
            set {
                this.senderNetworkIDField = value;
            }
        }
        
        /// <remarks/>
        public string SenderCountryCode {
            get {
                return this.senderCountryCodeField;
            }
            set {
                this.senderCountryCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiverNetworkID {
            get {
                return this.receiverNetworkIDField;
            }
            set {
                this.receiverNetworkIDField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiverCountryCode {
            get {
                return this.receiverCountryCodeField;
            }
            set {
                this.receiverCountryCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MsgReceived {
            get {
                return this.msgReceivedField;
            }
            set {
                this.msgReceivedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsApproved {
            get {
                return this.isApprovedField;
            }
            set {
                this.isApprovedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAcknowledged {
            get {
                return this.isAcknowledgedField;
            }
            set {
                this.isAcknowledgedField = value;
            }
        }
        
        /// <remarks/>
        public string MsgStatus {
            get {
                return this.msgStatusField;
            }
            set {
                this.msgStatusField = value;
            }
        }
        
        /// <remarks/>
        public int LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        public long MsgNumber {
            get {
                return this.msgNumberField;
            }
            set {
                this.msgNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class LogonClass {
        
        private int memberIdField;
        
        private string phoneNumberField;
        
        private string userIDField;
        
        private string pswdField;
        
        private string licKeyField;
        
        private string messageField;
        
        private LoginStates loginStatusField;
        
        private LoginCode messageCodeField;
        
        /// <remarks/>
        public int MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Pswd {
            get {
                return this.pswdField;
            }
            set {
                this.pswdField = value;
            }
        }
        
        /// <remarks/>
        public string LicKey {
            get {
                return this.licKeyField;
            }
            set {
                this.licKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public LoginStates LoginStatus {
            get {
                return this.loginStatusField;
            }
            set {
                this.loginStatusField = value;
            }
        }
        
        /// <remarks/>
        public LoginCode MessageCode {
            get {
                return this.messageCodeField;
            }
            set {
                this.messageCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public enum LoginStates {
        
        /// <remarks/>
        LoggedIn,
        
        /// <remarks/>
        LoggedOut,
        
        /// <remarks/>
        FailedLogin,
        
        /// <remarks/>
        LockedLogin,
        
        /// <remarks/>
        NewPhoneId,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public enum LoginCode {
        
        /// <remarks/>
        NoCode,
        
        /// <remarks/>
        NotRegistered,
        
        /// <remarks/>
        RegisteredOnly,
        
        /// <remarks/>
        RegisteredNoLogon,
        
        /// <remarks/>
        RegisteredWithLogon,
        
        /// <remarks/>
        LoginError,
        
        /// <remarks/>
        PhoneIdGenerated,
        
        /// <remarks/>
        PhoneIdNOTGenerated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class ShortCodeClass {
        
        private string shortCodeField;
        
        private string shortCodeTextField;
        
        private string shortCodeTTSField;
        
        private long shortCodeIDField;
        
        private int contactTypeCodeField;
        
        private int actionCodeField;
        
        private string actionCodeDescField;
        
        private bool isShortCodeLoadedField;
        
        private bool processCompleteField;
        
        private string statusMsgField;
        
        private bool codeLoadedField;
        
        private double feeField;
        
        private int refIDField;
        
        private string faxField;
        
        private string fileNameField;
        
        /// <remarks/>
        public string ShortCode {
            get {
                return this.shortCodeField;
            }
            set {
                this.shortCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShortCodeText {
            get {
                return this.shortCodeTextField;
            }
            set {
                this.shortCodeTextField = value;
            }
        }
        
        /// <remarks/>
        public string ShortCodeTTS {
            get {
                return this.shortCodeTTSField;
            }
            set {
                this.shortCodeTTSField = value;
            }
        }
        
        /// <remarks/>
        public long ShortCodeID {
            get {
                return this.shortCodeIDField;
            }
            set {
                this.shortCodeIDField = value;
            }
        }
        
        /// <remarks/>
        public int ContactTypeCode {
            get {
                return this.contactTypeCodeField;
            }
            set {
                this.contactTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ActionCode {
            get {
                return this.actionCodeField;
            }
            set {
                this.actionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ActionCodeDesc {
            get {
                return this.actionCodeDescField;
            }
            set {
                this.actionCodeDescField = value;
            }
        }
        
        /// <remarks/>
        public bool IsShortCodeLoaded {
            get {
                return this.isShortCodeLoadedField;
            }
            set {
                this.isShortCodeLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool ProcessComplete {
            get {
                return this.processCompleteField;
            }
            set {
                this.processCompleteField = value;
            }
        }
        
        /// <remarks/>
        public string StatusMsg {
            get {
                return this.statusMsgField;
            }
            set {
                this.statusMsgField = value;
            }
        }
        
        /// <remarks/>
        public bool CodeLoaded {
            get {
                return this.codeLoadedField;
            }
            set {
                this.codeLoadedField = value;
            }
        }
        
        /// <remarks/>
        public double Fee {
            get {
                return this.feeField;
            }
            set {
                this.feeField = value;
            }
        }
        
        /// <remarks/>
        public int RefID {
            get {
                return this.refIDField;
            }
            set {
                this.refIDField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class BCNProfile {
        
        private int conditionChgIndField;
        
        private long bscLogIDField;
        
        private int buddyIDField;
        
        private int rootBuddyIDField;
        
        private string provider_Type_CDField;
        
        private string geoAreaField;
        
        private string providerDescField;
        
        private string cGSiteIDField;
        
        private string providerIDField;
        
        private string accountTypeCodeField;
        
        private dsMemberProfile profileDSField;
        
        private System.Data.DataSet dsField;
        
        private System.Data.DataSet providerDSField;
        
        private long profileIDField;
        
        private long bCSTestCodeField;
        
        private int memberIdField;
        
        private int netWorkRefIdField;
        
        private int sponsorIdField;
        
        private string statusMsgField;
        
        private bool isBSSetField;
        
        private bool isTPSetField;
        
        private bool isWTSetField;
        
        private bool isBPSetField;
        
        private bool isO2SetField;
        
        private bool isFiSetField;
        
        private bool isCondSetField;
        
        private bool isMsgSentField;
        
        private bool isRequiredField;
        
        private bool isPassedField;
        
        private bool isProfileLoadedField;
        
        private bool isProviderLoadedField;
        
        private bool processCompleteField;
        
        private bool isFastField;
        
        private long currBCSTestField;
        
        private long lastBCSTestField;
        
        private long currBCSTestCodeField;
        
        private System.DateTime lastUpdatedField;
        
        private int lastUpdatedByField;
        
        private float currTpMaxField;
        
        private float currTpMinField;
        
        private int currTpTypeField;
        
        private int currSystolicMaxField;
        
        private int currDiastolicMaxField;
        
        private int currSystolicMinField;
        
        private int currDiastolicMinField;
        
        private int currWtMaxField;
        
        private int currWtMinField;
        
        private double currO2MaxField;
        
        private double currO2MinField;
        
        private double currFiMaxField;
        
        private double currFiMinField;
        
        private int currWtTypeField;
        
        private int currBsTypeField;
        
        private int currCondTypeField;
        
        private int currBpTypeField;
        
        private int currO2TypeField;
        
        private int currFiTypeField;
        
        private int currBsMinField;
        
        private int currBsMaxField;
        
        private int bsField;
        
        private int wtField;
        
        private float tpField;
        
        private double o2Field;
        
        private double fiField;
        
        private double heightField;
        
        private int systolicField;
        
        private int diastolicField;
        
        private int bSTriggerField;
        
        private int wTTriggerField;
        
        private float tPTriggerField;
        
        private int systolicTriggerField;
        
        private int diastolicTriggerField;
        
        private double o2TriggerField;
        
        private double fITriggerField;
        
        /// <remarks/>
        public int ConditionChgInd {
            get {
                return this.conditionChgIndField;
            }
            set {
                this.conditionChgIndField = value;
            }
        }
        
        /// <remarks/>
        public long BscLogID {
            get {
                return this.bscLogIDField;
            }
            set {
                this.bscLogIDField = value;
            }
        }
        
        /// <remarks/>
        public int BuddyID {
            get {
                return this.buddyIDField;
            }
            set {
                this.buddyIDField = value;
            }
        }
        
        /// <remarks/>
        public int RootBuddyID {
            get {
                return this.rootBuddyIDField;
            }
            set {
                this.rootBuddyIDField = value;
            }
        }
        
        /// <remarks/>
        public string Provider_Type_CD {
            get {
                return this.provider_Type_CDField;
            }
            set {
                this.provider_Type_CDField = value;
            }
        }
        
        /// <remarks/>
        public string GeoArea {
            get {
                return this.geoAreaField;
            }
            set {
                this.geoAreaField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderDesc {
            get {
                return this.providerDescField;
            }
            set {
                this.providerDescField = value;
            }
        }
        
        /// <remarks/>
        public string CGSiteID {
            get {
                return this.cGSiteIDField;
            }
            set {
                this.cGSiteIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTypeCode {
            get {
                return this.accountTypeCodeField;
            }
            set {
                this.accountTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public dsMemberProfile ProfileDS {
            get {
                return this.profileDSField;
            }
            set {
                this.profileDSField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet DS {
            get {
                return this.dsField;
            }
            set {
                this.dsField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ProviderDS {
            get {
                return this.providerDSField;
            }
            set {
                this.providerDSField = value;
            }
        }
        
        /// <remarks/>
        public long ProfileID {
            get {
                return this.profileIDField;
            }
            set {
                this.profileIDField = value;
            }
        }
        
        /// <remarks/>
        public long BCSTestCode {
            get {
                return this.bCSTestCodeField;
            }
            set {
                this.bCSTestCodeField = value;
            }
        }
        
        /// <remarks/>
        public int MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public int NetWorkRefId {
            get {
                return this.netWorkRefIdField;
            }
            set {
                this.netWorkRefIdField = value;
            }
        }
        
        /// <remarks/>
        public int SponsorId {
            get {
                return this.sponsorIdField;
            }
            set {
                this.sponsorIdField = value;
            }
        }
        
        /// <remarks/>
        public string StatusMsg {
            get {
                return this.statusMsgField;
            }
            set {
                this.statusMsgField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBSSet {
            get {
                return this.isBSSetField;
            }
            set {
                this.isBSSetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTPSet {
            get {
                return this.isTPSetField;
            }
            set {
                this.isTPSetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsWTSet {
            get {
                return this.isWTSetField;
            }
            set {
                this.isWTSetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBPSet {
            get {
                return this.isBPSetField;
            }
            set {
                this.isBPSetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsO2Set {
            get {
                return this.isO2SetField;
            }
            set {
                this.isO2SetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFiSet {
            get {
                return this.isFiSetField;
            }
            set {
                this.isFiSetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCondSet {
            get {
                return this.isCondSetField;
            }
            set {
                this.isCondSetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMsgSent {
            get {
                return this.isMsgSentField;
            }
            set {
                this.isMsgSentField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRequired {
            get {
                return this.isRequiredField;
            }
            set {
                this.isRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPassed {
            get {
                return this.isPassedField;
            }
            set {
                this.isPassedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProfileLoaded {
            get {
                return this.isProfileLoadedField;
            }
            set {
                this.isProfileLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProviderLoaded {
            get {
                return this.isProviderLoadedField;
            }
            set {
                this.isProviderLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool ProcessComplete {
            get {
                return this.processCompleteField;
            }
            set {
                this.processCompleteField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFast {
            get {
                return this.isFastField;
            }
            set {
                this.isFastField = value;
            }
        }
        
        /// <remarks/>
        public long CurrBCSTest {
            get {
                return this.currBCSTestField;
            }
            set {
                this.currBCSTestField = value;
            }
        }
        
        /// <remarks/>
        public long LastBCSTest {
            get {
                return this.lastBCSTestField;
            }
            set {
                this.lastBCSTestField = value;
            }
        }
        
        /// <remarks/>
        public long CurrBCSTestCode {
            get {
                return this.currBCSTestCodeField;
            }
            set {
                this.currBCSTestCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public int LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        public float CurrTpMax {
            get {
                return this.currTpMaxField;
            }
            set {
                this.currTpMaxField = value;
            }
        }
        
        /// <remarks/>
        public float CurrTpMin {
            get {
                return this.currTpMinField;
            }
            set {
                this.currTpMinField = value;
            }
        }
        
        /// <remarks/>
        public int CurrTpType {
            get {
                return this.currTpTypeField;
            }
            set {
                this.currTpTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrSystolicMax {
            get {
                return this.currSystolicMaxField;
            }
            set {
                this.currSystolicMaxField = value;
            }
        }
        
        /// <remarks/>
        public int CurrDiastolicMax {
            get {
                return this.currDiastolicMaxField;
            }
            set {
                this.currDiastolicMaxField = value;
            }
        }
        
        /// <remarks/>
        public int CurrSystolicMin {
            get {
                return this.currSystolicMinField;
            }
            set {
                this.currSystolicMinField = value;
            }
        }
        
        /// <remarks/>
        public int CurrDiastolicMin {
            get {
                return this.currDiastolicMinField;
            }
            set {
                this.currDiastolicMinField = value;
            }
        }
        
        /// <remarks/>
        public int CurrWtMax {
            get {
                return this.currWtMaxField;
            }
            set {
                this.currWtMaxField = value;
            }
        }
        
        /// <remarks/>
        public int CurrWtMin {
            get {
                return this.currWtMinField;
            }
            set {
                this.currWtMinField = value;
            }
        }
        
        /// <remarks/>
        public double CurrO2Max {
            get {
                return this.currO2MaxField;
            }
            set {
                this.currO2MaxField = value;
            }
        }
        
        /// <remarks/>
        public double CurrO2Min {
            get {
                return this.currO2MinField;
            }
            set {
                this.currO2MinField = value;
            }
        }
        
        /// <remarks/>
        public double CurrFiMax {
            get {
                return this.currFiMaxField;
            }
            set {
                this.currFiMaxField = value;
            }
        }
        
        /// <remarks/>
        public double CurrFiMin {
            get {
                return this.currFiMinField;
            }
            set {
                this.currFiMinField = value;
            }
        }
        
        /// <remarks/>
        public int CurrWtType {
            get {
                return this.currWtTypeField;
            }
            set {
                this.currWtTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrBsType {
            get {
                return this.currBsTypeField;
            }
            set {
                this.currBsTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrCondType {
            get {
                return this.currCondTypeField;
            }
            set {
                this.currCondTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrBpType {
            get {
                return this.currBpTypeField;
            }
            set {
                this.currBpTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrO2Type {
            get {
                return this.currO2TypeField;
            }
            set {
                this.currO2TypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrFiType {
            get {
                return this.currFiTypeField;
            }
            set {
                this.currFiTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrBsMin {
            get {
                return this.currBsMinField;
            }
            set {
                this.currBsMinField = value;
            }
        }
        
        /// <remarks/>
        public int CurrBsMax {
            get {
                return this.currBsMaxField;
            }
            set {
                this.currBsMaxField = value;
            }
        }
        
        /// <remarks/>
        public int BS {
            get {
                return this.bsField;
            }
            set {
                this.bsField = value;
            }
        }
        
        /// <remarks/>
        public int WT {
            get {
                return this.wtField;
            }
            set {
                this.wtField = value;
            }
        }
        
        /// <remarks/>
        public float TP {
            get {
                return this.tpField;
            }
            set {
                this.tpField = value;
            }
        }
        
        /// <remarks/>
        public double O2 {
            get {
                return this.o2Field;
            }
            set {
                this.o2Field = value;
            }
        }
        
        /// <remarks/>
        public double FI {
            get {
                return this.fiField;
            }
            set {
                this.fiField = value;
            }
        }
        
        /// <remarks/>
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public int Systolic {
            get {
                return this.systolicField;
            }
            set {
                this.systolicField = value;
            }
        }
        
        /// <remarks/>
        public int Diastolic {
            get {
                return this.diastolicField;
            }
            set {
                this.diastolicField = value;
            }
        }
        
        /// <remarks/>
        public int BSTrigger {
            get {
                return this.bSTriggerField;
            }
            set {
                this.bSTriggerField = value;
            }
        }
        
        /// <remarks/>
        public int WTTrigger {
            get {
                return this.wTTriggerField;
            }
            set {
                this.wTTriggerField = value;
            }
        }
        
        /// <remarks/>
        public float TPTrigger {
            get {
                return this.tPTriggerField;
            }
            set {
                this.tPTriggerField = value;
            }
        }
        
        /// <remarks/>
        public int SystolicTrigger {
            get {
                return this.systolicTriggerField;
            }
            set {
                this.systolicTriggerField = value;
            }
        }
        
        /// <remarks/>
        public int DiastolicTrigger {
            get {
                return this.diastolicTriggerField;
            }
            set {
                this.diastolicTriggerField = value;
            }
        }
        
        /// <remarks/>
        public double O2Trigger {
            get {
                return this.o2TriggerField;
            }
            set {
                this.o2TriggerField = value;
            }
        }
        
        /// <remarks/>
        public double FITrigger {
            get {
                return this.fITriggerField;
            }
            set {
                this.fITriggerField = value;
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsMemberProfile")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    public partial class dsMemberProfile : global::System.Data.DataSet {
        
        private MemberProfileDataTable tableMemberProfile;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsMemberProfile() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsMemberProfile(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MemberProfile"] != null)) {
                    base.Tables.Add(new MemberProfileDataTable(ds.Tables["MemberProfile"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MemberProfileDataTable MemberProfile {
            get {
                return this.tableMemberProfile;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsMemberProfile cln = ((dsMemberProfile)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MemberProfile"] != null)) {
                    base.Tables.Add(new MemberProfileDataTable(ds.Tables["MemberProfile"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMemberProfile = ((MemberProfileDataTable)(base.Tables["MemberProfile"]));
            if ((initTable == true)) {
                if ((this.tableMemberProfile != null)) {
                    this.tableMemberProfile.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsMemberProfile";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsMemberProfile.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMemberProfile = new MemberProfileDataTable();
            base.Tables.Add(this.tableMemberProfile);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMemberProfile() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsMemberProfile ds = new dsMemberProfile();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MemberProfileRowChangeEventHandler(object sender, MemberProfileRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MemberProfileDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProfileID;
            
            private global::System.Data.DataColumn columnMemberID;
            
            private global::System.Data.DataColumn columnBCSTestCode;
            
            private global::System.Data.DataColumn columnBpType;
            
            private global::System.Data.DataColumn columnBsType;
            
            private global::System.Data.DataColumn columnWtType;
            
            private global::System.Data.DataColumn columnTpType;
            
            private global::System.Data.DataColumn columnSystolicMax;
            
            private global::System.Data.DataColumn columnDiastolicMax;
            
            private global::System.Data.DataColumn columnSystolicMin;
            
            private global::System.Data.DataColumn columnDiastolicMin;
            
            private global::System.Data.DataColumn columnBsMax;
            
            private global::System.Data.DataColumn columnBsMin;
            
            private global::System.Data.DataColumn columnTpMax;
            
            private global::System.Data.DataColumn columnTpMin;
            
            private global::System.Data.DataColumn columnWtMax;
            
            private global::System.Data.DataColumn columnWtMin;
            
            private global::System.Data.DataColumn columnLastUpdated;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MemberProfileDataTable() {
                this.TableName = "MemberProfile";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MemberProfileDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MemberProfileDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfileIDColumn {
                get {
                    return this.columnProfileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemberIDColumn {
                get {
                    return this.columnMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BCSTestCodeColumn {
                get {
                    return this.columnBCSTestCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BpTypeColumn {
                get {
                    return this.columnBpType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BsTypeColumn {
                get {
                    return this.columnBsType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WtTypeColumn {
                get {
                    return this.columnWtType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TpTypeColumn {
                get {
                    return this.columnTpType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SystolicMaxColumn {
                get {
                    return this.columnSystolicMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiastolicMaxColumn {
                get {
                    return this.columnDiastolicMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SystolicMinColumn {
                get {
                    return this.columnSystolicMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiastolicMinColumn {
                get {
                    return this.columnDiastolicMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BsMaxColumn {
                get {
                    return this.columnBsMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BsMinColumn {
                get {
                    return this.columnBsMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TpMaxColumn {
                get {
                    return this.columnTpMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TpMinColumn {
                get {
                    return this.columnTpMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WtMaxColumn {
                get {
                    return this.columnWtMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WtMinColumn {
                get {
                    return this.columnWtMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MemberProfileRow this[int index] {
                get {
                    return ((MemberProfileRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MemberProfileRowChangeEventHandler MemberProfileRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MemberProfileRowChangeEventHandler MemberProfileRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MemberProfileRowChangeEventHandler MemberProfileRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MemberProfileRowChangeEventHandler MemberProfileRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMemberProfileRow(MemberProfileRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MemberProfileRow AddMemberProfileRow(
                        System.Guid ProfileID, 
                        int MemberID, 
                        long BCSTestCode, 
                        int BpType, 
                        int BsType, 
                        int WtType, 
                        int TpType, 
                        int SystolicMax, 
                        int DiastolicMax, 
                        int SystolicMin, 
                        int DiastolicMin, 
                        int BsMax, 
                        int BsMin, 
                        int TpMax, 
                        int TpMin, 
                        double WtMax, 
                        double WtMin, 
                        System.DateTime LastUpdated, 
                        int LastUpdatedBy) {
                MemberProfileRow rowMemberProfileRow = ((MemberProfileRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProfileID,
                        MemberID,
                        BCSTestCode,
                        BpType,
                        BsType,
                        WtType,
                        TpType,
                        SystolicMax,
                        DiastolicMax,
                        SystolicMin,
                        DiastolicMin,
                        BsMax,
                        BsMin,
                        TpMax,
                        TpMin,
                        WtMax,
                        WtMin,
                        LastUpdated,
                        LastUpdatedBy};
                rowMemberProfileRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMemberProfileRow);
                return rowMemberProfileRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MemberProfileRow FindByProfileID(System.Guid ProfileID) {
                return ((MemberProfileRow)(this.Rows.Find(new object[] {
                            ProfileID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MemberProfileDataTable cln = ((MemberProfileDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MemberProfileDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProfileID = base.Columns["ProfileID"];
                this.columnMemberID = base.Columns["MemberID"];
                this.columnBCSTestCode = base.Columns["BCSTestCode"];
                this.columnBpType = base.Columns["BpType"];
                this.columnBsType = base.Columns["BsType"];
                this.columnWtType = base.Columns["WtType"];
                this.columnTpType = base.Columns["TpType"];
                this.columnSystolicMax = base.Columns["SystolicMax"];
                this.columnDiastolicMax = base.Columns["DiastolicMax"];
                this.columnSystolicMin = base.Columns["SystolicMin"];
                this.columnDiastolicMin = base.Columns["DiastolicMin"];
                this.columnBsMax = base.Columns["BsMax"];
                this.columnBsMin = base.Columns["BsMin"];
                this.columnTpMax = base.Columns["TpMax"];
                this.columnTpMin = base.Columns["TpMin"];
                this.columnWtMax = base.Columns["WtMax"];
                this.columnWtMin = base.Columns["WtMin"];
                this.columnLastUpdated = base.Columns["LastUpdated"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProfileID = new global::System.Data.DataColumn("ProfileID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfileID);
                this.columnMemberID = new global::System.Data.DataColumn("MemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberID);
                this.columnBCSTestCode = new global::System.Data.DataColumn("BCSTestCode", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCSTestCode);
                this.columnBpType = new global::System.Data.DataColumn("BpType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBpType);
                this.columnBsType = new global::System.Data.DataColumn("BsType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBsType);
                this.columnWtType = new global::System.Data.DataColumn("WtType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWtType);
                this.columnTpType = new global::System.Data.DataColumn("TpType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTpType);
                this.columnSystolicMax = new global::System.Data.DataColumn("SystolicMax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystolicMax);
                this.columnDiastolicMax = new global::System.Data.DataColumn("DiastolicMax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiastolicMax);
                this.columnSystolicMin = new global::System.Data.DataColumn("SystolicMin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystolicMin);
                this.columnDiastolicMin = new global::System.Data.DataColumn("DiastolicMin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiastolicMin);
                this.columnBsMax = new global::System.Data.DataColumn("BsMax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBsMax);
                this.columnBsMin = new global::System.Data.DataColumn("BsMin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBsMin);
                this.columnTpMax = new global::System.Data.DataColumn("TpMax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTpMax);
                this.columnTpMin = new global::System.Data.DataColumn("TpMin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTpMin);
                this.columnWtMax = new global::System.Data.DataColumn("WtMax", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWtMax);
                this.columnWtMin = new global::System.Data.DataColumn("WtMin", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWtMin);
                this.columnLastUpdated = new global::System.Data.DataColumn("LastUpdated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdated);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProfileID}, true));
                this.columnProfileID.AllowDBNull = false;
                this.columnProfileID.Unique = true;
                this.columnMemberID.AllowDBNull = false;
                this.columnBCSTestCode.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MemberProfileRow NewMemberProfileRow() {
                return ((MemberProfileRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MemberProfileRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MemberProfileRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MemberProfileRowChanged != null)) {
                    this.MemberProfileRowChanged(this, new MemberProfileRowChangeEvent(((MemberProfileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MemberProfileRowChanging != null)) {
                    this.MemberProfileRowChanging(this, new MemberProfileRowChangeEvent(((MemberProfileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MemberProfileRowDeleted != null)) {
                    this.MemberProfileRowDeleted(this, new MemberProfileRowChangeEvent(((MemberProfileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MemberProfileRowDeleting != null)) {
                    this.MemberProfileRowDeleting(this, new MemberProfileRowChangeEvent(((MemberProfileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMemberProfileRow(MemberProfileRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMemberProfile ds = new dsMemberProfile();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MemberProfileDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MemberProfileRow : global::System.Data.DataRow {
            
            private MemberProfileDataTable tableMemberProfile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MemberProfileRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMemberProfile = ((MemberProfileDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProfileID {
                get {
                    return ((global::System.Guid)(this[this.tableMemberProfile.ProfileIDColumn]));
                }
                set {
                    this[this.tableMemberProfile.ProfileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MemberID {
                get {
                    return ((int)(this[this.tableMemberProfile.MemberIDColumn]));
                }
                set {
                    this[this.tableMemberProfile.MemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BCSTestCode {
                get {
                    return ((long)(this[this.tableMemberProfile.BCSTestCodeColumn]));
                }
                set {
                    this[this.tableMemberProfile.BCSTestCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BpType {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.BpTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BpType\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.BpTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BsType {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.BsTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BsType\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.BsTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WtType {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.WtTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WtType\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.WtTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TpType {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.TpTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TpType\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.TpTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SystolicMax {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.SystolicMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystolicMax\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.SystolicMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DiastolicMax {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.DiastolicMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiastolicMax\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.DiastolicMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SystolicMin {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.SystolicMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystolicMin\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.SystolicMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DiastolicMin {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.DiastolicMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiastolicMin\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.DiastolicMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BsMax {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.BsMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BsMax\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.BsMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BsMin {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.BsMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BsMin\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.BsMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TpMax {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.TpMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TpMax\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.TpMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TpMin {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.TpMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TpMin\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.TpMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WtMax {
                get {
                    try {
                        return ((double)(this[this.tableMemberProfile.WtMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WtMax\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.WtMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WtMin {
                get {
                    try {
                        return ((double)(this[this.tableMemberProfile.WtMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WtMin\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.WtMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastUpdated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMemberProfile.LastUpdatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdated\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.LastUpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LastUpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tableMemberProfile.LastUpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedBy\' in table \'MemberProfile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMemberProfile.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBpTypeNull() {
                return this.IsNull(this.tableMemberProfile.BpTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBpTypeNull() {
                this[this.tableMemberProfile.BpTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBsTypeNull() {
                return this.IsNull(this.tableMemberProfile.BsTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBsTypeNull() {
                this[this.tableMemberProfile.BsTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWtTypeNull() {
                return this.IsNull(this.tableMemberProfile.WtTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWtTypeNull() {
                this[this.tableMemberProfile.WtTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTpTypeNull() {
                return this.IsNull(this.tableMemberProfile.TpTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTpTypeNull() {
                this[this.tableMemberProfile.TpTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSystolicMaxNull() {
                return this.IsNull(this.tableMemberProfile.SystolicMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSystolicMaxNull() {
                this[this.tableMemberProfile.SystolicMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiastolicMaxNull() {
                return this.IsNull(this.tableMemberProfile.DiastolicMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiastolicMaxNull() {
                this[this.tableMemberProfile.DiastolicMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSystolicMinNull() {
                return this.IsNull(this.tableMemberProfile.SystolicMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSystolicMinNull() {
                this[this.tableMemberProfile.SystolicMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiastolicMinNull() {
                return this.IsNull(this.tableMemberProfile.DiastolicMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiastolicMinNull() {
                this[this.tableMemberProfile.DiastolicMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBsMaxNull() {
                return this.IsNull(this.tableMemberProfile.BsMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBsMaxNull() {
                this[this.tableMemberProfile.BsMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBsMinNull() {
                return this.IsNull(this.tableMemberProfile.BsMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBsMinNull() {
                this[this.tableMemberProfile.BsMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTpMaxNull() {
                return this.IsNull(this.tableMemberProfile.TpMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTpMaxNull() {
                this[this.tableMemberProfile.TpMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTpMinNull() {
                return this.IsNull(this.tableMemberProfile.TpMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTpMinNull() {
                this[this.tableMemberProfile.TpMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWtMaxNull() {
                return this.IsNull(this.tableMemberProfile.WtMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWtMaxNull() {
                this[this.tableMemberProfile.WtMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWtMinNull() {
                return this.IsNull(this.tableMemberProfile.WtMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWtMinNull() {
                this[this.tableMemberProfile.WtMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastUpdatedNull() {
                return this.IsNull(this.tableMemberProfile.LastUpdatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastUpdatedNull() {
                this[this.tableMemberProfile.LastUpdatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastUpdatedByNull() {
                return this.IsNull(this.tableMemberProfile.LastUpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastUpdatedByNull() {
                this[this.tableMemberProfile.LastUpdatedByColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MemberProfileRowChangeEvent : global::System.EventArgs {
            
            private MemberProfileRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MemberProfileRowChangeEvent(MemberProfileRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MemberProfileRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class MedicationClass {
        
        private string medicationIDField;
        
        private string frequencyField;
        
        private int last_Perscribed_ByField;
        
        private string sKUField;
        
        private int refills_AllowedField;
        
        private string lot_NumField;
        
        private System.DateTime startDateField;
        
        private int lastUpdatedByField;
        
        private bool isActiveField;
        
        private string nDC_CDField;
        
        private string hIPAA_CDField;
        
        private string nDC_CD_TXTField;
        
        private bool isMedsLoadedField;
        
        private int memberIdField;
        
        private double lISTING_SEQ_NOField;
        
        private double lBLCODEField;
        
        private string tRADENAMEField;
        
        private string pRODCODEField;
        
        private string pACKTYPEField;
        
        private string pKGCODEField;
        
        private string pACKSIZEField;
        
        private string sTRENGTHField;
        
        private string uNITField;
        
        private string tRANSLATIONField;
        
        private string rX_OTCField;
        
        private string iNGREDIENT_NAMEField;
        
        private string rOUTE_CODEField;
        
        private string rOUTEField;
        
        private string fIRM_NAMEField;
        
        private string aDDR_HEADERField;
        
        private string sTREETField;
        
        private string cITYField;
        
        private string sTATEField;
        
        private string zIPField;
        
        private string pROVINCEField;
        
        private string cOUNTRY_NAMEField;
        
        private string fOREIGN_ADDRField;
        
        private string pO_BOXField;
        
        /// <remarks/>
        public string MedicationID {
            get {
                return this.medicationIDField;
            }
            set {
                this.medicationIDField = value;
            }
        }
        
        /// <remarks/>
        public string Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        public int Last_Perscribed_By {
            get {
                return this.last_Perscribed_ByField;
            }
            set {
                this.last_Perscribed_ByField = value;
            }
        }
        
        /// <remarks/>
        public string SKU {
            get {
                return this.sKUField;
            }
            set {
                this.sKUField = value;
            }
        }
        
        /// <remarks/>
        public int Refills_Allowed {
            get {
                return this.refills_AllowedField;
            }
            set {
                this.refills_AllowedField = value;
            }
        }
        
        /// <remarks/>
        public string Lot_Num {
            get {
                return this.lot_NumField;
            }
            set {
                this.lot_NumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public int LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public string NDC_CD {
            get {
                return this.nDC_CDField;
            }
            set {
                this.nDC_CDField = value;
            }
        }
        
        /// <remarks/>
        public string HIPAA_CD {
            get {
                return this.hIPAA_CDField;
            }
            set {
                this.hIPAA_CDField = value;
            }
        }
        
        /// <remarks/>
        public string NDC_CD_TXT {
            get {
                return this.nDC_CD_TXTField;
            }
            set {
                this.nDC_CD_TXTField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMedsLoaded {
            get {
                return this.isMedsLoadedField;
            }
            set {
                this.isMedsLoadedField = value;
            }
        }
        
        /// <remarks/>
        public int MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public double LISTING_SEQ_NO {
            get {
                return this.lISTING_SEQ_NOField;
            }
            set {
                this.lISTING_SEQ_NOField = value;
            }
        }
        
        /// <remarks/>
        public double LBLCODE {
            get {
                return this.lBLCODEField;
            }
            set {
                this.lBLCODEField = value;
            }
        }
        
        /// <remarks/>
        public string TRADENAME {
            get {
                return this.tRADENAMEField;
            }
            set {
                this.tRADENAMEField = value;
            }
        }
        
        /// <remarks/>
        public string PRODCODE {
            get {
                return this.pRODCODEField;
            }
            set {
                this.pRODCODEField = value;
            }
        }
        
        /// <remarks/>
        public string PACKTYPE {
            get {
                return this.pACKTYPEField;
            }
            set {
                this.pACKTYPEField = value;
            }
        }
        
        /// <remarks/>
        public string PKGCODE {
            get {
                return this.pKGCODEField;
            }
            set {
                this.pKGCODEField = value;
            }
        }
        
        /// <remarks/>
        public string PACKSIZE {
            get {
                return this.pACKSIZEField;
            }
            set {
                this.pACKSIZEField = value;
            }
        }
        
        /// <remarks/>
        public string STRENGTH {
            get {
                return this.sTRENGTHField;
            }
            set {
                this.sTRENGTHField = value;
            }
        }
        
        /// <remarks/>
        public string UNIT {
            get {
                return this.uNITField;
            }
            set {
                this.uNITField = value;
            }
        }
        
        /// <remarks/>
        public string TRANSLATION {
            get {
                return this.tRANSLATIONField;
            }
            set {
                this.tRANSLATIONField = value;
            }
        }
        
        /// <remarks/>
        public string RX_OTC {
            get {
                return this.rX_OTCField;
            }
            set {
                this.rX_OTCField = value;
            }
        }
        
        /// <remarks/>
        public string INGREDIENT_NAME {
            get {
                return this.iNGREDIENT_NAMEField;
            }
            set {
                this.iNGREDIENT_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string ROUTE_CODE {
            get {
                return this.rOUTE_CODEField;
            }
            set {
                this.rOUTE_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string ROUTE {
            get {
                return this.rOUTEField;
            }
            set {
                this.rOUTEField = value;
            }
        }
        
        /// <remarks/>
        public string FIRM_NAME {
            get {
                return this.fIRM_NAMEField;
            }
            set {
                this.fIRM_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string ADDR_HEADER {
            get {
                return this.aDDR_HEADERField;
            }
            set {
                this.aDDR_HEADERField = value;
            }
        }
        
        /// <remarks/>
        public string STREET {
            get {
                return this.sTREETField;
            }
            set {
                this.sTREETField = value;
            }
        }
        
        /// <remarks/>
        public string CITY {
            get {
                return this.cITYField;
            }
            set {
                this.cITYField = value;
            }
        }
        
        /// <remarks/>
        public string STATE {
            get {
                return this.sTATEField;
            }
            set {
                this.sTATEField = value;
            }
        }
        
        /// <remarks/>
        public string ZIP {
            get {
                return this.zIPField;
            }
            set {
                this.zIPField = value;
            }
        }
        
        /// <remarks/>
        public string PROVINCE {
            get {
                return this.pROVINCEField;
            }
            set {
                this.pROVINCEField = value;
            }
        }
        
        /// <remarks/>
        public string COUNTRY_NAME {
            get {
                return this.cOUNTRY_NAMEField;
            }
            set {
                this.cOUNTRY_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string FOREIGN_ADDR {
            get {
                return this.fOREIGN_ADDRField;
            }
            set {
                this.fOREIGN_ADDRField = value;
            }
        }
        
        /// <remarks/>
        public string PO_BOX {
            get {
                return this.pO_BOXField;
            }
            set {
                this.pO_BOXField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class Callers {
        
        private System.DateTime lastUpdatedField;
        
        private bool isActiveField;
        
        private int sMSProviderIdField;
        
        private string statusField;
        
        private string clientPhoneNumberField;
        
        private int waitListFLField;
        
        private string locationField;
        
        private long msgIDField;
        
        private long idField;
        
        private System.DateTime startDateField;
        
        private System.DateTime stopDateField;
        
        private System.Guid providerRecIDField;
        
        private int buddyIDField;
        
        private string fIPSCodeField;
        
        private string cGSiteIDField;
        
        private char careGiverRoleField;
        
        private string gMTNameField;
        
        private int gMTOffsetField;
        
        private string goodDestField;
        
        private string sucessMsgField;
        
        private string failureMsgField;
        
        private string badDestField;
        
        private int pulseField;
        
        private long scheduleIdField;
        
        private string statusIndField;
        
        private string countryCodeField;
        
        private string passwordField;
        
        private string type_CDField;
        
        private string phoneTypeField;
        
        private int netWorkRefIdField;
        
        private int careGiverIdField;
        
        private int sponsorIdField;
        
        private int providerIdField;
        
        private int prefProviderIdField;
        
        private string providerDescField;
        
        private System.Guid providerPrefIDField;
        
        private bool isAuthorisedField;
        
        private bool createIfNotFoundIndField;
        
        private int memberIdField;
        
        private int memberCountField;
        
        private string externalRefIDField;
        
        private object[] symptomsField;
        
        private int conditionChgIndField;
        
        private int bCSTestCodeField;
        
        private long bcsLogIDField;
        
        private bool archivedField;
        
        private string fastingIndField;
        
        private int weightField;
        
        private float tempatureField;
        
        private double o2Field;
        
        private double heightField;
        
        private double intakeField;
        
        private int diastolicField;
        
        private int systolicField;
        
        private int bloodSerumField;
        
        private int medsTakenIndField;
        
        private System.Data.DataSet callersListField;
        
        private bool callerListLoadedField;
        
        private int callerIdField;
        
        private string phoneNumberField;
        
        private string faxField;
        
        private int mobileFeaturesField;
        
        private string accountTypeCodeField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string zipCodeField;
        
        private string stateField;
        
        private string pinField;
        
        private bool pinRequiredField;
        
        private bool phoneNumberMatchRequiredField;
        
        private string emailAddressField;
        
        private string textMessageAddressField;
        
        private System.DateTime accountCreationDateTimeField;
        
        private bool optInField;
        
        private bool isCallersLoadedField;
        
        private bool isNetworkLoadedField;
        
        private bool isReferralField;
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public int SMSProviderId {
            get {
                return this.sMSProviderIdField;
            }
            set {
                this.sMSProviderIdField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ClientPhoneNumber {
            get {
                return this.clientPhoneNumberField;
            }
            set {
                this.clientPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public int WaitListFL {
            get {
                return this.waitListFLField;
            }
            set {
                this.waitListFLField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public long MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StopDate {
            get {
                return this.stopDateField;
            }
            set {
                this.stopDateField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ProviderRecID {
            get {
                return this.providerRecIDField;
            }
            set {
                this.providerRecIDField = value;
            }
        }
        
        /// <remarks/>
        public int BuddyID {
            get {
                return this.buddyIDField;
            }
            set {
                this.buddyIDField = value;
            }
        }
        
        /// <remarks/>
        public string FIPSCode {
            get {
                return this.fIPSCodeField;
            }
            set {
                this.fIPSCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CGSiteID {
            get {
                return this.cGSiteIDField;
            }
            set {
                this.cGSiteIDField = value;
            }
        }
        
        /// <remarks/>
        public char CareGiverRole {
            get {
                return this.careGiverRoleField;
            }
            set {
                this.careGiverRoleField = value;
            }
        }
        
        /// <remarks/>
        public string GMTName {
            get {
                return this.gMTNameField;
            }
            set {
                this.gMTNameField = value;
            }
        }
        
        /// <remarks/>
        public int GMTOffset {
            get {
                return this.gMTOffsetField;
            }
            set {
                this.gMTOffsetField = value;
            }
        }
        
        /// <remarks/>
        public string GoodDest {
            get {
                return this.goodDestField;
            }
            set {
                this.goodDestField = value;
            }
        }
        
        /// <remarks/>
        public string SucessMsg {
            get {
                return this.sucessMsgField;
            }
            set {
                this.sucessMsgField = value;
            }
        }
        
        /// <remarks/>
        public string FailureMsg {
            get {
                return this.failureMsgField;
            }
            set {
                this.failureMsgField = value;
            }
        }
        
        /// <remarks/>
        public string BadDest {
            get {
                return this.badDestField;
            }
            set {
                this.badDestField = value;
            }
        }
        
        /// <remarks/>
        public int Pulse {
            get {
                return this.pulseField;
            }
            set {
                this.pulseField = value;
            }
        }
        
        /// <remarks/>
        public long ScheduleId {
            get {
                return this.scheduleIdField;
            }
            set {
                this.scheduleIdField = value;
            }
        }
        
        /// <remarks/>
        public string StatusInd {
            get {
                return this.statusIndField;
            }
            set {
                this.statusIndField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Type_CD {
            get {
                return this.type_CDField;
            }
            set {
                this.type_CDField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneType {
            get {
                return this.phoneTypeField;
            }
            set {
                this.phoneTypeField = value;
            }
        }
        
        /// <remarks/>
        public int NetWorkRefId {
            get {
                return this.netWorkRefIdField;
            }
            set {
                this.netWorkRefIdField = value;
            }
        }
        
        /// <remarks/>
        public int CareGiverId {
            get {
                return this.careGiverIdField;
            }
            set {
                this.careGiverIdField = value;
            }
        }
        
        /// <remarks/>
        public int SponsorId {
            get {
                return this.sponsorIdField;
            }
            set {
                this.sponsorIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
            }
        }
        
        /// <remarks/>
        public int PrefProviderId {
            get {
                return this.prefProviderIdField;
            }
            set {
                this.prefProviderIdField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderDesc {
            get {
                return this.providerDescField;
            }
            set {
                this.providerDescField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ProviderPrefID {
            get {
                return this.providerPrefIDField;
            }
            set {
                this.providerPrefIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAuthorised {
            get {
                return this.isAuthorisedField;
            }
            set {
                this.isAuthorisedField = value;
            }
        }
        
        /// <remarks/>
        public bool CreateIfNotFoundInd {
            get {
                return this.createIfNotFoundIndField;
            }
            set {
                this.createIfNotFoundIndField = value;
            }
        }
        
        /// <remarks/>
        public int MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public int MemberCount {
            get {
                return this.memberCountField;
            }
            set {
                this.memberCountField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalRefID {
            get {
                return this.externalRefIDField;
            }
            set {
                this.externalRefIDField = value;
            }
        }
        
        /// <remarks/>
        public object[] Symptoms {
            get {
                return this.symptomsField;
            }
            set {
                this.symptomsField = value;
            }
        }
        
        /// <remarks/>
        public int ConditionChgInd {
            get {
                return this.conditionChgIndField;
            }
            set {
                this.conditionChgIndField = value;
            }
        }
        
        /// <remarks/>
        public int BCSTestCode {
            get {
                return this.bCSTestCodeField;
            }
            set {
                this.bCSTestCodeField = value;
            }
        }
        
        /// <remarks/>
        public long BcsLogID {
            get {
                return this.bcsLogIDField;
            }
            set {
                this.bcsLogIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Archived {
            get {
                return this.archivedField;
            }
            set {
                this.archivedField = value;
            }
        }
        
        /// <remarks/>
        public string FastingInd {
            get {
                return this.fastingIndField;
            }
            set {
                this.fastingIndField = value;
            }
        }
        
        /// <remarks/>
        public int Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public float Tempature {
            get {
                return this.tempatureField;
            }
            set {
                this.tempatureField = value;
            }
        }
        
        /// <remarks/>
        public double O2 {
            get {
                return this.o2Field;
            }
            set {
                this.o2Field = value;
            }
        }
        
        /// <remarks/>
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public double Intake {
            get {
                return this.intakeField;
            }
            set {
                this.intakeField = value;
            }
        }
        
        /// <remarks/>
        public int Diastolic {
            get {
                return this.diastolicField;
            }
            set {
                this.diastolicField = value;
            }
        }
        
        /// <remarks/>
        public int Systolic {
            get {
                return this.systolicField;
            }
            set {
                this.systolicField = value;
            }
        }
        
        /// <remarks/>
        public int BloodSerum {
            get {
                return this.bloodSerumField;
            }
            set {
                this.bloodSerumField = value;
            }
        }
        
        /// <remarks/>
        public int MedsTakenInd {
            get {
                return this.medsTakenIndField;
            }
            set {
                this.medsTakenIndField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet CallersList {
            get {
                return this.callersListField;
            }
            set {
                this.callersListField = value;
            }
        }
        
        /// <remarks/>
        public bool CallerListLoaded {
            get {
                return this.callerListLoadedField;
            }
            set {
                this.callerListLoadedField = value;
            }
        }
        
        /// <remarks/>
        public int CallerId {
            get {
                return this.callerIdField;
            }
            set {
                this.callerIdField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public int MobileFeatures {
            get {
                return this.mobileFeaturesField;
            }
            set {
                this.mobileFeaturesField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTypeCode {
            get {
                return this.accountTypeCodeField;
            }
            set {
                this.accountTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Pin {
            get {
                return this.pinField;
            }
            set {
                this.pinField = value;
            }
        }
        
        /// <remarks/>
        public bool PinRequired {
            get {
                return this.pinRequiredField;
            }
            set {
                this.pinRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool PhoneNumberMatchRequired {
            get {
                return this.phoneNumberMatchRequiredField;
            }
            set {
                this.phoneNumberMatchRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string TextMessageAddress {
            get {
                return this.textMessageAddressField;
            }
            set {
                this.textMessageAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AccountCreationDateTime {
            get {
                return this.accountCreationDateTimeField;
            }
            set {
                this.accountCreationDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool OptIn {
            get {
                return this.optInField;
            }
            set {
                this.optInField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCallersLoaded {
            get {
                return this.isCallersLoadedField;
            }
            set {
                this.isCallersLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNetworkLoaded {
            get {
                return this.isNetworkLoadedField;
            }
            set {
                this.isNetworkLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsReferral {
            get {
                return this.isReferralField;
            }
            set {
                this.isReferralField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class BCNHvDataClass {
        
        private int refillsLeftField;
        
        private string pharmacyField;
        
        private string prescriptionNumberField;
        
        private System.DateTime nextRefillDateField;
        
        private string lotNumberField;
        
        private string daysSupplyField;
        
        private string sKUField;
        
        private string strengthField;
        
        private string routeNameField;
        
        private string routeCodeField;
        
        private string tradeNameField;
        
        private string frequencyField;
        
        private string dosageValueField;
        
        private string dosageUnitField;
        
        private System.DateTime dateStartedField;
        
        private System.DateTime dateDiscontinuedField;
        
        private string codeSystemField;
        
        private string productCodeField;
        
        private string bCNMedIDField;
        
        private object[] symptomsField;
        
        private bool isBPLoadedField;
        
        private bool isBGLoadedField;
        
        private bool isWeightLoadedField;
        
        private bool isMedsLoadedField;
        
        private bool isMedRefillLoadedField;
        
        private bool isVitalsLoadedField;
        
        private bool isDataLoadedField;
        
        private bool isCallersLoadedField;
        
        private long userIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string zipCodeField;
        
        private string stateField;
        
        private HVLoadType typeLoadedField;
        
        private int pulseField;
        
        private int bcsLogIDField;
        
        private long bcsLogIDLField;
        
        private int systolicField;
        
        private int diastolicField;
        
        private double tempatureField;
        
        private double weightField;
        
        private int heightField;
        
        private double o2Field;
        
        private double intakeField;
        
        private bool archivedField;
        
        private System.DateTime date_Time_TakenField;
        
        private int bloodSerumLevelField;
        
        private bool fastingField;
        
        private string emailAddressField;
        
        private string textMessageAddressField;
        
        private string phoneNumberField;
        
        /// <remarks/>
        public int RefillsLeft {
            get {
                return this.refillsLeftField;
            }
            set {
                this.refillsLeftField = value;
            }
        }
        
        /// <remarks/>
        public string Pharmacy {
            get {
                return this.pharmacyField;
            }
            set {
                this.pharmacyField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionNumber {
            get {
                return this.prescriptionNumberField;
            }
            set {
                this.prescriptionNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime NextRefillDate {
            get {
                return this.nextRefillDateField;
            }
            set {
                this.nextRefillDateField = value;
            }
        }
        
        /// <remarks/>
        public string LotNumber {
            get {
                return this.lotNumberField;
            }
            set {
                this.lotNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public string SKU {
            get {
                return this.sKUField;
            }
            set {
                this.sKUField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string RouteName {
            get {
                return this.routeNameField;
            }
            set {
                this.routeNameField = value;
            }
        }
        
        /// <remarks/>
        public string RouteCode {
            get {
                return this.routeCodeField;
            }
            set {
                this.routeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TradeName {
            get {
                return this.tradeNameField;
            }
            set {
                this.tradeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        public string DosageValue {
            get {
                return this.dosageValueField;
            }
            set {
                this.dosageValueField = value;
            }
        }
        
        /// <remarks/>
        public string DosageUnit {
            get {
                return this.dosageUnitField;
            }
            set {
                this.dosageUnitField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateStarted {
            get {
                return this.dateStartedField;
            }
            set {
                this.dateStartedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateDiscontinued {
            get {
                return this.dateDiscontinuedField;
            }
            set {
                this.dateDiscontinuedField = value;
            }
        }
        
        /// <remarks/>
        public string CodeSystem {
            get {
                return this.codeSystemField;
            }
            set {
                this.codeSystemField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BCNMedID {
            get {
                return this.bCNMedIDField;
            }
            set {
                this.bCNMedIDField = value;
            }
        }
        
        /// <remarks/>
        public object[] Symptoms {
            get {
                return this.symptomsField;
            }
            set {
                this.symptomsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBPLoaded {
            get {
                return this.isBPLoadedField;
            }
            set {
                this.isBPLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBGLoaded {
            get {
                return this.isBGLoadedField;
            }
            set {
                this.isBGLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsWeightLoaded {
            get {
                return this.isWeightLoadedField;
            }
            set {
                this.isWeightLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMedsLoaded {
            get {
                return this.isMedsLoadedField;
            }
            set {
                this.isMedsLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMedRefillLoaded {
            get {
                return this.isMedRefillLoadedField;
            }
            set {
                this.isMedRefillLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsVitalsLoaded {
            get {
                return this.isVitalsLoadedField;
            }
            set {
                this.isVitalsLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDataLoaded {
            get {
                return this.isDataLoadedField;
            }
            set {
                this.isDataLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCallersLoaded {
            get {
                return this.isCallersLoadedField;
            }
            set {
                this.isCallersLoadedField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public HVLoadType TypeLoaded {
            get {
                return this.typeLoadedField;
            }
            set {
                this.typeLoadedField = value;
            }
        }
        
        /// <remarks/>
        public int Pulse {
            get {
                return this.pulseField;
            }
            set {
                this.pulseField = value;
            }
        }
        
        /// <remarks/>
        public int BcsLogID {
            get {
                return this.bcsLogIDField;
            }
            set {
                this.bcsLogIDField = value;
            }
        }
        
        /// <remarks/>
        public long BcsLogIDL {
            get {
                return this.bcsLogIDLField;
            }
            set {
                this.bcsLogIDLField = value;
            }
        }
        
        /// <remarks/>
        public int Systolic {
            get {
                return this.systolicField;
            }
            set {
                this.systolicField = value;
            }
        }
        
        /// <remarks/>
        public int Diastolic {
            get {
                return this.diastolicField;
            }
            set {
                this.diastolicField = value;
            }
        }
        
        /// <remarks/>
        public double Tempature {
            get {
                return this.tempatureField;
            }
            set {
                this.tempatureField = value;
            }
        }
        
        /// <remarks/>
        public double Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public double O2 {
            get {
                return this.o2Field;
            }
            set {
                this.o2Field = value;
            }
        }
        
        /// <remarks/>
        public double Intake {
            get {
                return this.intakeField;
            }
            set {
                this.intakeField = value;
            }
        }
        
        /// <remarks/>
        public bool Archived {
            get {
                return this.archivedField;
            }
            set {
                this.archivedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date_Time_Taken {
            get {
                return this.date_Time_TakenField;
            }
            set {
                this.date_Time_TakenField = value;
            }
        }
        
        /// <remarks/>
        public int BloodSerumLevel {
            get {
                return this.bloodSerumLevelField;
            }
            set {
                this.bloodSerumLevelField = value;
            }
        }
        
        /// <remarks/>
        public bool Fasting {
            get {
                return this.fastingField;
            }
            set {
                this.fastingField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string TextMessageAddress {
            get {
                return this.textMessageAddressField;
            }
            set {
                this.textMessageAddressField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public enum HVLoadType {
        
        /// <remarks/>
        BloodPressure,
        
        /// <remarks/>
        BloodSugar,
        
        /// <remarks/>
        Tempeature,
        
        /// <remarks/>
        Weight,
        
        /// <remarks/>
        Medication,
        
        /// <remarks/>
        MedicationRefill,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WeightMeasurement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BCNMemberData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BloodGlucoseMeasurement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Medication))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MedicationRefill))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VitalSigns))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VitalSignMeasurement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BloodPressureMeasurement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BCNObject {
        
        private System.Nullable<System.DateTime> bCNCreateTimeField;
        
        private System.Nullable<System.DateTime> bCNLastUpdateTimeField;
        
        private string bCNIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BCNCreateTime {
            get {
                return this.bCNCreateTimeField;
            }
            set {
                this.bCNCreateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BCNLastUpdateTime {
            get {
                return this.bCNLastUpdateTimeField;
            }
            set {
                this.bCNLastUpdateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string BCNId {
            get {
                return this.bCNIdField;
            }
            set {
                this.bCNIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WeightMeasurement : BCNObject {
        
        private System.Nullable<System.DateTime> measurementDateField;
        
        private double weightField;
        
        private WeightUnit unitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> MeasurementDate {
            get {
                return this.measurementDateField;
            }
            set {
                this.measurementDateField = value;
            }
        }
        
        /// <remarks/>
        public double Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public WeightUnit Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum WeightUnit {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Kg,
        
        /// <remarks/>
        Lbs,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BCNMemberData : BCNObject {
        
        private string bCNUserIdField;
        
        private System.Guid healthVaultIdField;
        
        private string addressField;
        
        private string phoneField;
        
        private string emailField;
        
        private BloodPressureMeasurement[] bloodPressureMeasurementsField;
        
        private BloodGlucoseMeasurement[] bloodGlucoseMeasurementsField;
        
        private Medication[] medicationsField;
        
        private MedicationRefill[] medicationRefillsField;
        
        private VitalSigns[] vitalSignsClusterField;
        
        private WeightMeasurement[] weightMeasurementsField;
        
        /// <remarks/>
        public string BCNUserId {
            get {
                return this.bCNUserIdField;
            }
            set {
                this.bCNUserIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid HealthVaultId {
            get {
                return this.healthVaultIdField;
            }
            set {
                this.healthVaultIdField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public BloodPressureMeasurement[] BloodPressureMeasurements {
            get {
                return this.bloodPressureMeasurementsField;
            }
            set {
                this.bloodPressureMeasurementsField = value;
            }
        }
        
        /// <remarks/>
        public BloodGlucoseMeasurement[] BloodGlucoseMeasurements {
            get {
                return this.bloodGlucoseMeasurementsField;
            }
            set {
                this.bloodGlucoseMeasurementsField = value;
            }
        }
        
        /// <remarks/>
        public Medication[] Medications {
            get {
                return this.medicationsField;
            }
            set {
                this.medicationsField = value;
            }
        }
        
        /// <remarks/>
        public MedicationRefill[] MedicationRefills {
            get {
                return this.medicationRefillsField;
            }
            set {
                this.medicationRefillsField = value;
            }
        }
        
        /// <remarks/>
        public VitalSigns[] VitalSignsCluster {
            get {
                return this.vitalSignsClusterField;
            }
            set {
                this.vitalSignsClusterField = value;
            }
        }
        
        /// <remarks/>
        public WeightMeasurement[] WeightMeasurements {
            get {
                return this.weightMeasurementsField;
            }
            set {
                this.weightMeasurementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BloodPressureMeasurement : BCNObject {
        
        private System.DateTime measurementDateField;
        
        private int systolicField;
        
        private int diastolicField;
        
        private System.Nullable<int> pulseField;
        
        /// <remarks/>
        public System.DateTime MeasurementDate {
            get {
                return this.measurementDateField;
            }
            set {
                this.measurementDateField = value;
            }
        }
        
        /// <remarks/>
        public int Systolic {
            get {
                return this.systolicField;
            }
            set {
                this.systolicField = value;
            }
        }
        
        /// <remarks/>
        public int Diastolic {
            get {
                return this.diastolicField;
            }
            set {
                this.diastolicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Pulse {
            get {
                return this.pulseField;
            }
            set {
                this.pulseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BloodGlucoseMeasurement : BCNObject {
        
        private System.DateTime measurementDateField;
        
        private string measurementValueField;
        
        private string measurementTypeField;
        
        private string commentsField;
        
        /// <remarks/>
        public System.DateTime MeasurementDate {
            get {
                return this.measurementDateField;
            }
            set {
                this.measurementDateField = value;
            }
        }
        
        /// <remarks/>
        public string MeasurementValue {
            get {
                return this.measurementValueField;
            }
            set {
                this.measurementValueField = value;
            }
        }
        
        /// <remarks/>
        public string MeasurementType {
            get {
                return this.measurementTypeField;
            }
            set {
                this.measurementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Medication : BCNObject {
        
        private string nameField;
        
        private string codeField;
        
        private string codeSystemField;
        
        private string dosageValueField;
        
        private string dosageUnitField;
        
        private string frequencyField;
        
        private string strengthField;
        
        private string routeField;
        
        private System.Nullable<System.DateTime> dateStartedField;
        
        private System.Nullable<System.DateTime> dateDiscontinuedField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string CodeSystem {
            get {
                return this.codeSystemField;
            }
            set {
                this.codeSystemField = value;
            }
        }
        
        /// <remarks/>
        public string DosageValue {
            get {
                return this.dosageValueField;
            }
            set {
                this.dosageValueField = value;
            }
        }
        
        /// <remarks/>
        public string DosageUnit {
            get {
                return this.dosageUnitField;
            }
            set {
                this.dosageUnitField = value;
            }
        }
        
        /// <remarks/>
        public string Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateStarted {
            get {
                return this.dateStartedField;
            }
            set {
                this.dateStartedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateDiscontinued {
            get {
                return this.dateDiscontinuedField;
            }
            set {
                this.dateDiscontinuedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MedicationRefill : BCNObject {
        
        private string nameField;
        
        private string codeField;
        
        private string codeSystemField;
        
        private System.DateTime dateFilledField;
        
        private System.Nullable<int> daysSupplyField;
        
        private System.Nullable<System.DateTime> nextRefillDateField;
        
        private System.Nullable<int> refillsLeftField;
        
        private string pharmacyField;
        
        private string prescriptionNumberField;
        
        private string lotNumberField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string CodeSystem {
            get {
                return this.codeSystemField;
            }
            set {
                this.codeSystemField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateFilled {
            get {
                return this.dateFilledField;
            }
            set {
                this.dateFilledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> NextRefillDate {
            get {
                return this.nextRefillDateField;
            }
            set {
                this.nextRefillDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RefillsLeft {
            get {
                return this.refillsLeftField;
            }
            set {
                this.refillsLeftField = value;
            }
        }
        
        /// <remarks/>
        public string Pharmacy {
            get {
                return this.pharmacyField;
            }
            set {
                this.pharmacyField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionNumber {
            get {
                return this.prescriptionNumberField;
            }
            set {
                this.prescriptionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string LotNumber {
            get {
                return this.lotNumberField;
            }
            set {
                this.lotNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class VitalSigns : BCNObject {
        
        private VitalSignMeasurement[] measurementsField;
        
        private System.DateTime measurementDateField;
        
        /// <remarks/>
        public VitalSignMeasurement[] Measurements {
            get {
                return this.measurementsField;
            }
            set {
                this.measurementsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MeasurementDate {
            get {
                return this.measurementDateField;
            }
            set {
                this.measurementDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class VitalSignMeasurement : BCNObject {
        
        private VitalSignMeasurementType measurementTypeField;
        
        private string valueField;
        
        private string unitField;
        
        /// <remarks/>
        public VitalSignMeasurementType MeasurementType {
            get {
                return this.measurementTypeField;
            }
            set {
                this.measurementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum VitalSignMeasurementType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Temperature,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class HealthVaultClass {
        
        private BloodPressureMeasurement hVBloodPRessureInfoField;
        
        private BloodGlucoseMeasurement hVBloodGlucoseInfoField;
        
        private WeightMeasurement hVWeightInfoField;
        
        private Medication hVMedicationInfoField;
        
        private MedicationRefill hVMedRefillInfoField;
        
        private BCNMemberData bCNMemberInfoField;
        
        private VitalSigns hVVitalSignsField;
        
        private VitalSignMeasurement hVVitalSignMeasurementField;
        
        /// <remarks/>
        public BloodPressureMeasurement HVBloodPRessureInfo {
            get {
                return this.hVBloodPRessureInfoField;
            }
            set {
                this.hVBloodPRessureInfoField = value;
            }
        }
        
        /// <remarks/>
        public BloodGlucoseMeasurement HVBloodGlucoseInfo {
            get {
                return this.hVBloodGlucoseInfoField;
            }
            set {
                this.hVBloodGlucoseInfoField = value;
            }
        }
        
        /// <remarks/>
        public WeightMeasurement HVWeightInfo {
            get {
                return this.hVWeightInfoField;
            }
            set {
                this.hVWeightInfoField = value;
            }
        }
        
        /// <remarks/>
        public Medication HVMedicationInfo {
            get {
                return this.hVMedicationInfoField;
            }
            set {
                this.hVMedicationInfoField = value;
            }
        }
        
        /// <remarks/>
        public MedicationRefill HVMedRefillInfo {
            get {
                return this.hVMedRefillInfoField;
            }
            set {
                this.hVMedRefillInfoField = value;
            }
        }
        
        /// <remarks/>
        public BCNMemberData BCNMemberInfo {
            get {
                return this.bCNMemberInfoField;
            }
            set {
                this.bCNMemberInfoField = value;
            }
        }
        
        /// <remarks/>
        public VitalSigns HVVitalSigns {
            get {
                return this.hVVitalSignsField;
            }
            set {
                this.hVVitalSignsField = value;
            }
        }
        
        /// <remarks/>
        public VitalSignMeasurement HVVitalSignMeasurement {
            get {
                return this.hVVitalSignMeasurementField;
            }
            set {
                this.hVVitalSignMeasurementField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class ReferralClass {
        
        private long msgIDField;
        
        private int memberIDField;
        
        private System.DateTime lastUpdatedField;
        
        private int lastUpdatedByField;
        
        private bool msgSentField;
        
        private string memberNotesField;
        
        private int senderMemberIDField;
        
        private int receiverMemberIDField;
        
        private int senderSponsorIDField;
        
        private int receiverSponsorIDField;
        
        private int senderNetworkIDField;
        
        private int receiverNetworkIDField;
        
        private string toPhoneNumberField;
        
        private string fromPhonenumberField;
        
        private string fromAddressField;
        
        private string toAddressField;
        
        private System.DateTime msgReceivedField;
        
        private string msgTypeField;
        
        private string msgURLField;
        
        private string msgTextField;
        
        private string msgStatusField;
        
        private string msgSubjectField;
        
        private System.DateTime msgCreatedField;
        
        private int msgPriorityField;
        
        private bool msgRecordedField;
        
        private bool isApprovedField;
        
        private bool isAcknowledgedField;
        
        private string msgTitleField;
        
        /// <remarks/>
        public long MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int MemberID {
            get {
                return this.memberIDField;
            }
            set {
                this.memberIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public int LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgSent {
            get {
                return this.msgSentField;
            }
            set {
                this.msgSentField = value;
            }
        }
        
        /// <remarks/>
        public string MemberNotes {
            get {
                return this.memberNotesField;
            }
            set {
                this.memberNotesField = value;
            }
        }
        
        /// <remarks/>
        public int SenderMemberID {
            get {
                return this.senderMemberIDField;
            }
            set {
                this.senderMemberIDField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiverMemberID {
            get {
                return this.receiverMemberIDField;
            }
            set {
                this.receiverMemberIDField = value;
            }
        }
        
        /// <remarks/>
        public int SenderSponsorID {
            get {
                return this.senderSponsorIDField;
            }
            set {
                this.senderSponsorIDField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiverSponsorID {
            get {
                return this.receiverSponsorIDField;
            }
            set {
                this.receiverSponsorIDField = value;
            }
        }
        
        /// <remarks/>
        public int SenderNetworkID {
            get {
                return this.senderNetworkIDField;
            }
            set {
                this.senderNetworkIDField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiverNetworkID {
            get {
                return this.receiverNetworkIDField;
            }
            set {
                this.receiverNetworkIDField = value;
            }
        }
        
        /// <remarks/>
        public string ToPhoneNumber {
            get {
                return this.toPhoneNumberField;
            }
            set {
                this.toPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FromPhonenumber {
            get {
                return this.fromPhonenumberField;
            }
            set {
                this.fromPhonenumberField = value;
            }
        }
        
        /// <remarks/>
        public string FromAddress {
            get {
                return this.fromAddressField;
            }
            set {
                this.fromAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ToAddress {
            get {
                return this.toAddressField;
            }
            set {
                this.toAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MsgReceived {
            get {
                return this.msgReceivedField;
            }
            set {
                this.msgReceivedField = value;
            }
        }
        
        /// <remarks/>
        public string MsgType {
            get {
                return this.msgTypeField;
            }
            set {
                this.msgTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MsgURL {
            get {
                return this.msgURLField;
            }
            set {
                this.msgURLField = value;
            }
        }
        
        /// <remarks/>
        public string MsgText {
            get {
                return this.msgTextField;
            }
            set {
                this.msgTextField = value;
            }
        }
        
        /// <remarks/>
        public string MsgStatus {
            get {
                return this.msgStatusField;
            }
            set {
                this.msgStatusField = value;
            }
        }
        
        /// <remarks/>
        public string MsgSubject {
            get {
                return this.msgSubjectField;
            }
            set {
                this.msgSubjectField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MsgCreated {
            get {
                return this.msgCreatedField;
            }
            set {
                this.msgCreatedField = value;
            }
        }
        
        /// <remarks/>
        public int MsgPriority {
            get {
                return this.msgPriorityField;
            }
            set {
                this.msgPriorityField = value;
            }
        }
        
        /// <remarks/>
        public bool MsgRecorded {
            get {
                return this.msgRecordedField;
            }
            set {
                this.msgRecordedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsApproved {
            get {
                return this.isApprovedField;
            }
            set {
                this.isApprovedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAcknowledged {
            get {
                return this.isAcknowledgedField;
            }
            set {
                this.isAcknowledgedField = value;
            }
        }
        
        /// <remarks/>
        public string MsgTitle {
            get {
                return this.msgTitleField;
            }
            set {
                this.msgTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CTechWS.com/CTechWS")]
    public partial class CallStatusClass {
        
        private System.Data.DataSet statusRowListField;
        
        private int memberIdField;
        
        private string phoneNumberField;
        
        private string accountTypeCodeField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string addressLine1Field;
        
        private string cityField;
        
        private string zipCodeField;
        
        private string stateField;
        
        private System.DateTime dateCalledField;
        
        private int netWorkRefIdField;
        
        private int sponsorIdField;
        
        private int scheduleIDField;
        
        private string callTypeField;
        
        private string messageField;
        
        private string callDurationField;
        
        private string provider_Type_CDField;
        
        private string callOutcomeField;
        
        private int careGiverIDField;
        
        private string careGiverFirstNameField;
        
        private string careGiverLastNameField;
        
        private string careGiverPhoneField;
        
        private string agentField;
        
        private long logIDField;
        
        private string statusIndField;
        
        private bool isStatusLoadedField;
        
        private bool isNetworkLoadedField;
        
        private string bSTypeField;
        
        private string bPTypeField;
        
        private string tPTypeField;
        
        private string wTTypeField;
        
        /// <remarks/>
        public System.Data.DataSet StatusRowList {
            get {
                return this.statusRowListField;
            }
            set {
                this.statusRowListField = value;
            }
        }
        
        /// <remarks/>
        public int MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTypeCode {
            get {
                return this.accountTypeCodeField;
            }
            set {
                this.accountTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCalled {
            get {
                return this.dateCalledField;
            }
            set {
                this.dateCalledField = value;
            }
        }
        
        /// <remarks/>
        public int NetWorkRefId {
            get {
                return this.netWorkRefIdField;
            }
            set {
                this.netWorkRefIdField = value;
            }
        }
        
        /// <remarks/>
        public int SponsorId {
            get {
                return this.sponsorIdField;
            }
            set {
                this.sponsorIdField = value;
            }
        }
        
        /// <remarks/>
        public int ScheduleID {
            get {
                return this.scheduleIDField;
            }
            set {
                this.scheduleIDField = value;
            }
        }
        
        /// <remarks/>
        public string CallType {
            get {
                return this.callTypeField;
            }
            set {
                this.callTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string CallDuration {
            get {
                return this.callDurationField;
            }
            set {
                this.callDurationField = value;
            }
        }
        
        /// <remarks/>
        public string Provider_Type_CD {
            get {
                return this.provider_Type_CDField;
            }
            set {
                this.provider_Type_CDField = value;
            }
        }
        
        /// <remarks/>
        public string CallOutcome {
            get {
                return this.callOutcomeField;
            }
            set {
                this.callOutcomeField = value;
            }
        }
        
        /// <remarks/>
        public int CareGiverID {
            get {
                return this.careGiverIDField;
            }
            set {
                this.careGiverIDField = value;
            }
        }
        
        /// <remarks/>
        public string CareGiverFirstName {
            get {
                return this.careGiverFirstNameField;
            }
            set {
                this.careGiverFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string CareGiverLastName {
            get {
                return this.careGiverLastNameField;
            }
            set {
                this.careGiverLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string CareGiverPhone {
            get {
                return this.careGiverPhoneField;
            }
            set {
                this.careGiverPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Agent {
            get {
                return this.agentField;
            }
            set {
                this.agentField = value;
            }
        }
        
        /// <remarks/>
        public long LogID {
            get {
                return this.logIDField;
            }
            set {
                this.logIDField = value;
            }
        }
        
        /// <remarks/>
        public string StatusInd {
            get {
                return this.statusIndField;
            }
            set {
                this.statusIndField = value;
            }
        }
        
        /// <remarks/>
        public bool IsStatusLoaded {
            get {
                return this.isStatusLoadedField;
            }
            set {
                this.isStatusLoadedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNetworkLoaded {
            get {
                return this.isNetworkLoadedField;
            }
            set {
                this.isNetworkLoadedField = value;
            }
        }
        
        /// <remarks/>
        public string BSType {
            get {
                return this.bSTypeField;
            }
            set {
                this.bSTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BPType {
            get {
                return this.bPTypeField;
            }
            set {
                this.bPTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TPType {
            get {
                return this.tPTypeField;
            }
            set {
                this.tPTypeField = value;
            }
        }
        
        /// <remarks/>
        public string WTType {
            get {
                return this.wTTypeField;
            }
            set {
                this.wTTypeField = value;
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRptPhoneNumberCalls")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    public partial class dsRptPhoneNumberCalls : global::System.Data.DataSet {
        
        private rpt_CallerLogByPhoneNumberDataTable tablerpt_CallerLogByPhoneNumber;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsRptPhoneNumberCalls() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsRptPhoneNumberCalls(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["rpt_CallerLogByPhoneNumber"] != null)) {
                    base.Tables.Add(new rpt_CallerLogByPhoneNumberDataTable(ds.Tables["rpt_CallerLogByPhoneNumber"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rpt_CallerLogByPhoneNumberDataTable rpt_CallerLogByPhoneNumber {
            get {
                return this.tablerpt_CallerLogByPhoneNumber;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsRptPhoneNumberCalls cln = ((dsRptPhoneNumberCalls)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["rpt_CallerLogByPhoneNumber"] != null)) {
                    base.Tables.Add(new rpt_CallerLogByPhoneNumberDataTable(ds.Tables["rpt_CallerLogByPhoneNumber"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablerpt_CallerLogByPhoneNumber = ((rpt_CallerLogByPhoneNumberDataTable)(base.Tables["rpt_CallerLogByPhoneNumber"]));
            if ((initTable == true)) {
                if ((this.tablerpt_CallerLogByPhoneNumber != null)) {
                    this.tablerpt_CallerLogByPhoneNumber.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsRptPhoneNumberCalls";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRptPhoneNumberCalls.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablerpt_CallerLogByPhoneNumber = new rpt_CallerLogByPhoneNumberDataTable();
            base.Tables.Add(this.tablerpt_CallerLogByPhoneNumber);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializerpt_CallerLogByPhoneNumber() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRptPhoneNumberCalls ds = new dsRptPhoneNumberCalls();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void rpt_CallerLogByPhoneNumberRowChangeEventHandler(object sender, rpt_CallerLogByPhoneNumberRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rpt_CallerLogByPhoneNumberDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAccountTypeCode;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnZipCode;
            
            private global::System.Data.DataColumn columnDateCalled;
            
            private global::System.Data.DataColumn columnScheduleID;
            
            private global::System.Data.DataColumn columnCallType;
            
            private global::System.Data.DataColumn columnMessage;
            
            private global::System.Data.DataColumn columnMemberId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogByPhoneNumberDataTable() {
                this.TableName = "rpt_CallerLogByPhoneNumber";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallerLogByPhoneNumberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected rpt_CallerLogByPhoneNumberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountTypeCodeColumn {
                get {
                    return this.columnAccountTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZipCodeColumn {
                get {
                    return this.columnZipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCalledColumn {
                get {
                    return this.columnDateCalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScheduleIDColumn {
                get {
                    return this.columnScheduleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallTypeColumn {
                get {
                    return this.columnCallType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemberIdColumn {
                get {
                    return this.columnMemberId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogByPhoneNumberRow this[int index] {
                get {
                    return ((rpt_CallerLogByPhoneNumberRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogByPhoneNumberRowChangeEventHandler rpt_CallerLogByPhoneNumberRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogByPhoneNumberRowChangeEventHandler rpt_CallerLogByPhoneNumberRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogByPhoneNumberRowChangeEventHandler rpt_CallerLogByPhoneNumberRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogByPhoneNumberRowChangeEventHandler rpt_CallerLogByPhoneNumberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addrpt_CallerLogByPhoneNumberRow(rpt_CallerLogByPhoneNumberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogByPhoneNumberRow Addrpt_CallerLogByPhoneNumberRow(string AccountTypeCode, string PhoneNumber, string FirstName, string LastName, string ZipCode, System.DateTime DateCalled, int ScheduleID, string CallType, string Message, int MemberId) {
                rpt_CallerLogByPhoneNumberRow rowrpt_CallerLogByPhoneNumberRow = ((rpt_CallerLogByPhoneNumberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountTypeCode,
                        PhoneNumber,
                        FirstName,
                        LastName,
                        ZipCode,
                        DateCalled,
                        ScheduleID,
                        CallType,
                        Message,
                        MemberId};
                rowrpt_CallerLogByPhoneNumberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrpt_CallerLogByPhoneNumberRow);
                return rowrpt_CallerLogByPhoneNumberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rpt_CallerLogByPhoneNumberDataTable cln = ((rpt_CallerLogByPhoneNumberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rpt_CallerLogByPhoneNumberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAccountTypeCode = base.Columns["AccountTypeCode"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnZipCode = base.Columns["ZipCode"];
                this.columnDateCalled = base.Columns["DateCalled"];
                this.columnScheduleID = base.Columns["ScheduleID"];
                this.columnCallType = base.Columns["CallType"];
                this.columnMessage = base.Columns["Message"];
                this.columnMemberId = base.Columns["MemberId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAccountTypeCode = new global::System.Data.DataColumn("AccountTypeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountTypeCode);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnZipCode = new global::System.Data.DataColumn("ZipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZipCode);
                this.columnDateCalled = new global::System.Data.DataColumn("DateCalled", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCalled);
                this.columnScheduleID = new global::System.Data.DataColumn("ScheduleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleID);
                this.columnCallType = new global::System.Data.DataColumn("CallType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallType);
                this.columnMessage = new global::System.Data.DataColumn("Message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage);
                this.columnMemberId = new global::System.Data.DataColumn("MemberId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberId);
                this.columnAccountTypeCode.MaxLength = 10;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 10;
                this.columnFirstName.MaxLength = 22;
                this.columnLastName.MaxLength = 22;
                this.columnZipCode.MaxLength = 5;
                this.columnDateCalled.AllowDBNull = false;
                this.columnCallType.MaxLength = 50;
                this.columnMessage.MaxLength = 800;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogByPhoneNumberRow Newrpt_CallerLogByPhoneNumberRow() {
                return ((rpt_CallerLogByPhoneNumberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rpt_CallerLogByPhoneNumberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rpt_CallerLogByPhoneNumberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rpt_CallerLogByPhoneNumberRowChanged != null)) {
                    this.rpt_CallerLogByPhoneNumberRowChanged(this, new rpt_CallerLogByPhoneNumberRowChangeEvent(((rpt_CallerLogByPhoneNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rpt_CallerLogByPhoneNumberRowChanging != null)) {
                    this.rpt_CallerLogByPhoneNumberRowChanging(this, new rpt_CallerLogByPhoneNumberRowChangeEvent(((rpt_CallerLogByPhoneNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rpt_CallerLogByPhoneNumberRowDeleted != null)) {
                    this.rpt_CallerLogByPhoneNumberRowDeleted(this, new rpt_CallerLogByPhoneNumberRowChangeEvent(((rpt_CallerLogByPhoneNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rpt_CallerLogByPhoneNumberRowDeleting != null)) {
                    this.rpt_CallerLogByPhoneNumberRowDeleting(this, new rpt_CallerLogByPhoneNumberRowChangeEvent(((rpt_CallerLogByPhoneNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removerpt_CallerLogByPhoneNumberRow(rpt_CallerLogByPhoneNumberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRptPhoneNumberCalls ds = new dsRptPhoneNumberCalls();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rpt_CallerLogByPhoneNumberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rpt_CallerLogByPhoneNumberRow : global::System.Data.DataRow {
            
            private rpt_CallerLogByPhoneNumberDataTable tablerpt_CallerLogByPhoneNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallerLogByPhoneNumberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerpt_CallerLogByPhoneNumber = ((rpt_CallerLogByPhoneNumberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountTypeCode {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogByPhoneNumber.AccountTypeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountTypeCode\' in table \'rpt_CallerLogByPhoneNumber\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.AccountTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tablerpt_CallerLogByPhoneNumber.PhoneNumberColumn]));
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogByPhoneNumber.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'rpt_CallerLogByPhoneNumber\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogByPhoneNumber.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'rpt_CallerLogByPhoneNumber\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ZipCode {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogByPhoneNumber.ZipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZipCode\' in table \'rpt_CallerLogByPhoneNumber\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.ZipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCalled {
                get {
                    return ((global::System.DateTime)(this[this.tablerpt_CallerLogByPhoneNumber.DateCalledColumn]));
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.DateCalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ScheduleID {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallerLogByPhoneNumber.ScheduleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduleID\' in table \'rpt_CallerLogByPhoneNumber\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.ScheduleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CallType {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogByPhoneNumber.CallTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallType\' in table \'rpt_CallerLogByPhoneNumber\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.CallTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Message {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogByPhoneNumber.MessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Message\' in table \'rpt_CallerLogByPhoneNumber\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.MessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MemberId {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallerLogByPhoneNumber.MemberIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberId\' in table \'rpt_CallerLogByPhoneNumber\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogByPhoneNumber.MemberIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountTypeCodeNull() {
                return this.IsNull(this.tablerpt_CallerLogByPhoneNumber.AccountTypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountTypeCodeNull() {
                this[this.tablerpt_CallerLogByPhoneNumber.AccountTypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tablerpt_CallerLogByPhoneNumber.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirstNameNull() {
                this[this.tablerpt_CallerLogByPhoneNumber.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastNameNull() {
                return this.IsNull(this.tablerpt_CallerLogByPhoneNumber.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastNameNull() {
                this[this.tablerpt_CallerLogByPhoneNumber.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZipCodeNull() {
                return this.IsNull(this.tablerpt_CallerLogByPhoneNumber.ZipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZipCodeNull() {
                this[this.tablerpt_CallerLogByPhoneNumber.ZipCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScheduleIDNull() {
                return this.IsNull(this.tablerpt_CallerLogByPhoneNumber.ScheduleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScheduleIDNull() {
                this[this.tablerpt_CallerLogByPhoneNumber.ScheduleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallTypeNull() {
                return this.IsNull(this.tablerpt_CallerLogByPhoneNumber.CallTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallTypeNull() {
                this[this.tablerpt_CallerLogByPhoneNumber.CallTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMessageNull() {
                return this.IsNull(this.tablerpt_CallerLogByPhoneNumber.MessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMessageNull() {
                this[this.tablerpt_CallerLogByPhoneNumber.MessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemberIdNull() {
                return this.IsNull(this.tablerpt_CallerLogByPhoneNumber.MemberIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemberIdNull() {
                this[this.tablerpt_CallerLogByPhoneNumber.MemberIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class rpt_CallerLogByPhoneNumberRowChangeEvent : global::System.EventArgs {
            
            private rpt_CallerLogByPhoneNumberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogByPhoneNumberRowChangeEvent(rpt_CallerLogByPhoneNumberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogByPhoneNumberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRptCountByDayHr")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    public partial class dsRptCountByDayHr : global::System.Data.DataSet {
        
        private rpt_CallerLogCountsByDayHourDataTable tablerpt_CallerLogCountsByDayHour;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsRptCountByDayHr() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsRptCountByDayHr(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["rpt_CallerLogCountsByDayHour"] != null)) {
                    base.Tables.Add(new rpt_CallerLogCountsByDayHourDataTable(ds.Tables["rpt_CallerLogCountsByDayHour"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rpt_CallerLogCountsByDayHourDataTable rpt_CallerLogCountsByDayHour {
            get {
                return this.tablerpt_CallerLogCountsByDayHour;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsRptCountByDayHr cln = ((dsRptCountByDayHr)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["rpt_CallerLogCountsByDayHour"] != null)) {
                    base.Tables.Add(new rpt_CallerLogCountsByDayHourDataTable(ds.Tables["rpt_CallerLogCountsByDayHour"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablerpt_CallerLogCountsByDayHour = ((rpt_CallerLogCountsByDayHourDataTable)(base.Tables["rpt_CallerLogCountsByDayHour"]));
            if ((initTable == true)) {
                if ((this.tablerpt_CallerLogCountsByDayHour != null)) {
                    this.tablerpt_CallerLogCountsByDayHour.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsRptCountByDayHr";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRptCountByDayHr.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablerpt_CallerLogCountsByDayHour = new rpt_CallerLogCountsByDayHourDataTable();
            base.Tables.Add(this.tablerpt_CallerLogCountsByDayHour);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializerpt_CallerLogCountsByDayHour() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRptCountByDayHr ds = new dsRptCountByDayHr();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void rpt_CallerLogCountsByDayHourRowChangeEventHandler(object sender, rpt_CallerLogCountsByDayHourRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rpt_CallerLogCountsByDayHourDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCall_Count;
            
            private global::System.Data.DataColumn columnDateCalled;
            
            private global::System.Data.DataColumn columnTimeCalled;
            
            private global::System.Data.DataColumn columnCallType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDayHourDataTable() {
                this.TableName = "rpt_CallerLogCountsByDayHour";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallerLogCountsByDayHourDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected rpt_CallerLogCountsByDayHourDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Call_CountColumn {
                get {
                    return this.columnCall_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCalledColumn {
                get {
                    return this.columnDateCalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeCalledColumn {
                get {
                    return this.columnTimeCalled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallTypeColumn {
                get {
                    return this.columnCallType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDayHourRow this[int index] {
                get {
                    return ((rpt_CallerLogCountsByDayHourRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsByDayHourRowChangeEventHandler rpt_CallerLogCountsByDayHourRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsByDayHourRowChangeEventHandler rpt_CallerLogCountsByDayHourRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsByDayHourRowChangeEventHandler rpt_CallerLogCountsByDayHourRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rpt_CallerLogCountsByDayHourRowChangeEventHandler rpt_CallerLogCountsByDayHourRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addrpt_CallerLogCountsByDayHourRow(rpt_CallerLogCountsByDayHourRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDayHourRow Addrpt_CallerLogCountsByDayHourRow(int Call_Count, string DateCalled, string TimeCalled, string CallType) {
                rpt_CallerLogCountsByDayHourRow rowrpt_CallerLogCountsByDayHourRow = ((rpt_CallerLogCountsByDayHourRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Call_Count,
                        DateCalled,
                        TimeCalled,
                        CallType};
                rowrpt_CallerLogCountsByDayHourRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrpt_CallerLogCountsByDayHourRow);
                return rowrpt_CallerLogCountsByDayHourRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rpt_CallerLogCountsByDayHourDataTable cln = ((rpt_CallerLogCountsByDayHourDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rpt_CallerLogCountsByDayHourDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCall_Count = base.Columns["Call_Count"];
                this.columnDateCalled = base.Columns["DateCalled"];
                this.columnTimeCalled = base.Columns["TimeCalled"];
                this.columnCallType = base.Columns["CallType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCall_Count = new global::System.Data.DataColumn("Call_Count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Count);
                this.columnDateCalled = new global::System.Data.DataColumn("DateCalled", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCalled);
                this.columnTimeCalled = new global::System.Data.DataColumn("TimeCalled", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeCalled);
                this.columnCallType = new global::System.Data.DataColumn("CallType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallType);
                this.columnCall_Count.ReadOnly = true;
                this.columnDateCalled.ReadOnly = true;
                this.columnDateCalled.MaxLength = 12;
                this.columnTimeCalled.ReadOnly = true;
                this.columnTimeCalled.MaxLength = 8;
                this.columnCallType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDayHourRow Newrpt_CallerLogCountsByDayHourRow() {
                return ((rpt_CallerLogCountsByDayHourRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rpt_CallerLogCountsByDayHourRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rpt_CallerLogCountsByDayHourRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rpt_CallerLogCountsByDayHourRowChanged != null)) {
                    this.rpt_CallerLogCountsByDayHourRowChanged(this, new rpt_CallerLogCountsByDayHourRowChangeEvent(((rpt_CallerLogCountsByDayHourRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rpt_CallerLogCountsByDayHourRowChanging != null)) {
                    this.rpt_CallerLogCountsByDayHourRowChanging(this, new rpt_CallerLogCountsByDayHourRowChangeEvent(((rpt_CallerLogCountsByDayHourRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rpt_CallerLogCountsByDayHourRowDeleted != null)) {
                    this.rpt_CallerLogCountsByDayHourRowDeleted(this, new rpt_CallerLogCountsByDayHourRowChangeEvent(((rpt_CallerLogCountsByDayHourRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rpt_CallerLogCountsByDayHourRowDeleting != null)) {
                    this.rpt_CallerLogCountsByDayHourRowDeleting(this, new rpt_CallerLogCountsByDayHourRowChangeEvent(((rpt_CallerLogCountsByDayHourRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removerpt_CallerLogCountsByDayHourRow(rpt_CallerLogCountsByDayHourRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRptCountByDayHr ds = new dsRptCountByDayHr();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rpt_CallerLogCountsByDayHourDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rpt_CallerLogCountsByDayHourRow : global::System.Data.DataRow {
            
            private rpt_CallerLogCountsByDayHourDataTable tablerpt_CallerLogCountsByDayHour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rpt_CallerLogCountsByDayHourRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerpt_CallerLogCountsByDayHour = ((rpt_CallerLogCountsByDayHourDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Call_Count {
                get {
                    try {
                        return ((int)(this[this.tablerpt_CallerLogCountsByDayHour.Call_CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Count\' in table \'rpt_CallerLogCountsByDayHour\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCountsByDayHour.Call_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DateCalled {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogCountsByDayHour.DateCalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCalled\' in table \'rpt_CallerLogCountsByDayHour\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCountsByDayHour.DateCalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TimeCalled {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogCountsByDayHour.TimeCalledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeCalled\' in table \'rpt_CallerLogCountsByDayHour\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCountsByDayHour.TimeCalledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CallType {
                get {
                    try {
                        return ((string)(this[this.tablerpt_CallerLogCountsByDayHour.CallTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallType\' in table \'rpt_CallerLogCountsByDayHour\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablerpt_CallerLogCountsByDayHour.CallTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCall_CountNull() {
                return this.IsNull(this.tablerpt_CallerLogCountsByDayHour.Call_CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCall_CountNull() {
                this[this.tablerpt_CallerLogCountsByDayHour.Call_CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCalledNull() {
                return this.IsNull(this.tablerpt_CallerLogCountsByDayHour.DateCalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCalledNull() {
                this[this.tablerpt_CallerLogCountsByDayHour.DateCalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeCalledNull() {
                return this.IsNull(this.tablerpt_CallerLogCountsByDayHour.TimeCalledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeCalledNull() {
                this[this.tablerpt_CallerLogCountsByDayHour.TimeCalledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallTypeNull() {
                return this.IsNull(this.tablerpt_CallerLogCountsByDayHour.CallTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallTypeNull() {
                this[this.tablerpt_CallerLogCountsByDayHour.CallTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class rpt_CallerLogCountsByDayHourRowChangeEvent : global::System.EventArgs {
            
            private rpt_CallerLogCountsByDayHourRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDayHourRowChangeEvent(rpt_CallerLogCountsByDayHourRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rpt_CallerLogCountsByDayHourRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsReferrals")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    public partial class dsReferrals : global::System.Data.DataSet {
        
        private get_AllReferralsByReceiverIDDataTable tableget_AllReferralsByReceiverID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsReferrals() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsReferrals(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["get_AllReferralsByReceiverID"] != null)) {
                    base.Tables.Add(new get_AllReferralsByReceiverIDDataTable(ds.Tables["get_AllReferralsByReceiverID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public get_AllReferralsByReceiverIDDataTable get_AllReferralsByReceiverID {
            get {
                return this.tableget_AllReferralsByReceiverID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsReferrals cln = ((dsReferrals)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["get_AllReferralsByReceiverID"] != null)) {
                    base.Tables.Add(new get_AllReferralsByReceiverIDDataTable(ds.Tables["get_AllReferralsByReceiverID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableget_AllReferralsByReceiverID = ((get_AllReferralsByReceiverIDDataTable)(base.Tables["get_AllReferralsByReceiverID"]));
            if ((initTable == true)) {
                if ((this.tableget_AllReferralsByReceiverID != null)) {
                    this.tableget_AllReferralsByReceiverID.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsReferrals";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsReferrals.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableget_AllReferralsByReceiverID = new get_AllReferralsByReceiverIDDataTable();
            base.Tables.Add(this.tableget_AllReferralsByReceiverID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeget_AllReferralsByReceiverID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsReferrals ds = new dsReferrals();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void get_AllReferralsByReceiverIDRowChangeEventHandler(object sender, get_AllReferralsByReceiverIDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class get_AllReferralsByReceiverIDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMsgID;
            
            private global::System.Data.DataColumn columnMemberID;
            
            private global::System.Data.DataColumn columnToPhoneNumber;
            
            private global::System.Data.DataColumn columnFromPhonenumber;
            
            private global::System.Data.DataColumn columnFromAddress;
            
            private global::System.Data.DataColumn columnToAddress;
            
            private global::System.Data.DataColumn columnMsgText;
            
            private global::System.Data.DataColumn columnMsgSubject;
            
            private global::System.Data.DataColumn columnMsgTitle;
            
            private global::System.Data.DataColumn columnMsgPriority;
            
            private global::System.Data.DataColumn columnMsgType;
            
            private global::System.Data.DataColumn columnSenderNetworkID;
            
            private global::System.Data.DataColumn columnSenderSponsorID;
            
            private global::System.Data.DataColumn columnSenderMemberID;
            
            private global::System.Data.DataColumn columnReceiverMemberID;
            
            private global::System.Data.DataColumn columnReceiverSponsorID;
            
            private global::System.Data.DataColumn columnReceiverNetworkID;
            
            private global::System.Data.DataColumn columnMsgSent;
            
            private global::System.Data.DataColumn columnMsgURL;
            
            private global::System.Data.DataColumn columnMessageRecorded;
            
            private global::System.Data.DataColumn columnMsgCreated;
            
            private global::System.Data.DataColumn columnMsgReceived;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdated;
            
            private global::System.Data.DataColumn columnMsgStatus;
            
            private global::System.Data.DataColumn columnIsApproved;
            
            private global::System.Data.DataColumn columnIsAcknowledged;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public get_AllReferralsByReceiverIDDataTable() {
                this.TableName = "get_AllReferralsByReceiverID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal get_AllReferralsByReceiverIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected get_AllReferralsByReceiverIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgIDColumn {
                get {
                    return this.columnMsgID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemberIDColumn {
                get {
                    return this.columnMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToPhoneNumberColumn {
                get {
                    return this.columnToPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FromPhonenumberColumn {
                get {
                    return this.columnFromPhonenumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FromAddressColumn {
                get {
                    return this.columnFromAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToAddressColumn {
                get {
                    return this.columnToAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgTextColumn {
                get {
                    return this.columnMsgText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgSubjectColumn {
                get {
                    return this.columnMsgSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgTitleColumn {
                get {
                    return this.columnMsgTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgPriorityColumn {
                get {
                    return this.columnMsgPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgTypeColumn {
                get {
                    return this.columnMsgType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SenderNetworkIDColumn {
                get {
                    return this.columnSenderNetworkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SenderSponsorIDColumn {
                get {
                    return this.columnSenderSponsorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SenderMemberIDColumn {
                get {
                    return this.columnSenderMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiverMemberIDColumn {
                get {
                    return this.columnReceiverMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiverSponsorIDColumn {
                get {
                    return this.columnReceiverSponsorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiverNetworkIDColumn {
                get {
                    return this.columnReceiverNetworkID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgSentColumn {
                get {
                    return this.columnMsgSent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgURLColumn {
                get {
                    return this.columnMsgURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MessageRecordedColumn {
                get {
                    return this.columnMessageRecorded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgCreatedColumn {
                get {
                    return this.columnMsgCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgReceivedColumn {
                get {
                    return this.columnMsgReceived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MsgStatusColumn {
                get {
                    return this.columnMsgStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsApprovedColumn {
                get {
                    return this.columnIsApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsAcknowledgedColumn {
                get {
                    return this.columnIsAcknowledged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public get_AllReferralsByReceiverIDRow this[int index] {
                get {
                    return ((get_AllReferralsByReceiverIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event get_AllReferralsByReceiverIDRowChangeEventHandler get_AllReferralsByReceiverIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event get_AllReferralsByReceiverIDRowChangeEventHandler get_AllReferralsByReceiverIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event get_AllReferralsByReceiverIDRowChangeEventHandler get_AllReferralsByReceiverIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event get_AllReferralsByReceiverIDRowChangeEventHandler get_AllReferralsByReceiverIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addget_AllReferralsByReceiverIDRow(get_AllReferralsByReceiverIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public get_AllReferralsByReceiverIDRow Addget_AllReferralsByReceiverIDRow(
                        int MemberID, 
                        string ToPhoneNumber, 
                        string FromPhonenumber, 
                        string FromAddress, 
                        string ToAddress, 
                        string MsgText, 
                        string MsgSubject, 
                        string MsgTitle, 
                        int MsgPriority, 
                        string MsgType, 
                        int SenderNetworkID, 
                        int SenderSponsorID, 
                        int SenderMemberID, 
                        int ReceiverMemberID, 
                        int ReceiverSponsorID, 
                        int ReceiverNetworkID, 
                        bool MsgSent, 
                        string MsgURL, 
                        bool MessageRecorded, 
                        System.DateTime MsgCreated, 
                        System.DateTime MsgReceived, 
                        int LastUpdatedBy, 
                        System.DateTime LastUpdated, 
                        string MsgStatus, 
                        bool IsApproved, 
                        bool IsAcknowledged) {
                get_AllReferralsByReceiverIDRow rowget_AllReferralsByReceiverIDRow = ((get_AllReferralsByReceiverIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MemberID,
                        ToPhoneNumber,
                        FromPhonenumber,
                        FromAddress,
                        ToAddress,
                        MsgText,
                        MsgSubject,
                        MsgTitle,
                        MsgPriority,
                        MsgType,
                        SenderNetworkID,
                        SenderSponsorID,
                        SenderMemberID,
                        ReceiverMemberID,
                        ReceiverSponsorID,
                        ReceiverNetworkID,
                        MsgSent,
                        MsgURL,
                        MessageRecorded,
                        MsgCreated,
                        MsgReceived,
                        LastUpdatedBy,
                        LastUpdated,
                        MsgStatus,
                        IsApproved,
                        IsAcknowledged};
                rowget_AllReferralsByReceiverIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowget_AllReferralsByReceiverIDRow);
                return rowget_AllReferralsByReceiverIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public get_AllReferralsByReceiverIDRow FindByMsgID(long MsgID) {
                return ((get_AllReferralsByReceiverIDRow)(this.Rows.Find(new object[] {
                            MsgID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                get_AllReferralsByReceiverIDDataTable cln = ((get_AllReferralsByReceiverIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new get_AllReferralsByReceiverIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMsgID = base.Columns["MsgID"];
                this.columnMemberID = base.Columns["MemberID"];
                this.columnToPhoneNumber = base.Columns["ToPhoneNumber"];
                this.columnFromPhonenumber = base.Columns["FromPhonenumber"];
                this.columnFromAddress = base.Columns["FromAddress"];
                this.columnToAddress = base.Columns["ToAddress"];
                this.columnMsgText = base.Columns["MsgText"];
                this.columnMsgSubject = base.Columns["MsgSubject"];
                this.columnMsgTitle = base.Columns["MsgTitle"];
                this.columnMsgPriority = base.Columns["MsgPriority"];
                this.columnMsgType = base.Columns["MsgType"];
                this.columnSenderNetworkID = base.Columns["SenderNetworkID"];
                this.columnSenderSponsorID = base.Columns["SenderSponsorID"];
                this.columnSenderMemberID = base.Columns["SenderMemberID"];
                this.columnReceiverMemberID = base.Columns["ReceiverMemberID"];
                this.columnReceiverSponsorID = base.Columns["ReceiverSponsorID"];
                this.columnReceiverNetworkID = base.Columns["ReceiverNetworkID"];
                this.columnMsgSent = base.Columns["MsgSent"];
                this.columnMsgURL = base.Columns["MsgURL"];
                this.columnMessageRecorded = base.Columns["MessageRecorded"];
                this.columnMsgCreated = base.Columns["MsgCreated"];
                this.columnMsgReceived = base.Columns["MsgReceived"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdated = base.Columns["LastUpdated"];
                this.columnMsgStatus = base.Columns["MsgStatus"];
                this.columnIsApproved = base.Columns["IsApproved"];
                this.columnIsAcknowledged = base.Columns["IsAcknowledged"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMsgID = new global::System.Data.DataColumn("MsgID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgID);
                this.columnMemberID = new global::System.Data.DataColumn("MemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberID);
                this.columnToPhoneNumber = new global::System.Data.DataColumn("ToPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToPhoneNumber);
                this.columnFromPhonenumber = new global::System.Data.DataColumn("FromPhonenumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromPhonenumber);
                this.columnFromAddress = new global::System.Data.DataColumn("FromAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromAddress);
                this.columnToAddress = new global::System.Data.DataColumn("ToAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToAddress);
                this.columnMsgText = new global::System.Data.DataColumn("MsgText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgText);
                this.columnMsgSubject = new global::System.Data.DataColumn("MsgSubject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgSubject);
                this.columnMsgTitle = new global::System.Data.DataColumn("MsgTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgTitle);
                this.columnMsgPriority = new global::System.Data.DataColumn("MsgPriority", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgPriority);
                this.columnMsgType = new global::System.Data.DataColumn("MsgType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgType);
                this.columnSenderNetworkID = new global::System.Data.DataColumn("SenderNetworkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenderNetworkID);
                this.columnSenderSponsorID = new global::System.Data.DataColumn("SenderSponsorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenderSponsorID);
                this.columnSenderMemberID = new global::System.Data.DataColumn("SenderMemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenderMemberID);
                this.columnReceiverMemberID = new global::System.Data.DataColumn("ReceiverMemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiverMemberID);
                this.columnReceiverSponsorID = new global::System.Data.DataColumn("ReceiverSponsorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiverSponsorID);
                this.columnReceiverNetworkID = new global::System.Data.DataColumn("ReceiverNetworkID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiverNetworkID);
                this.columnMsgSent = new global::System.Data.DataColumn("MsgSent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgSent);
                this.columnMsgURL = new global::System.Data.DataColumn("MsgURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgURL);
                this.columnMessageRecorded = new global::System.Data.DataColumn("MessageRecorded", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageRecorded);
                this.columnMsgCreated = new global::System.Data.DataColumn("MsgCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgCreated);
                this.columnMsgReceived = new global::System.Data.DataColumn("MsgReceived", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgReceived);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdated = new global::System.Data.DataColumn("LastUpdated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdated);
                this.columnMsgStatus = new global::System.Data.DataColumn("MsgStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgStatus);
                this.columnIsApproved = new global::System.Data.DataColumn("IsApproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsApproved);
                this.columnIsAcknowledged = new global::System.Data.DataColumn("IsAcknowledged", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAcknowledged);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMsgID}, true));
                this.columnMsgID.AutoIncrement = true;
                this.columnMsgID.AllowDBNull = false;
                this.columnMsgID.ReadOnly = true;
                this.columnMsgID.Unique = true;
                this.columnMemberID.AllowDBNull = false;
                this.columnToPhoneNumber.MaxLength = 10;
                this.columnFromPhonenumber.MaxLength = 10;
                this.columnFromAddress.MaxLength = 255;
                this.columnToAddress.MaxLength = 255;
                this.columnMsgText.MaxLength = 60;
                this.columnMsgSubject.MaxLength = 60;
                this.columnMsgTitle.MaxLength = 60;
                this.columnMsgType.MaxLength = 50;
                this.columnSenderMemberID.AllowDBNull = false;
                this.columnMsgURL.MaxLength = 255;
                this.columnLastUpdated.AllowDBNull = false;
                this.columnMsgStatus.AllowDBNull = false;
                this.columnMsgStatus.MaxLength = 50;
                this.columnIsApproved.AllowDBNull = false;
                this.columnIsAcknowledged.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public get_AllReferralsByReceiverIDRow Newget_AllReferralsByReceiverIDRow() {
                return ((get_AllReferralsByReceiverIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new get_AllReferralsByReceiverIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(get_AllReferralsByReceiverIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.get_AllReferralsByReceiverIDRowChanged != null)) {
                    this.get_AllReferralsByReceiverIDRowChanged(this, new get_AllReferralsByReceiverIDRowChangeEvent(((get_AllReferralsByReceiverIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.get_AllReferralsByReceiverIDRowChanging != null)) {
                    this.get_AllReferralsByReceiverIDRowChanging(this, new get_AllReferralsByReceiverIDRowChangeEvent(((get_AllReferralsByReceiverIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.get_AllReferralsByReceiverIDRowDeleted != null)) {
                    this.get_AllReferralsByReceiverIDRowDeleted(this, new get_AllReferralsByReceiverIDRowChangeEvent(((get_AllReferralsByReceiverIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.get_AllReferralsByReceiverIDRowDeleting != null)) {
                    this.get_AllReferralsByReceiverIDRowDeleting(this, new get_AllReferralsByReceiverIDRowChangeEvent(((get_AllReferralsByReceiverIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeget_AllReferralsByReceiverIDRow(get_AllReferralsByReceiverIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReferrals ds = new dsReferrals();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "get_AllReferralsByReceiverIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class get_AllReferralsByReceiverIDRow : global::System.Data.DataRow {
            
            private get_AllReferralsByReceiverIDDataTable tableget_AllReferralsByReceiverID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal get_AllReferralsByReceiverIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableget_AllReferralsByReceiverID = ((get_AllReferralsByReceiverIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MsgID {
                get {
                    return ((long)(this[this.tableget_AllReferralsByReceiverID.MsgIDColumn]));
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MemberID {
                get {
                    return ((int)(this[this.tableget_AllReferralsByReceiverID.MemberIDColumn]));
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ToPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableget_AllReferralsByReceiverID.ToPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToPhoneNumber\' in table \'get_AllReferralsByReceiverID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.ToPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FromPhonenumber {
                get {
                    try {
                        return ((string)(this[this.tableget_AllReferralsByReceiverID.FromPhonenumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromPhonenumber\' in table \'get_AllReferralsByReceiverID\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.FromPhonenumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FromAddress {
                get {
                    try {
                        return ((string)(this[this.tableget_AllReferralsByReceiverID.FromAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromAddress\' in table \'get_AllReferralsByReceiverID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.FromAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ToAddress {
                get {
                    try {
                        return ((string)(this[this.tableget_AllReferralsByReceiverID.ToAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToAddress\' in table \'get_AllReferralsByReceiverID\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.ToAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MsgText {
                get {
                    try {
                        return ((string)(this[this.tableget_AllReferralsByReceiverID.MsgTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MsgText\' in table \'get_AllReferralsByReceiverID\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MsgSubject {
                get {
                    try {
                        return ((string)(this[this.tableget_AllReferralsByReceiverID.MsgSubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MsgSubject\' in table \'get_AllReferralsByReceiverID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgSubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MsgTitle {
                get {
                    try {
                        return ((string)(this[this.tableget_AllReferralsByReceiverID.MsgTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MsgTitle\' in table \'get_AllReferralsByReceiverID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MsgPriority {
                get {
                    try {
                        return ((int)(this[this.tableget_AllReferralsByReceiverID.MsgPriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MsgPriority\' in table \'get_AllReferralsByReceiverID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgPriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MsgType {
                get {
                    try {
                        return ((string)(this[this.tableget_AllReferralsByReceiverID.MsgTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MsgType\' in table \'get_AllReferralsByReceiverID\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SenderNetworkID {
                get {
                    try {
                        return ((int)(this[this.tableget_AllReferralsByReceiverID.SenderNetworkIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SenderNetworkID\' in table \'get_AllReferralsByReceiverID\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.SenderNetworkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SenderSponsorID {
                get {
                    try {
                        return ((int)(this[this.tableget_AllReferralsByReceiverID.SenderSponsorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SenderSponsorID\' in table \'get_AllReferralsByReceiverID\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.SenderSponsorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SenderMemberID {
                get {
                    return ((int)(this[this.tableget_AllReferralsByReceiverID.SenderMemberIDColumn]));
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.SenderMemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReceiverMemberID {
                get {
                    try {
                        return ((int)(this[this.tableget_AllReferralsByReceiverID.ReceiverMemberIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiverMemberID\' in table \'get_AllReferralsByReceiverID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.ReceiverMemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReceiverSponsorID {
                get {
                    try {
                        return ((int)(this[this.tableget_AllReferralsByReceiverID.ReceiverSponsorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiverSponsorID\' in table \'get_AllReferralsByReceiverID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.ReceiverSponsorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReceiverNetworkID {
                get {
                    try {
                        return ((int)(this[this.tableget_AllReferralsByReceiverID.ReceiverNetworkIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiverNetworkID\' in table \'get_AllReferralsByReceiverID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.ReceiverNetworkIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MsgSent {
                get {
                    try {
                        return ((bool)(this[this.tableget_AllReferralsByReceiverID.MsgSentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MsgSent\' in table \'get_AllReferralsByReceiverID\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgSentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MsgURL {
                get {
                    try {
                        return ((string)(this[this.tableget_AllReferralsByReceiverID.MsgURLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MsgURL\' in table \'get_AllReferralsByReceiverID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MessageRecorded {
                get {
                    try {
                        return ((bool)(this[this.tableget_AllReferralsByReceiverID.MessageRecordedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MessageRecorded\' in table \'get_AllReferralsByReceiverID\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MessageRecordedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MsgCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableget_AllReferralsByReceiverID.MsgCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MsgCreated\' in table \'get_AllReferralsByReceiverID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MsgReceived {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableget_AllReferralsByReceiverID.MsgReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MsgReceived\' in table \'get_AllReferralsByReceiverID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LastUpdatedBy {
                get {
                    try {
                        return ((int)(this[this.tableget_AllReferralsByReceiverID.LastUpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedBy\' in table \'get_AllReferralsByReceiverID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastUpdated {
                get {
                    return ((global::System.DateTime)(this[this.tableget_AllReferralsByReceiverID.LastUpdatedColumn]));
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.LastUpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MsgStatus {
                get {
                    return ((string)(this[this.tableget_AllReferralsByReceiverID.MsgStatusColumn]));
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.MsgStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApproved {
                get {
                    return ((bool)(this[this.tableget_AllReferralsByReceiverID.IsApprovedColumn]));
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.IsApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAcknowledged {
                get {
                    return ((bool)(this[this.tableget_AllReferralsByReceiverID.IsAcknowledgedColumn]));
                }
                set {
                    this[this.tableget_AllReferralsByReceiverID.IsAcknowledgedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToPhoneNumberNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.ToPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToPhoneNumberNull() {
                this[this.tableget_AllReferralsByReceiverID.ToPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFromPhonenumberNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.FromPhonenumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFromPhonenumberNull() {
                this[this.tableget_AllReferralsByReceiverID.FromPhonenumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFromAddressNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.FromAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFromAddressNull() {
                this[this.tableget_AllReferralsByReceiverID.FromAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToAddressNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.ToAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToAddressNull() {
                this[this.tableget_AllReferralsByReceiverID.ToAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsgTextNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MsgTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsgTextNull() {
                this[this.tableget_AllReferralsByReceiverID.MsgTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsgSubjectNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MsgSubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsgSubjectNull() {
                this[this.tableget_AllReferralsByReceiverID.MsgSubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsgTitleNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MsgTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsgTitleNull() {
                this[this.tableget_AllReferralsByReceiverID.MsgTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsgPriorityNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MsgPriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsgPriorityNull() {
                this[this.tableget_AllReferralsByReceiverID.MsgPriorityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsgTypeNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MsgTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsgTypeNull() {
                this[this.tableget_AllReferralsByReceiverID.MsgTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSenderNetworkIDNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.SenderNetworkIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSenderNetworkIDNull() {
                this[this.tableget_AllReferralsByReceiverID.SenderNetworkIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSenderSponsorIDNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.SenderSponsorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSenderSponsorIDNull() {
                this[this.tableget_AllReferralsByReceiverID.SenderSponsorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceiverMemberIDNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.ReceiverMemberIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceiverMemberIDNull() {
                this[this.tableget_AllReferralsByReceiverID.ReceiverMemberIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceiverSponsorIDNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.ReceiverSponsorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceiverSponsorIDNull() {
                this[this.tableget_AllReferralsByReceiverID.ReceiverSponsorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceiverNetworkIDNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.ReceiverNetworkIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceiverNetworkIDNull() {
                this[this.tableget_AllReferralsByReceiverID.ReceiverNetworkIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsgSentNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MsgSentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsgSentNull() {
                this[this.tableget_AllReferralsByReceiverID.MsgSentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsgURLNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MsgURLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsgURLNull() {
                this[this.tableget_AllReferralsByReceiverID.MsgURLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMessageRecordedNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MessageRecordedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMessageRecordedNull() {
                this[this.tableget_AllReferralsByReceiverID.MessageRecordedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsgCreatedNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MsgCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsgCreatedNull() {
                this[this.tableget_AllReferralsByReceiverID.MsgCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsgReceivedNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.MsgReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsgReceivedNull() {
                this[this.tableget_AllReferralsByReceiverID.MsgReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastUpdatedByNull() {
                return this.IsNull(this.tableget_AllReferralsByReceiverID.LastUpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastUpdatedByNull() {
                this[this.tableget_AllReferralsByReceiverID.LastUpdatedByColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class get_AllReferralsByReceiverIDRowChangeEvent : global::System.EventArgs {
            
            private get_AllReferralsByReceiverIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public get_AllReferralsByReceiverIDRowChangeEvent(get_AllReferralsByReceiverIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public get_AllReferralsByReceiverIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateWorkerStatusCompletedEventHandler(object sender, UpdateWorkerStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkerStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkerStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CloseServiceRequestCompletedEventHandler(object sender, CloseServiceRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseServiceRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseServiceRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddServiceRequestCompletedEventHandler(object sender, AddServiceRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddServiceRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddServiceRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddWorkerAssigmentCompletedEventHandler(object sender, AddWorkerAssigmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWorkerAssigmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWorkerAssigmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateWorkerAssigmentCompletedEventHandler(object sender, UpdateWorkerAssigmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkerAssigmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkerAssigmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWorkerAssigmentsCompletedEventHandler(object sender, GetWorkerAssigmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkerAssigmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkerAssigmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWorkerAssigmentsByTypeCompletedEventHandler(object sender, GetWorkerAssigmentsByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkerAssigmentsByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkerAssigmentsByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WorkflowRptSummaryCompletedEventHandler(object sender, WorkflowRptSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkflowRptSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkflowRptSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CallRptAllSummaryCompletedEventHandler(object sender, CallRptAllSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallRptAllSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallRptAllSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CallRptAcctTypeSummaryCompletedEventHandler(object sender, CallRptAcctTypeSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallRptAcctTypeSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallRptAcctTypeSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CallRptAcctTypeSummaryDatesCompletedEventHandler(object sender, CallRptAcctTypeSummaryDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallRptAcctTypeSummaryDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallRptAcctTypeSummaryDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CallRptPhoneSummaryCompletedEventHandler(object sender, CallRptPhoneSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallRptPhoneSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallRptPhoneSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInactiveCallerInfoByIdDSCompletedEventHandler(object sender, GetInactiveCallerInfoByIdDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInactiveCallerInfoByIdDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInactiveCallerInfoByIdDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BuildBCSCodeDefCompletedEventHandler(object sender, BuildBCSCodeDefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildBCSCodeDefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildBCSCodeDefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptDataSummaryCompletedEventHandler(object sender, RptDataSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptDataSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptDataSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptScheduledCallsCompletedEventHandler(object sender, RptScheduledCallsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptScheduledCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptScheduledCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dsRptScheduledCalls Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dsRptScheduledCalls)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptMemberCallsCompletedEventHandler(object sender, RptMemberCallsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptMemberCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptMemberCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dsRptMemberCalls Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dsRptMemberCalls)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptCallerCountsCompletedEventHandler(object sender, RptCallerCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptCallerCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptCallerCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dsRptCallLogCounts Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dsRptCallLogCounts)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptCallerCountsByDateCompletedEventHandler(object sender, RptCallerCountsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptCallerCountsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptCallerCountsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dsRptCallCountByDate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dsRptCallCountByDate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptBcsMinMaxCountsByDateCompletedEventHandler(object sender, RptBcsMinMaxCountsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptBcsMinMaxCountsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptBcsMinMaxCountsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallStatusByPhoneCompletedEventHandler(object sender, GetCallStatusByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallStatusByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallStatusByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallStatusClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallStatusClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallStatusCompletedEventHandler(object sender, GetCallStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallStatusClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallStatusClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptCallerByPhoneCompletedEventHandler(object sender, RptCallerByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptCallerByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptCallerByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dsRptPhoneNumberCalls Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dsRptPhoneNumberCalls)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptCallerCountsByDayHrCompletedEventHandler(object sender, RptCallerCountsByDayHrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptCallerCountsByDayHrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptCallerCountsByDayHrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dsRptCountByDayHr Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dsRptCountByDayHr)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptReceivedReferralsCompletedEventHandler(object sender, RptReceivedReferralsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptReceivedReferralsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptReceivedReferralsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dsReferrals Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dsReferrals)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptBcsTestDataCompletedEventHandler(object sender, RptBcsTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptBcsTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptBcsTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptBcsTestByAcctCodeCompletedEventHandler(object sender, RptBcsTestByAcctCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptBcsTestByAcctCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptBcsTestByAcctCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptBillingCompletedEventHandler(object sender, RptBillingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RptDashboardCompletedEventHandler(object sender, RptDashboardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RptDashboardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RptDashboardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReferralsCompletedEventHandler(object sender, GetReferralsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferralsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferralsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddMemberNotesCompletedEventHandler(object sender, AddMemberNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMemberNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMemberNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddMemberNotesTestCompletedEventHandler(object sender, AddMemberNotesTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMemberNotesTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMemberNotesTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateMemberNotesCompletedEventHandler(object sender, UpdateMemberNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAccountTypeCodeCompletedEventHandler(object sender, UpdateAccountTypeCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountTypeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountTypeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMemberNotesCompletedEventHandler(object sender, GetMemberNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReferralClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReferralClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMemberNotesTestCompletedEventHandler(object sender, GetMemberNotesTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberNotesTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberNotesTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessQueryParameters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessQueryParameters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNotesByIDCompletedEventHandler(object sender, GetNotesByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotesByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotesByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveReferralCompletedEventHandler(object sender, SaveReferralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReferralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReferralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateReferralCompletedEventHandler(object sender, UpdateReferralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReferralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReferralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsConnectionValidCompletedEventHandler(object sender, IsConnectionValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsConnectionValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsConnectionValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessHealthVaultDataCompletedEventHandler(object sender, ProcessHealthVaultDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessHealthVaultDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessHealthVaultDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BCNHvDataClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BCNHvDataClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddBCSTestLogProfileCompletedEventHandler(object sender, AddBCSTestLogProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBCSTestLogProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBCSTestLogProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateBcsTestLogCompletedEventHandler(object sender, UpdateBcsTestLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBcsTestLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBcsTestLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateBCSLogCompletedEventHandler(object sender, UpdateBCSLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBCSLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBCSLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateBCSLog2CompletedEventHandler(object sender, UpdateBCSLog2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBCSLog2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBCSLog2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddBCSTestLogHVCompletedEventHandler(object sender, AddBCSTestLogHVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBCSTestLogHVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBCSTestLogHVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddBcsTestLogHVProfileCompletedEventHandler(object sender, AddBcsTestLogHVProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBcsTestLogHVProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBcsTestLogHVProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMedicationByNameCompletedEventHandler(object sender, GetMedicationByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicationByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicationByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MedicationClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MedicationClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMedicationByNameStgCompletedEventHandler(object sender, GetMedicationByNameStgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicationByNameStgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicationByNameStgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MedicationClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MedicationClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMedicationByNameStgPakCompletedEventHandler(object sender, GetMedicationByNameStgPakCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicationByNameStgPakCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicationByNameStgPakCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MedicationClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MedicationClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllProviderPrefByMemberIDCompletedEventHandler(object sender, GetAllProviderPrefByMemberIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProviderPrefByMemberIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProviderPrefByMemberIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllProviderPrefByProviderIDCompletedEventHandler(object sender, GetAllProviderPrefByProviderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProviderPrefByProviderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProviderPrefByProviderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllProviderPrefByProvIDCompletedEventHandler(object sender, GetAllProviderPrefByProvIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProviderPrefByProvIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProviderPrefByProvIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProviderPrefListByTypeCompletedEventHandler(object sender, GetProviderPrefListByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderPrefListByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderPrefListByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProviderPrefListByMemberIDCompletedEventHandler(object sender, GetProviderPrefListByMemberIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderPrefListByMemberIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderPrefListByMemberIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProviderInfoByMemberIDCompletedEventHandler(object sender, GetProviderInfoByMemberIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderInfoByMemberIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderInfoByMemberIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateProviderPrefInfoCompletedEventHandler(object sender, UpdateProviderPrefInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProviderPrefInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProviderPrefInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteProviderPrefInfoCompletedEventHandler(object sender, DeleteProviderPrefInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProviderPrefInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProviderPrefInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadMemberProfileCompletedEventHandler(object sender, LoadMemberProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMemberProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMemberProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BCNProfile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BCNProfile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProfileByMemberIDCompletedEventHandler(object sender, GetProfileByMemberIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileByMemberIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileByMemberIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveMemberProfileCompletedEventHandler(object sender, SaveMemberProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMemberProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMemberProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BCNProfile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BCNProfile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateMemberProfileCompletedEventHandler(object sender, UpdateMemberProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BCNProfile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BCNProfile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetShortCodesCompletedEventHandler(object sender, GetShortCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShortCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShortCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllShortCodesCompletedEventHandler(object sender, GetAllShortCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllShortCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllShortCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateShortCodesCompletedEventHandler(object sender, UpdateShortCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateShortCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateShortCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddShortCodeCompletedEventHandler(object sender, AddShortCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddShortCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddShortCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteShortCodeCompletedEventHandler(object sender, DeleteShortCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteShortCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteShortCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MSTranslateCompletedEventHandler(object sender, MSTranslateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MSTranslateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MSTranslateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConnectMobileCaregiverCompletedEventHandler(object sender, ConnectMobileCaregiverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectMobileCaregiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectMobileCaregiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LogonClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LogonClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddContactInfoCompletedEventHandler(object sender, AddContactInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContactInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContactInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddProviderPrefInfoCompletedEventHandler(object sender, AddProviderPrefInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProviderPrefInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProviderPrefInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddContactInfoByIDCompletedEventHandler(object sender, AddContactInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContactInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContactInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddGroupMessageInfoCompletedEventHandler(object sender, AddGroupMessageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupMessageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupMessageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddMemberMessageInfoWithDatesCompletedEventHandler(object sender, AddMemberMessageInfoWithDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMemberMessageInfoWithDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMemberMessageInfoWithDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateMemberMessageInfoWithDatesCompletedEventHandler(object sender, UpdateMemberMessageInfoWithDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberMessageInfoWithDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberMessageInfoWithDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateMemberMessageResponseCompletedEventHandler(object sender, UpdateMemberMessageResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberMessageResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberMessageResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateMemberMessageResponsesCompletedEventHandler(object sender, UpdateMemberMessageResponsesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberMessageResponsesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberMessageResponsesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddMemberMessageInfoWithDatesIDCompletedEventHandler(object sender, AddMemberMessageInfoWithDatesIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMemberMessageInfoWithDatesIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMemberMessageInfoWithDatesIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddGroupMessageInfoWithDatesCompletedEventHandler(object sender, AddGroupMessageInfoWithDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupMessageInfoWithDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupMessageInfoWithDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddMessageResponseCompletedEventHandler(object sender, AddMessageResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMessageResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMessageResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateContactInfoCompletedEventHandler(object sender, UpdateContactInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContactInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContactInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ArchiveBcsTestLogCompletedEventHandler(object sender, ArchiveBcsTestLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchiveBcsTestLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchiveBcsTestLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteContactInfoCompletedEventHandler(object sender, DeleteContactInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContactInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContactInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddToBCNetworkCompletedEventHandler(object sender, AddToBCNetworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToBCNetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToBCNetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TranferToNewNetworkCompletedEventHandler(object sender, TranferToNewNetworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TranferToNewNetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TranferToNewNetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveFromBCNetworkCompletedEventHandler(object sender, RemoveFromBCNetworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFromBCNetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFromBCNetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddScheduleInfoCompletedEventHandler(object sender, AddScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddMemberReminderCompletedEventHandler(object sender, AddMemberReminderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMemberReminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMemberReminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddScheduleInfoTZCompletedEventHandler(object sender, AddScheduleInfoTZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleInfoTZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleInfoTZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddScheduleInfoResponseTZCompletedEventHandler(object sender, AddScheduleInfoResponseTZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleInfoResponseTZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleInfoResponseTZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddScheduleInfoRandomTZCompletedEventHandler(object sender, AddScheduleInfoRandomTZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleInfoRandomTZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleInfoRandomTZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddGroupScheduleInfoTZCompletedEventHandler(object sender, AddGroupScheduleInfoTZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupScheduleInfoTZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupScheduleInfoTZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddNowScheduleInfoCompletedEventHandler(object sender, AddNowScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNowScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNowScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddNowGroupScheduleInfoCompletedEventHandler(object sender, AddNowGroupScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNowGroupScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNowGroupScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddNowCGGroupScheduleInfoCompletedEventHandler(object sender, AddNowCGGroupScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNowCGGroupScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNowCGGroupScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateScheduleInfoCompletedEventHandler(object sender, UpdateScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateScheduleInfoTZCompletedEventHandler(object sender, UpdateScheduleInfoTZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateScheduleInfoTZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateScheduleInfoTZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelGroupScheduleInfoCompletedEventHandler(object sender, DelGroupScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelGroupScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelGroupScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelScheduleInfoCompletedEventHandler(object sender, DelScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelMemberScheduleInfoCompletedEventHandler(object sender, DelMemberScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMemberScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMemberScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PurgeMemberByIDCompletedEventHandler(object sender, PurgeMemberByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurgeMemberByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurgeMemberByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PurgeMemberByPhoneCompletedEventHandler(object sender, PurgeMemberByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurgeMemberByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurgeMemberByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelMemberLogonAllCompletedEventHandler(object sender, DelMemberLogonAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMemberLogonAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMemberLogonAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelMemberLogonCompletedEventHandler(object sender, DelMemberLogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMemberLogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMemberLogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelMessagesByAcctTypeCompletedEventHandler(object sender, DelMessagesByAcctTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMessagesByAcctTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMessagesByAcctTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DelMessagesByIDCompletedEventHandler(object sender, DelMessagesByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelMessagesByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelMessagesByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallerMemberIDCompletedEventHandler(object sender, GetCallerMemberIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallerMemberIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallerMemberIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendTestMsgCompletedEventHandler(object sender, SendTestMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTestMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTestMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendTestMsgInternationalCompletedEventHandler(object sender, SendTestMsgInternationalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTestMsgInternationalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTestMsgInternationalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendTestMsgInternationalAttachmentsCompletedEventHandler(object sender, SendTestMsgInternationalAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTestMsgInternationalAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTestMsgInternationalAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendTestMsgInternational2CompletedEventHandler(object sender, SendTestMsgInternational2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTestMsgInternational2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTestMsgInternational2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifiyAllCareGiversCompletedEventHandler(object sender, NotifiyAllCareGiversCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifiyAllCareGiversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifiyAllCareGiversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifiyAllNetworkCompletedEventHandler(object sender, NotifiyAllNetworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifiyAllNetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifiyAllNetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifiyAllSponsorshipsCompletedEventHandler(object sender, NotifiyAllSponsorshipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifiyAllSponsorshipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifiyAllSponsorshipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendNotificationMsgCompletedEventHandler(object sender, SendNotificationMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNotificationMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNotificationMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendAllCGMsgCompletedEventHandler(object sender, SendAllCGMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAllCGMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAllCGMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ContactNextBackupCompletedEventHandler(object sender, ContactNextBackupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactNextBackupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactNextBackupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BroadcastAlertCompletedEventHandler(object sender, BroadcastAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BroadcastAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BroadcastAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BroadcastWAPCompletedEventHandler(object sender, BroadcastWAPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BroadcastWAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BroadcastWAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LookupSMSAddressCompletedEventHandler(object sender, LookupSMSAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LookupSMSAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LookupSMSAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddVoiceSubscriberInfoCompletedEventHandler(object sender, AddVoiceSubscriberInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVoiceSubscriberInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVoiceSubscriberInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddWebBuddyCallScheduleCompletedEventHandler(object sender, AddWebBuddyCallScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWebBuddyCallScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWebBuddyCallScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddWebBuddySubscriberInfoCompletedEventHandler(object sender, AddWebBuddySubscriberInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWebBuddySubscriberInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWebBuddySubscriberInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddWebSubscriberInfoCompletedEventHandler(object sender, AddWebSubscriberInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWebSubscriberInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWebSubscriberInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoFromScheduleXMLCompletedEventHandler(object sender, GetInfoFromScheduleXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoFromScheduleXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoFromScheduleXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoFromScheduleCompletedEventHandler(object sender, GetInfoFromScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoFromScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoFromScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResetPINCompletedEventHandler(object sender, ResetPINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendEASAlertsCompletedEventHandler(object sender, SendEASAlertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEASAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEASAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddWEPScheduleAlertCompletedEventHandler(object sender, AddWEPScheduleAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWEPScheduleAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWEPScheduleAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddWEPMembershipCompletedEventHandler(object sender, AddWEPMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWEPMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWEPMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddWEPMembershipsCompletedEventHandler(object sender, AddWEPMembershipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWEPMembershipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWEPMembershipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateWEPMembershipsCompletedEventHandler(object sender, UpdateWEPMembershipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWEPMembershipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWEPMembershipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateWEPMembershipCompletedEventHandler(object sender, UpdateWEPMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWEPMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWEPMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWEPMembersCompletedEventHandler(object sender, GetWEPMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWEPMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWEPMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWEPMembersScheduleCompletedEventHandler(object sender, GetWEPMembersScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWEPMembersScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWEPMembersScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteWEPMembershipCompletedEventHandler(object sender, DeleteWEPMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWEPMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWEPMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BuildPromptCompletedEventHandler(object sender, BuildPromptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildPromptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildPromptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BuildErrorPromptCompletedEventHandler(object sender, BuildErrorPromptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildErrorPromptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildErrorPromptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConvertGMTToCurrentDateCompletedEventHandler(object sender, ConvertGMTToCurrentDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertGMTToCurrentDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertGMTToCurrentDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConvertFromGMTDateTimeCompletedEventHandler(object sender, ConvertFromGMTDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertFromGMTDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertFromGMTDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CalcGMTMinTimeCompletedEventHandler(object sender, CalcGMTMinTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcGMTMinTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcGMTMinTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CalcGMTDateCompletedEventHandler(object sender, CalcGMTDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcGMTDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcGMTDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateWorkerMessageCompletedEventHandler(object sender, UpdateWorkerMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkerMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkerMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLogonCompletedEventHandler(object sender, GetLogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GeneratePswdCompletedEventHandler(object sender, GeneratePswdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePswdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePswdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateUniquePhoneIDCompletedEventHandler(object sender, GenerateUniquePhoneIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateUniquePhoneIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateUniquePhoneIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLogonUserInfoCompletedEventHandler(object sender, GetLogonUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogonUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogonUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserLicKeyCompletedEventHandler(object sender, GetUserLicKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLicKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLicKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUplineSponsorDSCompletedEventHandler(object sender, GetUplineSponsorDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUplineSponsorDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUplineSponsorDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUplineSponsorCompletedEventHandler(object sender, GetUplineSponsorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUplineSponsorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUplineSponsorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BuildSMSAddressCompletedEventHandler(object sender, BuildSMSAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildSMSAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildSMSAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallInfoByIDDSCompletedEventHandler(object sender, GetCallInfoByIDDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallInfoByIDDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallInfoByIDDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallInfoByPhoneDSCompletedEventHandler(object sender, GetCallInfoByPhoneDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallInfoByPhoneDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallInfoByPhoneDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDupCheckPhoneNumbersCompletedEventHandler(object sender, GetDupCheckPhoneNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDupCheckPhoneNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDupCheckPhoneNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallInfoByIDCompletedEventHandler(object sender, GetCallInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallInfoByPhoneCompletedEventHandler(object sender, GetCallInfoByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallInfoByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallInfoByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllBuddysByCaregiverPhoneCompletedEventHandler(object sender, GetAllBuddysByCaregiverPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBuddysByCaregiverPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBuddysByCaregiverPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllBuddysByCaregiverIDCompletedEventHandler(object sender, GetAllBuddysByCaregiverIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBuddysByCaregiverIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBuddysByCaregiverIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallInfoByFullNameCompletedEventHandler(object sender, GetCallInfoByFullNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallInfoByFullNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallInfoByFullNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallInfoByLtNameCompletedEventHandler(object sender, GetCallInfoByLtNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallInfoByLtNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallInfoByLtNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsAuthorizedToAddMemberCompletedEventHandler(object sender, IsAuthorizedToAddMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAuthorizedToAddMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAuthorizedToAddMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Callers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Callers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CanViewMemberCompletedEventHandler(object sender, CanViewMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanViewMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanViewMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsUserSalesCompletedEventHandler(object sender, IsUserSalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserSalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserSalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsUserMgrCompletedEventHandler(object sender, IsUserMgrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserMgrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserMgrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsUserOwnerCompletedEventHandler(object sender, IsUserOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsRegisteredPhoneCompletedEventHandler(object sender, IsRegisteredPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRegisteredPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRegisteredPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsUserAdminCompletedEventHandler(object sender, IsUserAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessagesInfoByAcctCompletedEventHandler(object sender, GetMessagesInfoByAcctCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesInfoByAcctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesInfoByAcctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessagesInfoByToCompletedEventHandler(object sender, GetMessagesInfoByToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesInfoByToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesInfoByToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessagesResponseInfoCompletedEventHandler(object sender, GetMessagesResponseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesResponseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesResponseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessagesInfoCompletedEventHandler(object sender, GetMessagesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConvertToSmsAddressCompletedEventHandler(object sender, ConvertToSmsAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertToSmsAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertToSmsAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllContactListByMemberIDCompletedEventHandler(object sender, GetAllContactListByMemberIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllContactListByMemberIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllContactListByMemberIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetContactListByRoleCompletedEventHandler(object sender, GetContactListByRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactListByRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactListByRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetScheduleInfoCompletedEventHandler(object sender, GetScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllScheduleInfoCompletedEventHandler(object sender, GetAllScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllScheduleInfoSecureCompletedEventHandler(object sender, GetAllScheduleInfoSecureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScheduleInfoSecureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScheduleInfoSecureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSingleScheduleInfoCompletedEventHandler(object sender, GetSingleScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCategoryScheduleInfoCompletedEventHandler(object sender, GetCategoryScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubCategoryScheduleInfoCompletedEventHandler(object sender, GetSubCategoryScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubCategoryScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubCategoryScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSmsProviderInfoCompletedEventHandler(object sender, GetSmsProviderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsProviderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsProviderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSmsProviderInfoByAddrCompletedEventHandler(object sender, GetSmsProviderInfoByAddrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsProviderInfoByAddrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsProviderInfoByAddrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetZipcodeInfoCompletedEventHandler(object sender, GetZipcodeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZipcodeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZipcodeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccountTypesCompletedEventHandler(object sender, GetAccountTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProviderTypesCompletedEventHandler(object sender, GetProviderTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProvidersInfoCompletedEventHandler(object sender, GetProvidersInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProvidersInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProvidersInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProvidersDefaultInfoCompletedEventHandler(object sender, GetProvidersDefaultInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProvidersDefaultInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProvidersDefaultInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProvidersInfoByTypeCompletedEventHandler(object sender, GetProvidersInfoByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProvidersInfoByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProvidersInfoByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallerInfoByExtRefIDCompletedEventHandler(object sender, GetCallerInfoByExtRefIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallerInfoByExtRefIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallerInfoByExtRefIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubscribersInfoAdminCompletedEventHandler(object sender, GetSubscribersInfoAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscribersInfoAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscribersInfoAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubscribersInfoByAcctTypeCompletedEventHandler(object sender, GetSubscribersInfoByAcctTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscribersInfoByAcctTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscribersInfoByAcctTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubscribersInfoBySponIDCompletedEventHandler(object sender, GetSubscribersInfoBySponIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscribersInfoBySponIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscribersInfoBySponIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubscribersInfoByNetworkIDCompletedEventHandler(object sender, GetSubscribersInfoByNetworkIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscribersInfoByNetworkIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscribersInfoByNetworkIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubscribersInfoByAcctTypeCodeCompletedEventHandler(object sender, GetSubscribersInfoByAcctTypeCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscribersInfoByAcctTypeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscribersInfoByAcctTypeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubscribersInfoLikeAcctTypeCodeCompletedEventHandler(object sender, GetSubscribersInfoLikeAcctTypeCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscribersInfoLikeAcctTypeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscribersInfoLikeAcctTypeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubscribersInfoByTypeCDCompletedEventHandler(object sender, GetSubscribersInfoByTypeCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscribersInfoByTypeCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscribersInfoByTypeCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLinkedSubscribersInfoCompletedEventHandler(object sender, GetLinkedSubscribersInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkedSubscribersInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkedSubscribersInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddSubscriberInfoCompletedEventHandler(object sender, AddSubscriberInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSubscriberInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSubscriberInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateSubscriberInfoCompletedEventHandler(object sender, UpdateSubscriberInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSubscriberInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSubscriberInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TurnScheduledCallOffCompletedEventHandler(object sender, TurnScheduledCallOffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnScheduledCallOffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TurnScheduledCallOffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TurnAllMemberCallsOffCompletedEventHandler(object sender, TurnAllMemberCallsOffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnAllMemberCallsOffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TurnAllMemberCallsOffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TurnAllMemberCallsOffByIDCompletedEventHandler(object sender, TurnAllMemberCallsOffByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TurnAllMemberCallsOffByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TurnAllMemberCallsOffByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddCallLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddCallQueueCompletedEventHandler(object sender, AddCallQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCallQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCallQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallQueueCompletedEventHandler(object sender, GetCallQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCallQueueByPhoneCompletedEventHandler(object sender, GetCallQueueByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallQueueByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallQueueByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteCallQueueCompletedEventHandler(object sender, DeleteCallQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCallQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCallQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteCallQueueByPhoneCompletedEventHandler(object sender, DeleteCallQueueByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCallQueueByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCallQueueByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddCallLogBCNCompletedEventHandler(object sender, AddCallLogBCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCallLogBCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCallLogBCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddFinalCallLogBCNCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddNewNetworkCompletedEventHandler(object sender, AddNewNetworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewNetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewNetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddNewLoginCompletedEventHandler(object sender, AddNewLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResetLoginCompletedEventHandler(object sender, ResetLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591